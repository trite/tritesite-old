
(subdir node_modules/bisect_ppx/src/runtime/js
(rule
(targets  jest.ast)
 (deps (:inputs  jest.ml)  ../../../../../.melange.eobjs/node_modules/bisect_ppx/.bsbuild)
(action
 (run melc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  jest.d)
 (deps (:inputs  ../../.././src/runtime/js/jest.ast) )
(action (run meldep  -root-dir ../../../../.. -p bisect_ppx -proj-dir ../../..  -bs-ns Bisect %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  jest-Bisect.cmj jest-Bisect.cmi jest-Bisect.cmt jest.bs.js)
 (alias mel)
 (deps (:inputs  jest.ast)  (include jest.d) ../../../bsconfig.json ../../../../../.melange.eobjs/node_modules/bisect_ppx/Bisect.cmi)
(action
  (run melc -bs-ns Bisect -I ../../common -I . -I ../../../../../.melange.eobjs/node_modules/bisect_ppx   -w a -bs-package-name bisect_ppx -bs-package-output commonjs:./src/runtime/js:.bs.js -o jest-Bisect.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  runtime.ast)
 (deps (:inputs  runtime.ml)  ../../../../../.melange.eobjs/node_modules/bisect_ppx/.bsbuild)
(action
 (run melc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  runtime.d)
 (deps (:inputs  ../../.././src/runtime/js/runtime.ast ../../.././src/runtime/js/runtime.iast) )
(action (run meldep  -root-dir ../../../../.. -p bisect_ppx -proj-dir ../../..  -bs-ns Bisect %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  runtime.iast)
 (deps (:inputs  runtime.mli) )
(action
 (run melc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  runtime-Bisect.cmi runtime-Bisect.cmti)
 (alias mel)
 (deps (:inputs  runtime.iast)  (include runtime.d) ../../../bsconfig.json ../../../../../.melange.eobjs/node_modules/bisect_ppx/Bisect.cmi)
(action
  (run melc -bs-ns Bisect -I ../../common -I . -I ../../../../../.melange.eobjs/node_modules/bisect_ppx   -w a -o runtime-Bisect.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  runtime-Bisect.cmj runtime-Bisect.cmt runtime.bs.js)
 (alias mel)
 (deps (:inputs  runtime.ast)  runtime-Bisect.cmi (include runtime.d) ../../../bsconfig.json ../../../../../.melange.eobjs/node_modules/bisect_ppx/Bisect.cmi)
(action
  (run melc -bs-ns Bisect -bs-read-cmi -I ../../common -I . -I ../../../../../.melange.eobjs/node_modules/bisect_ppx   -w a -bs-package-name bisect_ppx -bs-package-output commonjs:./src/runtime/js:.bs.js -o runtime-Bisect.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 )
(subdir node_modules/bisect_ppx/src/common
(rule
(targets  bisect_common.ast)
 (deps (:inputs  bisect_common.ml)  ../../../../.melange.eobjs/node_modules/bisect_ppx/.bsbuild)
(action
 (run melc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  bisect_common.d)
 (deps (:inputs  ../.././src/common/bisect_common.ast ../.././src/common/bisect_common.iast) )
(action (run meldep  -root-dir ../../../.. -p bisect_ppx -proj-dir ../..  -bs-ns Bisect %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  bisect_common.iast)
 (deps (:inputs  bisect_common.mli) )
(action
 (run melc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  bisect_common-Bisect.cmi bisect_common-Bisect.cmti)
 (alias mel)
 (deps (:inputs  bisect_common.iast)  (include bisect_common.d) ../../bsconfig.json ../../../../.melange.eobjs/node_modules/bisect_ppx/Bisect.cmi)
(action
  (run melc -bs-ns Bisect -I . -I ../runtime/js -I ../../../../.melange.eobjs/node_modules/bisect_ppx   -w a -o bisect_common-Bisect.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  bisect_common-Bisect.cmj bisect_common-Bisect.cmt bisect_common.bs.js)
 (alias mel)
 (deps (:inputs  bisect_common.ast)  bisect_common-Bisect.cmi (include bisect_common.d) ../../bsconfig.json ../../../../.melange.eobjs/node_modules/bisect_ppx/Bisect.cmi)
(action
  (run melc -bs-ns Bisect -bs-read-cmi -I . -I ../runtime/js -I ../../../../.melange.eobjs/node_modules/bisect_ppx   -w a -bs-package-name bisect_ppx -bs-package-output commonjs:./src/common:.bs.js -o bisect_common-Bisect.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 )

(subdir .melange.eobjs/node_modules/bisect_ppx
(rule (with-stdout-to Bisect.mlmap (run echo "Jest
Runtime
Bisect_common
")))(rule
(targets  Bisect.cmi)
 (deps (:inputs  Bisect.mlmap) )
(action (run melc -w -49 -color always -no-alias-deps %{inputs}))
(enabled_if %{bin-available:melc}) )
 
(rule (write-file .bsbuild MwpKZXN0ClJ1bnRpbWUKQmlzZWN0X2NvbW1vbgouL3NyYy9ydW50aW1lL2pzCS4vc3JjL2NvbW1vbgkKMQAAAgowCg==))
)

(subdir node_modules/bs-bastet/bastet_js/src
(rule
(targets  Date.ast)
 (deps (:inputs  Date.ml)  ../../../../.melange.eobjs/node_modules/bs-bastet/.bsbuild)
(action
 (run melc  -w a -ppx /home/trite/git/tritesite/node_modules/bisect_ppx/ppx -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Date.d)
 (deps (:inputs  ../.././bastet_js/src/Date.ast) )
(action (run meldep  -root-dir ../../../.. -p bs-bastet -proj-dir ../..  -bs-ns BsBastet %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Date-BsBastet.cmj Date-BsBastet.cmi Date-BsBastet.cmt Date.bs.js)
 (alias mel)
 (deps (:inputs  Date.ast)  (include Date.d) ../../bsconfig.json ../../../../.melange.eobjs/node_modules/bs-bastet/BsBastet.cmi(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel))
(action
  (run melc -bs-ns BsBastet -I ../../bastet/src -I . -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -bs-super-errors  -w a -bs-package-name bs-bastet -bs-package-output commonjs:./bastet_js/src:.bs.js -o Date-BsBastet.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Dict.ast)
 (deps (:inputs  Dict.ml)  ../../../../.melange.eobjs/node_modules/bs-bastet/.bsbuild)
(action
 (run melc  -w a -ppx /home/trite/git/tritesite/node_modules/bisect_ppx/ppx -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Dict.d)
 (deps (:inputs  ../.././bastet_js/src/Dict.ast) )
(action (run meldep  -root-dir ../../../.. -p bs-bastet -proj-dir ../..  -bs-ns BsBastet %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Dict-BsBastet.cmj Dict-BsBastet.cmi Dict-BsBastet.cmt Dict.bs.js)
 (alias mel)
 (deps (:inputs  Dict.ast)  (include Dict.d) ../../bsconfig.json ../../../../.melange.eobjs/node_modules/bs-bastet/BsBastet.cmi(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel))
(action
  (run melc -bs-ns BsBastet -I ../../bastet/src -I . -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -bs-super-errors  -w a -bs-package-name bs-bastet -bs-package-output commonjs:./bastet_js/src:.bs.js -o Dict-BsBastet.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  JsArray.ast)
 (deps (:inputs  JsArray.ml)  ../../../../.melange.eobjs/node_modules/bs-bastet/.bsbuild)
(action
 (run melc  -w a -ppx /home/trite/git/tritesite/node_modules/bisect_ppx/ppx -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  JsArray.d)
 (deps (:inputs  ../.././bastet_js/src/JsArray.ast) )
(action (run meldep  -root-dir ../../../.. -p bs-bastet -proj-dir ../..  -bs-ns BsBastet %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  JsArray-BsBastet.cmj JsArray-BsBastet.cmi JsArray-BsBastet.cmt JsArray.bs.js)
 (alias mel)
 (deps (:inputs  JsArray.ast)  (include JsArray.d) ../../bsconfig.json ../../../../.melange.eobjs/node_modules/bs-bastet/BsBastet.cmi(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel))
(action
  (run melc -bs-ns BsBastet -I ../../bastet/src -I . -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -bs-super-errors  -w a -bs-package-name bs-bastet -bs-package-output commonjs:./bastet_js/src:.bs.js -o JsArray-BsBastet.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  JsFloat.ast)
 (deps (:inputs  JsFloat.ml)  ../../../../.melange.eobjs/node_modules/bs-bastet/.bsbuild)
(action
 (run melc  -w a -ppx /home/trite/git/tritesite/node_modules/bisect_ppx/ppx -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  JsFloat.d)
 (deps (:inputs  ../.././bastet_js/src/JsFloat.ast) )
(action (run meldep  -root-dir ../../../.. -p bs-bastet -proj-dir ../..  -bs-ns BsBastet %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  JsFloat-BsBastet.cmj JsFloat-BsBastet.cmi JsFloat-BsBastet.cmt JsFloat.bs.js)
 (alias mel)
 (deps (:inputs  JsFloat.ast)  (include JsFloat.d) ../../bsconfig.json ../../../../.melange.eobjs/node_modules/bs-bastet/BsBastet.cmi(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel))
(action
  (run melc -bs-ns BsBastet -I ../../bastet/src -I . -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -bs-super-errors  -w a -bs-package-name bs-bastet -bs-package-output commonjs:./bastet_js/src:.bs.js -o JsFloat-BsBastet.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Promise.ast)
 (deps (:inputs  Promise.ml)  ../../../../.melange.eobjs/node_modules/bs-bastet/.bsbuild)
(action
 (run melc  -w a -ppx /home/trite/git/tritesite/node_modules/bisect_ppx/ppx -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Promise.d)
 (deps (:inputs  ../.././bastet_js/src/Promise.ast) )
(action (run meldep  -root-dir ../../../.. -p bs-bastet -proj-dir ../..  -bs-ns BsBastet %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Promise-BsBastet.cmj Promise-BsBastet.cmi Promise-BsBastet.cmt Promise.bs.js)
 (alias mel)
 (deps (:inputs  Promise.ast)  (include Promise.d) ../../bsconfig.json ../../../../.melange.eobjs/node_modules/bs-bastet/BsBastet.cmi(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel))
(action
  (run melc -bs-ns BsBastet -I ../../bastet/src -I . -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -bs-super-errors  -w a -bs-package-name bs-bastet -bs-package-output commonjs:./bastet_js/src:.bs.js -o Promise-BsBastet.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 )
(subdir node_modules/bs-bastet/bastet/src
(rule
(targets  Int.ast)
 (deps (:inputs  Int.ml)  ../../../../.melange.eobjs/node_modules/bs-bastet/.bsbuild)
(action
 (run melc  -w a -ppx /home/trite/git/tritesite/node_modules/bisect_ppx/ppx -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Int.d)
 (deps (:inputs  ../.././bastet/src/Int.ast) )
(action (run meldep  -root-dir ../../../.. -p bs-bastet -proj-dir ../..  -bs-ns BsBastet %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Int-BsBastet.cmj Int-BsBastet.cmi Int-BsBastet.cmt Int.bs.js)
 (alias mel)
 (deps (:inputs  Int.ast)  (include Int.d) ../../bsconfig.json ../../../../.melange.eobjs/node_modules/bs-bastet/BsBastet.cmi(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel))
(action
  (run melc -bs-ns BsBastet -I . -I ../../bastet_js/src -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -bs-super-errors  -w a -bs-package-name bs-bastet -bs-package-output commonjs:./bastet/src:.bs.js -o Int-BsBastet.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Bool.ast)
 (deps (:inputs  Bool.ml)  ../../../../.melange.eobjs/node_modules/bs-bastet/.bsbuild)
(action
 (run melc  -w a -ppx /home/trite/git/tritesite/node_modules/bisect_ppx/ppx -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Bool.d)
 (deps (:inputs  ../.././bastet/src/Bool.ast) )
(action (run meldep  -root-dir ../../../.. -p bs-bastet -proj-dir ../..  -bs-ns BsBastet %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Bool-BsBastet.cmj Bool-BsBastet.cmi Bool-BsBastet.cmt Bool.bs.js)
 (alias mel)
 (deps (:inputs  Bool.ast)  (include Bool.d) ../../bsconfig.json ../../../../.melange.eobjs/node_modules/bs-bastet/BsBastet.cmi(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel))
(action
  (run melc -bs-ns BsBastet -I . -I ../../bastet_js/src -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -bs-super-errors  -w a -bs-package-name bs-bastet -bs-package-output commonjs:./bastet/src:.bs.js -o Bool-BsBastet.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Dual.ast)
 (deps (:inputs  Dual.ml)  ../../../../.melange.eobjs/node_modules/bs-bastet/.bsbuild)
(action
 (run melc  -w a -ppx /home/trite/git/tritesite/node_modules/bisect_ppx/ppx -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Dual.d)
 (deps (:inputs  ../.././bastet/src/Dual.ast) )
(action (run meldep  -root-dir ../../../.. -p bs-bastet -proj-dir ../..  -bs-ns BsBastet %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Dual-BsBastet.cmj Dual-BsBastet.cmi Dual-BsBastet.cmt Dual.bs.js)
 (alias mel)
 (deps (:inputs  Dual.ast)  (include Dual.d) ../../bsconfig.json ../../../../.melange.eobjs/node_modules/bs-bastet/BsBastet.cmi(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel))
(action
  (run melc -bs-ns BsBastet -I . -I ../../bastet_js/src -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -bs-super-errors  -w a -bs-package-name bs-bastet -bs-package-output commonjs:./bastet/src:.bs.js -o Dual-BsBastet.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Endo.ast)
 (deps (:inputs  Endo.ml)  ../../../../.melange.eobjs/node_modules/bs-bastet/.bsbuild)
(action
 (run melc  -w a -ppx /home/trite/git/tritesite/node_modules/bisect_ppx/ppx -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Endo.d)
 (deps (:inputs  ../.././bastet/src/Endo.ast) )
(action (run meldep  -root-dir ../../../.. -p bs-bastet -proj-dir ../..  -bs-ns BsBastet %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Endo-BsBastet.cmj Endo-BsBastet.cmi Endo-BsBastet.cmt Endo.bs.js)
 (alias mel)
 (deps (:inputs  Endo.ast)  (include Endo.d) ../../bsconfig.json ../../../../.melange.eobjs/node_modules/bs-bastet/BsBastet.cmi(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel))
(action
  (run melc -bs-ns BsBastet -I . -I ../../bastet_js/src -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -bs-super-errors  -w a -bs-package-name bs-bastet -bs-package-output commonjs:./bastet/src:.bs.js -o Endo-BsBastet.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  List.ast)
 (deps (:inputs  List.ml)  ../../../../.melange.eobjs/node_modules/bs-bastet/.bsbuild)
(action
 (run melc  -w a -ppx /home/trite/git/tritesite/node_modules/bisect_ppx/ppx -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  List.d)
 (deps (:inputs  ../.././bastet/src/List.ast) )
(action (run meldep  -root-dir ../../../.. -p bs-bastet -proj-dir ../..  -bs-ns BsBastet %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  List-BsBastet.cmj List-BsBastet.cmi List-BsBastet.cmt List.bs.js)
 (alias mel)
 (deps (:inputs  List.ast)  (include List.d) ../../bsconfig.json ../../../../.melange.eobjs/node_modules/bs-bastet/BsBastet.cmi(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel))
(action
  (run melc -bs-ns BsBastet -I . -I ../../bastet_js/src -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -bs-super-errors  -w a -bs-package-name bs-bastet -bs-package-output commonjs:./bastet/src:.bs.js -o List-BsBastet.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Test.ast)
 (deps (:inputs  Test.ml)  ../../../../.melange.eobjs/node_modules/bs-bastet/.bsbuild)
(action
 (run melc  -w a -ppx /home/trite/git/tritesite/node_modules/bisect_ppx/ppx -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Test.d)
 (deps (:inputs  ../.././bastet/src/Test.ast) )
(action (run meldep  -root-dir ../../../.. -p bs-bastet -proj-dir ../..  -bs-ns BsBastet %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Test-BsBastet.cmj Test-BsBastet.cmi Test-BsBastet.cmt Test.bs.js)
 (alias mel)
 (deps (:inputs  Test.ast)  (include Test.d) ../../bsconfig.json ../../../../.melange.eobjs/node_modules/bs-bastet/BsBastet.cmi(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel))
(action
  (run melc -bs-ns BsBastet -I . -I ../../bastet_js/src -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -bs-super-errors  -w a -bs-package-name bs-bastet -bs-package-output commonjs:./bastet/src:.bs.js -o Test-BsBastet.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Array.ast)
 (deps (:inputs  Array.ml)  ../../../../.melange.eobjs/node_modules/bs-bastet/.bsbuild)
(action
 (run melc  -w a -ppx /home/trite/git/tritesite/node_modules/bisect_ppx/ppx -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Array.d)
 (deps (:inputs  ../.././bastet/src/Array.ast ../.././bastet/src/Array.iast) )
(action (run meldep  -root-dir ../../../.. -p bs-bastet -proj-dir ../..  -bs-ns BsBastet %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Array.iast)
 (deps (:inputs  Array.mli) )
(action
 (run melc  -w a -ppx /home/trite/git/tritesite/node_modules/bisect_ppx/ppx -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Array-BsBastet.cmi Array-BsBastet.cmti)
 (alias mel)
 (deps (:inputs  Array.iast)  (include Array.d) ../../bsconfig.json ../../../../.melange.eobjs/node_modules/bs-bastet/BsBastet.cmi(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel))
(action
  (run melc -bs-ns BsBastet -I . -I ../../bastet_js/src -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -bs-super-errors  -w a -o Array-BsBastet.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Array-BsBastet.cmj Array-BsBastet.cmt Array.bs.js)
 (alias mel)
 (deps (:inputs  Array.ast)  Array-BsBastet.cmi (include Array.d) ../../bsconfig.json ../../../../.melange.eobjs/node_modules/bs-bastet/BsBastet.cmi(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel))
(action
  (run melc -bs-ns BsBastet -bs-read-cmi -I . -I ../../bastet_js/src -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -bs-super-errors  -w a -bs-package-name bs-bastet -bs-package-output commonjs:./bastet/src:.bs.js -o Array-BsBastet.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Float.ast)
 (deps (:inputs  Float.ml)  ../../../../.melange.eobjs/node_modules/bs-bastet/.bsbuild)
(action
 (run melc  -w a -ppx /home/trite/git/tritesite/node_modules/bisect_ppx/ppx -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Float.d)
 (deps (:inputs  ../.././bastet/src/Float.ast) )
(action (run meldep  -root-dir ../../../.. -p bs-bastet -proj-dir ../..  -bs-ns BsBastet %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Float-BsBastet.cmj Float-BsBastet.cmi Float-BsBastet.cmt Float.bs.js)
 (alias mel)
 (deps (:inputs  Float.ast)  (include Float.d) ../../bsconfig.json ../../../../.melange.eobjs/node_modules/bs-bastet/BsBastet.cmi(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel))
(action
  (run melc -bs-ns BsBastet -I . -I ../../bastet_js/src -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -bs-super-errors  -w a -bs-package-name bs-bastet -bs-package-output commonjs:./bastet/src:.bs.js -o Float-BsBastet.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Infix.ast)
 (deps (:inputs  Infix.ml)  ../../../../.melange.eobjs/node_modules/bs-bastet/.bsbuild)
(action
 (run melc  -w a -ppx /home/trite/git/tritesite/node_modules/bisect_ppx/ppx -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Infix.d)
 (deps (:inputs  ../.././bastet/src/Infix.ast) )
(action (run meldep  -root-dir ../../../.. -p bs-bastet -proj-dir ../..  -bs-ns BsBastet %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Infix-BsBastet.cmj Infix-BsBastet.cmi Infix-BsBastet.cmt Infix.bs.js)
 (alias mel)
 (deps (:inputs  Infix.ast)  (include Infix.d) ../../bsconfig.json ../../../../.melange.eobjs/node_modules/bs-bastet/BsBastet.cmi(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel))
(action
  (run melc -bs-ns BsBastet -I . -I ../../bastet_js/src -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -bs-super-errors  -w a -bs-package-name bs-bastet -bs-package-output commonjs:./bastet/src:.bs.js -o Infix-BsBastet.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Tuple.ast)
 (deps (:inputs  Tuple.ml)  ../../../../.melange.eobjs/node_modules/bs-bastet/.bsbuild)
(action
 (run melc  -w a -ppx /home/trite/git/tritesite/node_modules/bisect_ppx/ppx -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Tuple.d)
 (deps (:inputs  ../.././bastet/src/Tuple.ast) )
(action (run meldep  -root-dir ../../../.. -p bs-bastet -proj-dir ../..  -bs-ns BsBastet %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Tuple-BsBastet.cmj Tuple-BsBastet.cmi Tuple-BsBastet.cmt Tuple.bs.js)
 (alias mel)
 (deps (:inputs  Tuple.ast)  (include Tuple.d) ../../bsconfig.json ../../../../.melange.eobjs/node_modules/bs-bastet/BsBastet.cmi(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel))
(action
  (run melc -bs-ns BsBastet -I . -I ../../bastet_js/src -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -bs-super-errors  -w a -bs-package-name bs-bastet -bs-package-output commonjs:./bastet/src:.bs.js -o Tuple-BsBastet.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ArrayF.ast)
 (deps (:inputs  ArrayF.ml)  ../../../../.melange.eobjs/node_modules/bs-bastet/.bsbuild)
(action
 (run melc  -w a -ppx /home/trite/git/tritesite/node_modules/bisect_ppx/ppx -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ArrayF.d)
 (deps (:inputs  ../.././bastet/src/ArrayF.ast) )
(action (run meldep  -root-dir ../../../.. -p bs-bastet -proj-dir ../..  -bs-ns BsBastet %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ArrayF-BsBastet.cmj ArrayF-BsBastet.cmi ArrayF-BsBastet.cmt ArrayF.bs.js)
 (alias mel)
 (deps (:inputs  ArrayF.ast)  (include ArrayF.d) ../../bsconfig.json ../../../../.melange.eobjs/node_modules/bs-bastet/BsBastet.cmi(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel))
(action
  (run melc -bs-ns BsBastet -I . -I ../../bastet_js/src -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -bs-super-errors  -w a -bs-package-name bs-bastet -bs-package-output commonjs:./bastet/src:.bs.js -o ArrayF-BsBastet.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Option.ast)
 (deps (:inputs  Option.ml)  ../../../../.melange.eobjs/node_modules/bs-bastet/.bsbuild)
(action
 (run melc  -w a -ppx /home/trite/git/tritesite/node_modules/bisect_ppx/ppx -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Option.d)
 (deps (:inputs  ../.././bastet/src/Option.ast) )
(action (run meldep  -root-dir ../../../.. -p bs-bastet -proj-dir ../..  -bs-ns BsBastet %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Option-BsBastet.cmj Option-BsBastet.cmi Option-BsBastet.cmt Option.bs.js)
 (alias mel)
 (deps (:inputs  Option.ast)  (include Option.d) ../../bsconfig.json ../../../../.melange.eobjs/node_modules/bs-bastet/BsBastet.cmi(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel))
(action
  (run melc -bs-ns BsBastet -I . -I ../../bastet_js/src -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -bs-super-errors  -w a -bs-package-name bs-bastet -bs-package-output commonjs:./bastet/src:.bs.js -o Option-BsBastet.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Result.ast)
 (deps (:inputs  Result.ml)  ../../../../.melange.eobjs/node_modules/bs-bastet/.bsbuild)
(action
 (run melc  -w a -ppx /home/trite/git/tritesite/node_modules/bisect_ppx/ppx -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Result.d)
 (deps (:inputs  ../.././bastet/src/Result.ast) )
(action (run meldep  -root-dir ../../../.. -p bs-bastet -proj-dir ../..  -bs-ns BsBastet %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Result-BsBastet.cmj Result-BsBastet.cmi Result-BsBastet.cmt Result.bs.js)
 (alias mel)
 (deps (:inputs  Result.ast)  (include Result.d) ../../bsconfig.json ../../../../.melange.eobjs/node_modules/bs-bastet/BsBastet.cmi(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel))
(action
  (run melc -bs-ns BsBastet -I . -I ../../bastet_js/src -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -bs-super-errors  -w a -bs-package-name bs-bastet -bs-package-output commonjs:./bastet/src:.bs.js -o Result-BsBastet.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  String.ast)
 (deps (:inputs  String.ml)  ../../../../.melange.eobjs/node_modules/bs-bastet/.bsbuild)
(action
 (run melc  -w a -ppx /home/trite/git/tritesite/node_modules/bisect_ppx/ppx -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  String.d)
 (deps (:inputs  ../.././bastet/src/String.ast) )
(action (run meldep  -root-dir ../../../.. -p bs-bastet -proj-dir ../..  -bs-ns BsBastet %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  String-BsBastet.cmj String-BsBastet.cmi String-BsBastet.cmt String.bs.js)
 (alias mel)
 (deps (:inputs  String.ast)  (include String.d) ../../bsconfig.json ../../../../.melange.eobjs/node_modules/bs-bastet/BsBastet.cmi(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel))
(action
  (run melc -bs-ns BsBastet -I . -I ../../bastet_js/src -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -bs-super-errors  -w a -bs-package-name bs-bastet -bs-package-output commonjs:./bastet/src:.bs.js -o String-BsBastet.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Verify.ast)
 (deps (:inputs  Verify.ml)  ../../../../.melange.eobjs/node_modules/bs-bastet/.bsbuild)
(action
 (run melc  -w a -ppx /home/trite/git/tritesite/node_modules/bisect_ppx/ppx -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Verify.d)
 (deps (:inputs  ../.././bastet/src/Verify.ast) )
(action (run meldep  -root-dir ../../../.. -p bs-bastet -proj-dir ../..  -bs-ns BsBastet %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Verify-BsBastet.cmj Verify-BsBastet.cmi Verify-BsBastet.cmt Verify.bs.js)
 (alias mel)
 (deps (:inputs  Verify.ast)  (include Verify.d) ../../bsconfig.json ../../../../.melange.eobjs/node_modules/bs-bastet/BsBastet.cmi(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel))
(action
  (run melc -bs-ns BsBastet -I . -I ../../bastet_js/src -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -bs-super-errors  -w a -bs-package-name bs-bastet -bs-package-output commonjs:./bastet/src:.bs.js -o Verify-BsBastet.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Default.ast)
 (deps (:inputs  Default.ml)  ../../../../.melange.eobjs/node_modules/bs-bastet/.bsbuild)
(action
 (run melc  -w a -ppx /home/trite/git/tritesite/node_modules/bisect_ppx/ppx -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Default.d)
 (deps (:inputs  ../.././bastet/src/Default.ast) )
(action (run meldep  -root-dir ../../../.. -p bs-bastet -proj-dir ../..  -bs-ns BsBastet %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Default-BsBastet.cmj Default-BsBastet.cmi Default-BsBastet.cmt Default.bs.js)
 (alias mel)
 (deps (:inputs  Default.ast)  (include Default.d) ../../bsconfig.json ../../../../.melange.eobjs/node_modules/bs-bastet/BsBastet.cmi(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel))
(action
  (run melc -bs-ns BsBastet -I . -I ../../bastet_js/src -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -bs-super-errors  -w a -bs-package-name bs-bastet -bs-package-output commonjs:./bastet/src:.bs.js -o Default-BsBastet.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  PPX_Let.ast)
 (deps (:inputs  PPX_Let.ml)  ../../../../.melange.eobjs/node_modules/bs-bastet/.bsbuild)
(action
 (run melc  -w a -ppx /home/trite/git/tritesite/node_modules/bisect_ppx/ppx -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  PPX_Let.d)
 (deps (:inputs  ../.././bastet/src/PPX_Let.ast) )
(action (run meldep  -root-dir ../../../.. -p bs-bastet -proj-dir ../..  -bs-ns BsBastet %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  PPX_Let-BsBastet.cmj PPX_Let-BsBastet.cmi PPX_Let-BsBastet.cmt PPX_Let.bs.js)
 (alias mel)
 (deps (:inputs  PPX_Let.ast)  (include PPX_Let.d) ../../bsconfig.json ../../../../.melange.eobjs/node_modules/bs-bastet/BsBastet.cmi(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel))
(action
  (run melc -bs-ns BsBastet -I . -I ../../bastet_js/src -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -bs-super-errors  -w a -bs-package-name bs-bastet -bs-package-output commonjs:./bastet/src:.bs.js -o PPX_Let-BsBastet.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Function.ast)
 (deps (:inputs  Function.ml)  ../../../../.melange.eobjs/node_modules/bs-bastet/.bsbuild)
(action
 (run melc  -w a -ppx /home/trite/git/tritesite/node_modules/bisect_ppx/ppx -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Function.d)
 (deps (:inputs  ../.././bastet/src/Function.ast) )
(action (run meldep  -root-dir ../../../.. -p bs-bastet -proj-dir ../..  -bs-ns BsBastet %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Function-BsBastet.cmj Function-BsBastet.cmi Function-BsBastet.cmt Function.bs.js)
 (alias mel)
 (deps (:inputs  Function.ast)  (include Function.d) ../../bsconfig.json ../../../../.melange.eobjs/node_modules/bs-bastet/BsBastet.cmi(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel))
(action
  (run melc -bs-ns BsBastet -I . -I ../../bastet_js/src -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -bs-super-errors  -w a -bs-package-name bs-bastet -bs-package-output commonjs:./bastet/src:.bs.js -o Function-BsBastet.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Functors.ast)
 (deps (:inputs  Functors.ml)  ../../../../.melange.eobjs/node_modules/bs-bastet/.bsbuild)
(action
 (run melc  -w a -ppx /home/trite/git/tritesite/node_modules/bisect_ppx/ppx -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Functors.d)
 (deps (:inputs  ../.././bastet/src/Functors.ast) )
(action (run meldep  -root-dir ../../../.. -p bs-bastet -proj-dir ../..  -bs-ns BsBastet %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Functors-BsBastet.cmj Functors-BsBastet.cmi Functors-BsBastet.cmt Functors.bs.js)
 (alias mel)
 (deps (:inputs  Functors.ast)  (include Functors.d) ../../bsconfig.json ../../../../.melange.eobjs/node_modules/bs-bastet/BsBastet.cmi(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel))
(action
  (run melc -bs-ns BsBastet -I . -I ../../bastet_js/src -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -bs-super-errors  -w a -bs-package-name bs-bastet -bs-package-output commonjs:./bastet/src:.bs.js -o Functors-BsBastet.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Functions.ast)
 (deps (:inputs  Functions.ml)  ../../../../.melange.eobjs/node_modules/bs-bastet/.bsbuild)
(action
 (run melc  -w a -ppx /home/trite/git/tritesite/node_modules/bisect_ppx/ppx -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Functions.d)
 (deps (:inputs  ../.././bastet/src/Functions.ast) )
(action (run meldep  -root-dir ../../../.. -p bs-bastet -proj-dir ../..  -bs-ns BsBastet %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Functions-BsBastet.cmj Functions-BsBastet.cmi Functions-BsBastet.cmt Functions.bs.js)
 (alias mel)
 (deps (:inputs  Functions.ast)  (include Functions.d) ../../bsconfig.json ../../../../.melange.eobjs/node_modules/bs-bastet/BsBastet.cmi(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel))
(action
  (run melc -bs-ns BsBastet -I . -I ../../bastet_js/src -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -bs-super-errors  -w a -bs-package-name bs-bastet -bs-package-output commonjs:./bastet/src:.bs.js -o Functions-BsBastet.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Interface.ast)
 (deps (:inputs  Interface.ml)  ../../../../.melange.eobjs/node_modules/bs-bastet/.bsbuild)
(action
 (run melc  -w a -ppx /home/trite/git/tritesite/node_modules/bisect_ppx/ppx -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Interface.d)
 (deps (:inputs  ../.././bastet/src/Interface.ast) )
(action (run meldep  -root-dir ../../../.. -p bs-bastet -proj-dir ../..  -bs-ns BsBastet %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Interface-BsBastet.cmj Interface-BsBastet.cmi Interface-BsBastet.cmt Interface.bs.js)
 (alias mel)
 (deps (:inputs  Interface.ast)  (include Interface.d) ../../bsconfig.json ../../../../.melange.eobjs/node_modules/bs-bastet/BsBastet.cmi(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel))
(action
  (run melc -bs-ns BsBastet -I . -I ../../bastet_js/src -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -bs-super-errors  -w a -bs-package-name bs-bastet -bs-package-output commonjs:./bastet/src:.bs.js -o Interface-BsBastet.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 )

(subdir .melange.eobjs/node_modules/bs-bastet
(rule (with-stdout-to BsBastet.mlmap (run echo "Int
Bool
Date
Dict
Dual
Endo
List
Test
Array
Float
Infix
Tuple
ArrayF
Option
Result
String
Verify
Default
JsArray
JsFloat
PPX_Let
Promise
Function
Functors
Functions
Interface
")))(rule
(targets  BsBastet.cmi)
 (deps (:inputs  BsBastet.mlmap) )
(action (run melc -w -49 -color always -no-alias-deps %{inputs}))
(enabled_if %{bin-available:melc}) )
 
(rule (write-file .bsbuild MjYKSW50CkJvb2wKRGF0ZQpEaWN0CkR1YWwKRW5kbwpMaXN0ClRlc3QKQXJyYXkKRmxvYXQKSW5maXgKVHVwbGUKQXJyYXlGCk9wdGlvbgpSZXN1bHQKU3RyaW5nClZlcmlmeQpEZWZhdWx0CkpzQXJyYXkKSnNGbG9hdApQUFhfTGV0ClByb21pc2UKRnVuY3Rpb24KRnVuY3RvcnMKRnVuY3Rpb25zCkludGVyZmFjZQouL2Jhc3RldC9zcmMJLi9iYXN0ZXRfanMvc3JjCQoxAQEDAwEBAQEBAQEBAQEBAQEBAwMBAwEBAQEKMAo=))
)

(subdir node_modules/bs-css/src
(rule
(targets  Css_Core.res.pp.ml)
 (deps (:inputs  Css_Core.res) )
(action
  (with-stdout-to %{targets}
   (run rescript_syntax -print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Css_Core.ast)
 (deps (:inputs  Css_Core.res.pp.ml)  ../../../.melange.eobjs/node_modules/bs-css/.bsbuild)
(action
 (run melc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Css_Core.d)
 (deps (:inputs  .././src/Css_Core.ast) )
(action (run meldep  -root-dir ../../.. -p bs-css -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Css_Core.cmj Css_Core.cmi Css_Core.cmt Css_Core.bs.js)
 (alias mel)
 (deps (:inputs  Css_Core.ast)  (include Css_Core.d) ../bsconfig.json)
(action
  (run melc -I .    -w a -bs-package-name bs-css -bs-package-output commonjs:./src:.bs.js -o Css_Core.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Css_Colors.res.pp.ml)
 (deps (:inputs  Css_Colors.res) )
(action
  (with-stdout-to %{targets}
   (run rescript_syntax -print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Css_Colors.ast)
 (deps (:inputs  Css_Colors.res.pp.ml)  ../../../.melange.eobjs/node_modules/bs-css/.bsbuild)
(action
 (run melc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Css_Colors.d)
 (deps (:inputs  .././src/Css_Colors.ast) )
(action (run meldep  -root-dir ../../.. -p bs-css -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Css_Colors.cmj Css_Colors.cmi Css_Colors.cmt Css_Colors.bs.js)
 (alias mel)
 (deps (:inputs  Css_Colors.ast)  (include Css_Colors.d) ../bsconfig.json)
(action
  (run melc -I .    -w a -bs-package-name bs-css -bs-package-output commonjs:./src:.bs.js -o Css_Colors.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Css_Js_Core.res.pp.ml)
 (deps (:inputs  Css_Js_Core.res) )
(action
  (with-stdout-to %{targets}
   (run rescript_syntax -print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Css_Js_Core.ast)
 (deps (:inputs  Css_Js_Core.res.pp.ml)  ../../../.melange.eobjs/node_modules/bs-css/.bsbuild)
(action
 (run melc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Css_Js_Core.d)
 (deps (:inputs  .././src/Css_Js_Core.ast .././src/Css_Js_Core.iast) )
(action (run meldep  -root-dir ../../.. -p bs-css -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Css_Js_Core.resi.pp.mli)
 (deps (:inputs  Css_Js_Core.resi) )
(action
  (with-stdout-to %{targets}
   (run rescript_syntax -print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Css_Js_Core.iast)
 (deps (:inputs  Css_Js_Core.resi.pp.mli) )
(action
 (run melc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Css_Js_Core.cmi Css_Js_Core.cmti)
 (alias mel)
 (deps (:inputs  Css_Js_Core.iast)  (include Css_Js_Core.d) ../bsconfig.json)
(action
  (run melc -I .    -w a -o Css_Js_Core.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Css_Js_Core.cmj Css_Js_Core.cmt Css_Js_Core.bs.js)
 (alias mel)
 (deps (:inputs  Css_Js_Core.ast)  Css_Js_Core.cmi (include Css_Js_Core.d) ../bsconfig.json)
(action
  (run melc -bs-read-cmi -I .    -w a -bs-package-name bs-css -bs-package-output commonjs:./src:.bs.js -o Css_Js_Core.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Css_AtomicTypes.res.pp.ml)
 (deps (:inputs  Css_AtomicTypes.res) )
(action
  (with-stdout-to %{targets}
   (run rescript_syntax -print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Css_AtomicTypes.ast)
 (deps (:inputs  Css_AtomicTypes.res.pp.ml)  ../../../.melange.eobjs/node_modules/bs-css/.bsbuild)
(action
 (run melc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Css_AtomicTypes.d)
 (deps (:inputs  .././src/Css_AtomicTypes.ast .././src/Css_AtomicTypes.iast) )
(action (run meldep  -root-dir ../../.. -p bs-css -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Css_AtomicTypes.resi.pp.mli)
 (deps (:inputs  Css_AtomicTypes.resi) )
(action
  (with-stdout-to %{targets}
   (run rescript_syntax -print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Css_AtomicTypes.iast)
 (deps (:inputs  Css_AtomicTypes.resi.pp.mli) )
(action
 (run melc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Css_AtomicTypes.cmi Css_AtomicTypes.cmti)
 (alias mel)
 (deps (:inputs  Css_AtomicTypes.iast)  (include Css_AtomicTypes.d) ../bsconfig.json)
(action
  (run melc -I .    -w a -o Css_AtomicTypes.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Css_AtomicTypes.cmj Css_AtomicTypes.cmt Css_AtomicTypes.bs.js)
 (alias mel)
 (deps (:inputs  Css_AtomicTypes.ast)  Css_AtomicTypes.cmi (include Css_AtomicTypes.d) ../bsconfig.json)
(action
  (run melc -bs-read-cmi -I .    -w a -bs-package-name bs-css -bs-package-output commonjs:./src:.bs.js -o Css_AtomicTypes.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Css_Legacy_Core.res.pp.ml)
 (deps (:inputs  Css_Legacy_Core.res) )
(action
  (with-stdout-to %{targets}
   (run rescript_syntax -print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Css_Legacy_Core.ast)
 (deps (:inputs  Css_Legacy_Core.res.pp.ml)  ../../../.melange.eobjs/node_modules/bs-css/.bsbuild)
(action
 (run melc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Css_Legacy_Core.d)
 (deps (:inputs  .././src/Css_Legacy_Core.ast .././src/Css_Legacy_Core.iast) )
(action (run meldep  -root-dir ../../.. -p bs-css -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Css_Legacy_Core.resi.pp.mli)
 (deps (:inputs  Css_Legacy_Core.resi) )
(action
  (with-stdout-to %{targets}
   (run rescript_syntax -print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Css_Legacy_Core.iast)
 (deps (:inputs  Css_Legacy_Core.resi.pp.mli) )
(action
 (run melc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Css_Legacy_Core.cmi Css_Legacy_Core.cmti)
 (alias mel)
 (deps (:inputs  Css_Legacy_Core.iast)  (include Css_Legacy_Core.d) ../bsconfig.json)
(action
  (run melc -I .    -w a -o Css_Legacy_Core.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Css_Legacy_Core.cmj Css_Legacy_Core.cmt Css_Legacy_Core.bs.js)
 (alias mel)
 (deps (:inputs  Css_Legacy_Core.ast)  Css_Legacy_Core.cmi (include Css_Legacy_Core.d) ../bsconfig.json)
(action
  (run melc -bs-read-cmi -I .    -w a -bs-package-name bs-css -bs-package-output commonjs:./src:.bs.js -o Css_Legacy_Core.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 )

(subdir .melange.eobjs/node_modules/bs-css
(rule (write-file .bsbuild NQpDc3NfQ29yZQpDc3NfQ29sb3JzCkNzc19Kc19Db3JlCkNzc19BdG9taWNUeXBlcwpDc3NfTGVnYWN5X0NvcmUKLi9zcmMJCjEBAQEBAQowCg==))
)

(subdir node_modules/bs-css-emotion/src
(rule
(targets  Css.res.pp.ml)
 (deps (:inputs  Css.res) )
(action
  (with-stdout-to %{targets}
   (run rescript_syntax -print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Css.ast)
 (deps (:inputs  Css.res.pp.ml)  ../../../.melange.eobjs/node_modules/bs-css-emotion/.bsbuild)
(action
 (run melc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Css.d)
 (deps (:inputs  .././src/Css.ast) )
(action (run meldep  -root-dir ../../.. -p bs-css-emotion -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Css.cmj Css.cmi Css.cmt Css.bs.js)
 (alias mel)
 (deps (:inputs  Css.ast)  (include Css.d) ../bsconfig.json(alias ../../bs-css/src/mel))
(action
  (run melc -I . -I ../../bs-css/src   -w a -bs-package-name bs-css-emotion -bs-package-output commonjs:./src:.bs.js -o Css.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  CssJs.res.pp.ml)
 (deps (:inputs  CssJs.res) )
(action
  (with-stdout-to %{targets}
   (run rescript_syntax -print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  CssJs.ast)
 (deps (:inputs  CssJs.res.pp.ml)  ../../../.melange.eobjs/node_modules/bs-css-emotion/.bsbuild)
(action
 (run melc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  CssJs.d)
 (deps (:inputs  .././src/CssJs.ast) )
(action (run meldep  -root-dir ../../.. -p bs-css-emotion -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  CssJs.cmj CssJs.cmi CssJs.cmt CssJs.bs.js)
 (alias mel)
 (deps (:inputs  CssJs.ast)  (include CssJs.d) ../bsconfig.json(alias ../../bs-css/src/mel))
(action
  (run melc -I . -I ../../bs-css/src   -w a -bs-package-name bs-css-emotion -bs-package-output commonjs:./src:.bs.js -o CssJs.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 )

(subdir .melange.eobjs/node_modules/bs-css-emotion
(rule (write-file .bsbuild MgpDc3MKQ3NzSnMKLi9zcmMJCjEBAQowCg==))
)

(subdir node_modules/relude/src
(dirs :standard option ior array js extensions list)
(rule
(targets  Relude.re.pp.ml)
 (deps (:inputs  Relude.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude.ast)
 (deps (:inputs  Relude.re.pp.ml)  ../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude.d)
 (deps (:inputs  .././src/Relude.ast) )
(action (run meldep  -root-dir ../../.. -p relude -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude.cmj Relude.cmi Relude.cmt Relude.bs.js)
 (alias mel)
 (deps (:inputs  Relude.ast)  (include Relude.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/mel)(alias ../../bisect_ppx/src/common/mel)(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel))
(action
  (run melc -I option -I ior -I array -I js -I extensions -I list -I . -I ../../../.melange.eobjs/node_modules/bisect_ppx -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src:.bs.js -o Relude.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Eq.re.pp.ml)
 (deps (:inputs  Relude_Eq.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Eq.ast)
 (deps (:inputs  Relude_Eq.re.pp.ml)  ../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Eq.d)
 (deps (:inputs  .././src/Relude_Eq.ast) )
(action (run meldep  -root-dir ../../.. -p relude -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Eq.cmj Relude_Eq.cmi Relude_Eq.cmt Relude_Eq.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Eq.ast)  (include Relude_Eq.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/mel)(alias ../../bisect_ppx/src/common/mel)(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel))
(action
  (run melc -I option -I ior -I array -I js -I extensions -I list -I . -I ../../../.melange.eobjs/node_modules/bisect_ppx -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src:.bs.js -o Relude_Eq.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_IO.re.pp.ml)
 (deps (:inputs  Relude_IO.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_IO.ast)
 (deps (:inputs  Relude_IO.re.pp.ml)  ../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_IO.d)
 (deps (:inputs  .././src/Relude_IO.ast) )
(action (run meldep  -root-dir ../../.. -p relude -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_IO.cmj Relude_IO.cmi Relude_IO.cmt Relude_IO.bs.js)
 (alias mel)
 (deps (:inputs  Relude_IO.ast)  (include Relude_IO.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/mel)(alias ../../bisect_ppx/src/common/mel)(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel))
(action
  (run melc -I option -I ior -I array -I js -I extensions -I list -I . -I ../../../.melange.eobjs/node_modules/bisect_ppx -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src:.bs.js -o Relude_IO.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Int.re.pp.ml)
 (deps (:inputs  Relude_Int.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Int.ast)
 (deps (:inputs  Relude_Int.re.pp.ml)  ../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Int.d)
 (deps (:inputs  .././src/Relude_Int.ast) )
(action (run meldep  -root-dir ../../.. -p relude -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Int.cmj Relude_Int.cmi Relude_Int.cmt Relude_Int.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Int.ast)  (include Relude_Int.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/mel)(alias ../../bisect_ppx/src/common/mel)(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel))
(action
  (run melc -I option -I ior -I array -I js -I extensions -I list -I . -I ../../../.melange.eobjs/node_modules/bisect_ppx -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src:.bs.js -o Relude_Int.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Ior.re.pp.ml)
 (deps (:inputs  Relude_Ior.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Ior.ast)
 (deps (:inputs  Relude_Ior.re.pp.ml)  ../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Ior.d)
 (deps (:inputs  .././src/Relude_Ior.ast) )
(action (run meldep  -root-dir ../../.. -p relude -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Ior.cmj Relude_Ior.cmi Relude_Ior.cmt Relude_Ior.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Ior.ast)  (include Relude_Ior.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/mel)(alias ../../bisect_ppx/src/common/mel)(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel))
(action
  (run melc -I option -I ior -I array -I js -I extensions -I list -I . -I ../../../.melange.eobjs/node_modules/bisect_ppx -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src:.bs.js -o Relude_Ior.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Map.re.pp.ml)
 (deps (:inputs  Relude_Map.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Map.ast)
 (deps (:inputs  Relude_Map.re.pp.ml)  ../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Map.d)
 (deps (:inputs  .././src/Relude_Map.ast) )
(action (run meldep  -root-dir ../../.. -p relude -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Map.cmj Relude_Map.cmi Relude_Map.cmt Relude_Map.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Map.ast)  (include Relude_Map.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/mel)(alias ../../bisect_ppx/src/common/mel)(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel))
(action
  (run melc -I option -I ior -I array -I js -I extensions -I list -I . -I ../../../.melange.eobjs/node_modules/bisect_ppx -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src:.bs.js -o Relude_Map.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Ord.re.pp.ml)
 (deps (:inputs  Relude_Ord.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Ord.ast)
 (deps (:inputs  Relude_Ord.re.pp.ml)  ../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Ord.d)
 (deps (:inputs  .././src/Relude_Ord.ast) )
(action (run meldep  -root-dir ../../.. -p relude -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Ord.cmj Relude_Ord.cmi Relude_Ord.cmt Relude_Ord.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Ord.ast)  (include Relude_Ord.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/mel)(alias ../../bisect_ppx/src/common/mel)(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel))
(action
  (run melc -I option -I ior -I array -I js -I extensions -I list -I . -I ../../../.melange.eobjs/node_modules/bisect_ppx -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src:.bs.js -o Relude_Ord.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_RIO.re.pp.ml)
 (deps (:inputs  Relude_RIO.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_RIO.ast)
 (deps (:inputs  Relude_RIO.re.pp.ml)  ../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_RIO.d)
 (deps (:inputs  .././src/Relude_RIO.ast) )
(action (run meldep  -root-dir ../../.. -p relude -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_RIO.cmj Relude_RIO.cmi Relude_RIO.cmt Relude_RIO.bs.js)
 (alias mel)
 (deps (:inputs  Relude_RIO.ast)  (include Relude_RIO.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/mel)(alias ../../bisect_ppx/src/common/mel)(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel))
(action
  (run melc -I option -I ior -I array -I js -I extensions -I list -I . -I ../../../.melange.eobjs/node_modules/bisect_ppx -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src:.bs.js -o Relude_RIO.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Set.re.pp.ml)
 (deps (:inputs  Relude_Set.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Set.ast)
 (deps (:inputs  Relude_Set.re.pp.ml)  ../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Set.d)
 (deps (:inputs  .././src/Relude_Set.ast) )
(action (run meldep  -root-dir ../../.. -p relude -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Set.cmj Relude_Set.cmi Relude_Set.cmt Relude_Set.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Set.ast)  (include Relude_Set.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/mel)(alias ../../bisect_ppx/src/common/mel)(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel))
(action
  (run melc -I option -I ior -I array -I js -I extensions -I list -I . -I ../../../.melange.eobjs/node_modules/bisect_ppx -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src:.bs.js -o Relude_Set.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Bool.re.pp.ml)
 (deps (:inputs  Relude_Bool.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Bool.ast)
 (deps (:inputs  Relude_Bool.re.pp.ml)  ../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Bool.d)
 (deps (:inputs  .././src/Relude_Bool.ast) )
(action (run meldep  -root-dir ../../.. -p relude -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Bool.cmj Relude_Bool.cmi Relude_Bool.cmt Relude_Bool.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Bool.ast)  (include Relude_Bool.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/mel)(alias ../../bisect_ppx/src/common/mel)(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel))
(action
  (run melc -I option -I ior -I array -I js -I extensions -I list -I . -I ../../../.melange.eobjs/node_modules/bisect_ppx -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src:.bs.js -o Relude_Bool.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Free.re.pp.ml)
 (deps (:inputs  Relude_Free.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Free.ast)
 (deps (:inputs  Relude_Free.re.pp.ml)  ../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Free.d)
 (deps (:inputs  .././src/Relude_Free.ast) )
(action (run meldep  -root-dir ../../.. -p relude -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Free.cmj Relude_Free.cmi Relude_Free.cmt Relude_Free.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Free.ast)  (include Relude_Free.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/mel)(alias ../../bisect_ppx/src/common/mel)(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel))
(action
  (run melc -I option -I ior -I array -I js -I extensions -I list -I . -I ../../../.melange.eobjs/node_modules/bisect_ppx -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src:.bs.js -o Relude_Free.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_HMap.re.pp.ml)
 (deps (:inputs  Relude_HMap.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_HMap.ast)
 (deps (:inputs  Relude_HMap.re.pp.ml)  ../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_HMap.d)
 (deps (:inputs  .././src/Relude_HMap.ast) )
(action (run meldep  -root-dir ../../.. -p relude -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_HMap.cmj Relude_HMap.cmi Relude_HMap.cmt Relude_HMap.bs.js)
 (alias mel)
 (deps (:inputs  Relude_HMap.ast)  (include Relude_HMap.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/mel)(alias ../../bisect_ppx/src/common/mel)(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel))
(action
  (run melc -I option -I ior -I array -I js -I extensions -I list -I . -I ../../../.melange.eobjs/node_modules/bisect_ppx -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src:.bs.js -o Relude_HMap.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_List.re.pp.ml)
 (deps (:inputs  Relude_List.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_List.ast)
 (deps (:inputs  Relude_List.re.pp.ml)  ../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_List.d)
 (deps (:inputs  .././src/Relude_List.ast) )
(action (run meldep  -root-dir ../../.. -p relude -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_List.cmj Relude_List.cmi Relude_List.cmt Relude_List.bs.js)
 (alias mel)
 (deps (:inputs  Relude_List.ast)  (include Relude_List.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/mel)(alias ../../bisect_ppx/src/common/mel)(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel))
(action
  (run melc -I option -I ior -I array -I js -I extensions -I list -I . -I ../../../.melange.eobjs/node_modules/bisect_ppx -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src:.bs.js -o Relude_List.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_RWST.re.pp.ml)
 (deps (:inputs  Relude_RWST.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_RWST.ast)
 (deps (:inputs  Relude_RWST.re.pp.ml)  ../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_RWST.d)
 (deps (:inputs  .././src/Relude_RWST.ast) )
(action (run meldep  -root-dir ../../.. -p relude -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_RWST.cmj Relude_RWST.cmi Relude_RWST.cmt Relude_RWST.bs.js)
 (alias mel)
 (deps (:inputs  Relude_RWST.ast)  (include Relude_RWST.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/mel)(alias ../../bisect_ppx/src/common/mel)(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel))
(action
  (run melc -I option -I ior -I array -I js -I extensions -I list -I . -I ../../../.melange.eobjs/node_modules/bisect_ppx -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src:.bs.js -o Relude_RWST.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Tree.re.pp.ml)
 (deps (:inputs  Relude_Tree.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Tree.ast)
 (deps (:inputs  Relude_Tree.re.pp.ml)  ../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Tree.d)
 (deps (:inputs  .././src/Relude_Tree.ast) )
(action (run meldep  -root-dir ../../.. -p relude -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Tree.cmj Relude_Tree.cmi Relude_Tree.cmt Relude_Tree.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Tree.ast)  (include Relude_Tree.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/mel)(alias ../../bisect_ppx/src/common/mel)(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel))
(action
  (run melc -I option -I ior -I array -I js -I extensions -I list -I . -I ../../../.melange.eobjs/node_modules/bisect_ppx -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src:.bs.js -o Relude_Tree.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Unit.re.pp.ml)
 (deps (:inputs  Relude_Unit.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Unit.ast)
 (deps (:inputs  Relude_Unit.re.pp.ml)  ../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Unit.d)
 (deps (:inputs  .././src/Relude_Unit.ast) )
(action (run meldep  -root-dir ../../.. -p relude -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Unit.cmj Relude_Unit.cmi Relude_Unit.cmt Relude_Unit.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Unit.ast)  (include Relude_Unit.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/mel)(alias ../../bisect_ppx/src/common/mel)(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel))
(action
  (run melc -I option -I ior -I array -I js -I extensions -I list -I . -I ../../../.melange.eobjs/node_modules/bisect_ppx -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src:.bs.js -o Relude_Unit.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Void.re.pp.ml)
 (deps (:inputs  Relude_Void.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Void.ast)
 (deps (:inputs  Relude_Void.re.pp.ml)  ../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Void.d)
 (deps (:inputs  .././src/Relude_Void.ast) )
(action (run meldep  -root-dir ../../.. -p relude -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Void.cmj Relude_Void.cmi Relude_Void.cmt Relude_Void.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Void.ast)  (include Relude_Void.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/mel)(alias ../../bisect_ppx/src/common/mel)(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel))
(action
  (run melc -I option -I ior -I array -I js -I extensions -I list -I . -I ../../../.melange.eobjs/node_modules/bisect_ppx -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src:.bs.js -o Relude_Void.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Array.re.pp.ml)
 (deps (:inputs  Relude_Array.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Array.ast)
 (deps (:inputs  Relude_Array.re.pp.ml)  ../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Array.d)
 (deps (:inputs  .././src/Relude_Array.ast) )
(action (run meldep  -root-dir ../../.. -p relude -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Array.cmj Relude_Array.cmi Relude_Array.cmt Relude_Array.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Array.ast)  (include Relude_Array.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/mel)(alias ../../bisect_ppx/src/common/mel)(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel))
(action
  (run melc -I option -I ior -I array -I js -I extensions -I list -I . -I ../../../.melange.eobjs/node_modules/bisect_ppx -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src:.bs.js -o Relude_Array.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_ContT.re.pp.ml)
 (deps (:inputs  Relude_ContT.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_ContT.ast)
 (deps (:inputs  Relude_ContT.re.pp.ml)  ../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_ContT.d)
 (deps (:inputs  .././src/Relude_ContT.ast) )
(action (run meldep  -root-dir ../../.. -p relude -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_ContT.cmj Relude_ContT.cmi Relude_ContT.cmt Relude_ContT.bs.js)
 (alias mel)
 (deps (:inputs  Relude_ContT.ast)  (include Relude_ContT.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/mel)(alias ../../bisect_ppx/src/common/mel)(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel))
(action
  (run melc -I option -I ior -I array -I js -I extensions -I list -I . -I ../../../.melange.eobjs/node_modules/bisect_ppx -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src:.bs.js -o Relude_ContT.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Float.re.pp.ml)
 (deps (:inputs  Relude_Float.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Float.ast)
 (deps (:inputs  Relude_Float.re.pp.ml)  ../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Float.d)
 (deps (:inputs  .././src/Relude_Float.ast) )
(action (run meldep  -root-dir ../../.. -p relude -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Float.cmj Relude_Float.cmi Relude_Float.cmt Relude_Float.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Float.ast)  (include Relude_Float.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/mel)(alias ../../bisect_ppx/src/common/mel)(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel))
(action
  (run melc -I option -I ior -I array -I js -I extensions -I list -I . -I ../../../.melange.eobjs/node_modules/bisect_ppx -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src:.bs.js -o Relude_Float.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_HList.re.pp.ml)
 (deps (:inputs  Relude_HList.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_HList.ast)
 (deps (:inputs  Relude_HList.re.pp.ml)  ../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_HList.d)
 (deps (:inputs  .././src/Relude_HList.ast) )
(action (run meldep  -root-dir ../../.. -p relude -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_HList.cmj Relude_HList.cmi Relude_HList.cmt Relude_HList.bs.js)
 (alias mel)
 (deps (:inputs  Relude_HList.ast)  (include Relude_HList.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/mel)(alias ../../bisect_ppx/src/common/mel)(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel))
(action
  (run melc -I option -I ior -I array -I js -I extensions -I list -I . -I ../../../.melange.eobjs/node_modules/bisect_ppx -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src:.bs.js -o Relude_HList.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Timer.re.pp.ml)
 (deps (:inputs  Relude_Timer.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Timer.ast)
 (deps (:inputs  Relude_Timer.re.pp.ml)  ../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Timer.d)
 (deps (:inputs  .././src/Relude_Timer.ast) )
(action (run meldep  -root-dir ../../.. -p relude -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Timer.cmj Relude_Timer.cmi Relude_Timer.cmt Relude_Timer.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Timer.ast)  (include Relude_Timer.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/mel)(alias ../../bisect_ppx/src/common/mel)(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel))
(action
  (run melc -I option -I ior -I array -I js -I extensions -I list -I . -I ../../../.melange.eobjs/node_modules/bisect_ppx -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src:.bs.js -o Relude_Timer.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Tuple.re.pp.ml)
 (deps (:inputs  Relude_Tuple.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Tuple.ast)
 (deps (:inputs  Relude_Tuple.re.pp.ml)  ../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Tuple.d)
 (deps (:inputs  .././src/Relude_Tuple.ast) )
(action (run meldep  -root-dir ../../.. -p relude -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Tuple.cmj Relude_Tuple.cmi Relude_Tuple.cmt Relude_Tuple.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Tuple.ast)  (include Relude_Tuple.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/mel)(alias ../../bisect_ppx/src/common/mel)(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel))
(action
  (run melc -I option -I ior -I array -I js -I extensions -I list -I . -I ../../../.melange.eobjs/node_modules/bisect_ppx -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src:.bs.js -o Relude_Tuple.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Option.re.pp.ml)
 (deps (:inputs  Relude_Option.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Option.ast)
 (deps (:inputs  Relude_Option.re.pp.ml)  ../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Option.d)
 (deps (:inputs  .././src/Relude_Option.ast) )
(action (run meldep  -root-dir ../../.. -p relude -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Option.cmj Relude_Option.cmi Relude_Option.cmt Relude_Option.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Option.ast)  (include Relude_Option.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/mel)(alias ../../bisect_ppx/src/common/mel)(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel))
(action
  (run melc -I option -I ior -I array -I js -I extensions -I list -I . -I ../../../.melange.eobjs/node_modules/bisect_ppx -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src:.bs.js -o Relude_Option.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Result.re.pp.ml)
 (deps (:inputs  Relude_Result.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Result.ast)
 (deps (:inputs  Relude_Result.re.pp.ml)  ../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Result.d)
 (deps (:inputs  .././src/Relude_Result.ast) )
(action (run meldep  -root-dir ../../.. -p relude -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Result.cmj Relude_Result.cmi Relude_Result.cmt Relude_Result.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Result.ast)  (include Relude_Result.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/mel)(alias ../../bisect_ppx/src/common/mel)(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel))
(action
  (run melc -I option -I ior -I array -I js -I extensions -I list -I . -I ../../../.melange.eobjs/node_modules/bisect_ppx -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src:.bs.js -o Relude_Result.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_StateT.re.pp.ml)
 (deps (:inputs  Relude_StateT.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_StateT.ast)
 (deps (:inputs  Relude_StateT.re.pp.ml)  ../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_StateT.d)
 (deps (:inputs  .././src/Relude_StateT.ast) )
(action (run meldep  -root-dir ../../.. -p relude -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_StateT.cmj Relude_StateT.cmi Relude_StateT.cmt Relude_StateT.bs.js)
 (alias mel)
 (deps (:inputs  Relude_StateT.ast)  (include Relude_StateT.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/mel)(alias ../../bisect_ppx/src/common/mel)(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel))
(action
  (run melc -I option -I ior -I array -I js -I extensions -I list -I . -I ../../../.melange.eobjs/node_modules/bisect_ppx -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src:.bs.js -o Relude_StateT.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_String.re.pp.ml)
 (deps (:inputs  Relude_String.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_String.ast)
 (deps (:inputs  Relude_String.re.pp.ml)  ../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_String.d)
 (deps (:inputs  .././src/Relude_String.ast) )
(action (run meldep  -root-dir ../../.. -p relude -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_String.cmj Relude_String.cmi Relude_String.cmt Relude_String.bs.js)
 (alias mel)
 (deps (:inputs  Relude_String.ast)  (include Relude_String.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/mel)(alias ../../bisect_ppx/src/common/mel)(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel))
(action
  (run melc -I option -I ior -I array -I js -I extensions -I list -I . -I ../../../.melange.eobjs/node_modules/bisect_ppx -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src:.bs.js -o Relude_String.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Tuple2.re.pp.ml)
 (deps (:inputs  Relude_Tuple2.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Tuple2.ast)
 (deps (:inputs  Relude_Tuple2.re.pp.ml)  ../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Tuple2.d)
 (deps (:inputs  .././src/Relude_Tuple2.ast) )
(action (run meldep  -root-dir ../../.. -p relude -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Tuple2.cmj Relude_Tuple2.cmi Relude_Tuple2.cmt Relude_Tuple2.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Tuple2.ast)  (include Relude_Tuple2.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/mel)(alias ../../bisect_ppx/src/common/mel)(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel))
(action
  (run melc -I option -I ior -I array -I js -I extensions -I list -I . -I ../../../.melange.eobjs/node_modules/bisect_ppx -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src:.bs.js -o Relude_Tuple2.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Tuple3.re.pp.ml)
 (deps (:inputs  Relude_Tuple3.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Tuple3.ast)
 (deps (:inputs  Relude_Tuple3.re.pp.ml)  ../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Tuple3.d)
 (deps (:inputs  .././src/Relude_Tuple3.ast) )
(action (run meldep  -root-dir ../../.. -p relude -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Tuple3.cmj Relude_Tuple3.cmi Relude_Tuple3.cmt Relude_Tuple3.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Tuple3.ast)  (include Relude_Tuple3.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/mel)(alias ../../bisect_ppx/src/common/mel)(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel))
(action
  (run melc -I option -I ior -I array -I js -I extensions -I list -I . -I ../../../.melange.eobjs/node_modules/bisect_ppx -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src:.bs.js -o Relude_Tuple3.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Tuple4.re.pp.ml)
 (deps (:inputs  Relude_Tuple4.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Tuple4.ast)
 (deps (:inputs  Relude_Tuple4.re.pp.ml)  ../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Tuple4.d)
 (deps (:inputs  .././src/Relude_Tuple4.ast) )
(action (run meldep  -root-dir ../../.. -p relude -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Tuple4.cmj Relude_Tuple4.cmi Relude_Tuple4.cmt Relude_Tuple4.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Tuple4.ast)  (include Relude_Tuple4.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/mel)(alias ../../bisect_ppx/src/common/mel)(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel))
(action
  (run melc -I option -I ior -I array -I js -I extensions -I list -I . -I ../../../.melange.eobjs/node_modules/bisect_ppx -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src:.bs.js -o Relude_Tuple4.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Tuple5.re.pp.ml)
 (deps (:inputs  Relude_Tuple5.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Tuple5.ast)
 (deps (:inputs  Relude_Tuple5.re.pp.ml)  ../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Tuple5.d)
 (deps (:inputs  .././src/Relude_Tuple5.ast) )
(action (run meldep  -root-dir ../../.. -p relude -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Tuple5.cmj Relude_Tuple5.cmi Relude_Tuple5.cmt Relude_Tuple5.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Tuple5.ast)  (include Relude_Tuple5.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/mel)(alias ../../bisect_ppx/src/common/mel)(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel))
(action
  (run melc -I option -I ior -I array -I js -I extensions -I list -I . -I ../../../.melange.eobjs/node_modules/bisect_ppx -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src:.bs.js -o Relude_Tuple5.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Unsafe.re.pp.ml)
 (deps (:inputs  Relude_Unsafe.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Unsafe.ast)
 (deps (:inputs  Relude_Unsafe.re.pp.ml)  ../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Unsafe.d)
 (deps (:inputs  .././src/Relude_Unsafe.ast) )
(action (run meldep  -root-dir ../../.. -p relude -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Unsafe.cmj Relude_Unsafe.cmi Relude_Unsafe.cmt Relude_Unsafe.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Unsafe.ast)  (include Relude_Unsafe.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/mel)(alias ../../bisect_ppx/src/common/mel)(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel))
(action
  (run melc -I option -I ior -I array -I js -I extensions -I list -I . -I ../../../.melange.eobjs/node_modules/bisect_ppx -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src:.bs.js -o Relude_Unsafe.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Decimal.re.pp.ml)
 (deps (:inputs  Relude_Decimal.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Decimal.ast)
 (deps (:inputs  Relude_Decimal.re.pp.ml)  ../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Decimal.d)
 (deps (:inputs  .././src/Relude_Decimal.ast) )
(action (run meldep  -root-dir ../../.. -p relude -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Decimal.cmj Relude_Decimal.cmi Relude_Decimal.cmt Relude_Decimal.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Decimal.ast)  (include Relude_Decimal.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/mel)(alias ../../bisect_ppx/src/common/mel)(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel))
(action
  (run melc -I option -I ior -I array -I js -I extensions -I list -I . -I ../../../.melange.eobjs/node_modules/bisect_ppx -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src:.bs.js -o Relude_Decimal.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Globals.re.pp.ml)
 (deps (:inputs  Relude_Globals.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Globals.ast)
 (deps (:inputs  Relude_Globals.re.pp.ml)  ../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Globals.d)
 (deps (:inputs  .././src/Relude_Globals.ast) )
(action (run meldep  -root-dir ../../.. -p relude -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Globals.cmj Relude_Globals.cmi Relude_Globals.cmt Relude_Globals.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Globals.ast)  (include Relude_Globals.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/mel)(alias ../../bisect_ppx/src/common/mel)(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel))
(action
  (run melc -I option -I ior -I array -I js -I extensions -I list -I . -I ../../../.melange.eobjs/node_modules/bisect_ppx -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src:.bs.js -o Relude_Globals.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_OptionT.re.pp.ml)
 (deps (:inputs  Relude_OptionT.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_OptionT.ast)
 (deps (:inputs  Relude_OptionT.re.pp.ml)  ../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_OptionT.d)
 (deps (:inputs  .././src/Relude_OptionT.ast) )
(action (run meldep  -root-dir ../../.. -p relude -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_OptionT.cmj Relude_OptionT.cmi Relude_OptionT.cmt Relude_OptionT.bs.js)
 (alias mel)
 (deps (:inputs  Relude_OptionT.ast)  (include Relude_OptionT.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/mel)(alias ../../bisect_ppx/src/common/mel)(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel))
(action
  (run melc -I option -I ior -I array -I js -I extensions -I list -I . -I ../../../.melange.eobjs/node_modules/bisect_ppx -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src:.bs.js -o Relude_OptionT.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_ReaderT.re.pp.ml)
 (deps (:inputs  Relude_ReaderT.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_ReaderT.ast)
 (deps (:inputs  Relude_ReaderT.re.pp.ml)  ../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_ReaderT.d)
 (deps (:inputs  .././src/Relude_ReaderT.ast) )
(action (run meldep  -root-dir ../../.. -p relude -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_ReaderT.cmj Relude_ReaderT.cmi Relude_ReaderT.cmt Relude_ReaderT.bs.js)
 (alias mel)
 (deps (:inputs  Relude_ReaderT.ast)  (include Relude_ReaderT.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/mel)(alias ../../bisect_ppx/src/common/mel)(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel))
(action
  (run melc -I option -I ior -I array -I js -I extensions -I list -I . -I ../../../.melange.eobjs/node_modules/bisect_ppx -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src:.bs.js -o Relude_ReaderT.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_ResultT.re.pp.ml)
 (deps (:inputs  Relude_ResultT.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_ResultT.ast)
 (deps (:inputs  Relude_ResultT.re.pp.ml)  ../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_ResultT.d)
 (deps (:inputs  .././src/Relude_ResultT.ast) )
(action (run meldep  -root-dir ../../.. -p relude -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_ResultT.cmj Relude_ResultT.cmi Relude_ResultT.cmt Relude_ResultT.bs.js)
 (alias mel)
 (deps (:inputs  Relude_ResultT.ast)  (include Relude_ResultT.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/mel)(alias ../../bisect_ppx/src/common/mel)(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel))
(action
  (run melc -I option -I ior -I array -I js -I extensions -I list -I . -I ../../../.melange.eobjs/node_modules/bisect_ppx -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src:.bs.js -o Relude_ResultT.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_WriterT.re.pp.ml)
 (deps (:inputs  Relude_WriterT.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_WriterT.ast)
 (deps (:inputs  Relude_WriterT.re.pp.ml)  ../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_WriterT.d)
 (deps (:inputs  .././src/Relude_WriterT.ast) )
(action (run meldep  -root-dir ../../.. -p relude -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_WriterT.cmj Relude_WriterT.cmi Relude_WriterT.cmt Relude_WriterT.bs.js)
 (alias mel)
 (deps (:inputs  Relude_WriterT.ast)  (include Relude_WriterT.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/mel)(alias ../../bisect_ppx/src/common/mel)(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel))
(action
  (run melc -I option -I ior -I array -I js -I extensions -I list -I . -I ../../../.melange.eobjs/node_modules/bisect_ppx -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src:.bs.js -o Relude_WriterT.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Debounce.re.pp.ml)
 (deps (:inputs  Relude_Debounce.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Debounce.ast)
 (deps (:inputs  Relude_Debounce.re.pp.ml)  ../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Debounce.d)
 (deps (:inputs  .././src/Relude_Debounce.ast) )
(action (run meldep  -root-dir ../../.. -p relude -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Debounce.cmj Relude_Debounce.cmi Relude_Debounce.cmt Relude_Debounce.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Debounce.ast)  (include Relude_Debounce.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/mel)(alias ../../bisect_ppx/src/common/mel)(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel))
(action
  (run melc -I option -I ior -I array -I js -I extensions -I list -I . -I ../../../.melange.eobjs/node_modules/bisect_ppx -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src:.bs.js -o Relude_Debounce.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Function.re.pp.ml)
 (deps (:inputs  Relude_Function.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Function.ast)
 (deps (:inputs  Relude_Function.re.pp.ml)  ../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Function.d)
 (deps (:inputs  .././src/Relude_Function.ast) )
(action (run meldep  -root-dir ../../.. -p relude -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Function.cmj Relude_Function.cmi Relude_Function.cmt Relude_Function.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Function.ast)  (include Relude_Function.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/mel)(alias ../../bisect_ppx/src/common/mel)(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel))
(action
  (run melc -I option -I ior -I array -I js -I extensions -I list -I . -I ../../../.melange.eobjs/node_modules/bisect_ppx -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src:.bs.js -o Relude_Function.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Identity.re.pp.ml)
 (deps (:inputs  Relude_Identity.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Identity.ast)
 (deps (:inputs  Relude_Identity.re.pp.ml)  ../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Identity.d)
 (deps (:inputs  .././src/Relude_Identity.ast) )
(action (run meldep  -root-dir ../../.. -p relude -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Identity.cmj Relude_Identity.cmi Relude_Identity.cmt Relude_Identity.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Identity.ast)  (include Relude_Identity.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/mel)(alias ../../bisect_ppx/src/common/mel)(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel))
(action
  (run melc -I option -I ior -I array -I js -I extensions -I list -I . -I ../../../.melange.eobjs/node_modules/bisect_ppx -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src:.bs.js -o Relude_Identity.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_NonEmpty.re.pp.ml)
 (deps (:inputs  Relude_NonEmpty.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_NonEmpty.ast)
 (deps (:inputs  Relude_NonEmpty.re.pp.ml)  ../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_NonEmpty.d)
 (deps (:inputs  .././src/Relude_NonEmpty.ast) )
(action (run meldep  -root-dir ../../.. -p relude -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_NonEmpty.cmj Relude_NonEmpty.cmi Relude_NonEmpty.cmt Relude_NonEmpty.bs.js)
 (alias mel)
 (deps (:inputs  Relude_NonEmpty.ast)  (include Relude_NonEmpty.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/mel)(alias ../../bisect_ppx/src/common/mel)(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel))
(action
  (run melc -I option -I ior -I array -I js -I extensions -I list -I . -I ../../../.melange.eobjs/node_modules/bisect_ppx -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src:.bs.js -o Relude_NonEmpty.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Ordering.re.pp.ml)
 (deps (:inputs  Relude_Ordering.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Ordering.ast)
 (deps (:inputs  Relude_Ordering.re.pp.ml)  ../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Ordering.d)
 (deps (:inputs  .././src/Relude_Ordering.ast) )
(action (run meldep  -root-dir ../../.. -p relude -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Ordering.cmj Relude_Ordering.cmi Relude_Ordering.cmt Relude_Ordering.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Ordering.ast)  (include Relude_Ordering.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/mel)(alias ../../bisect_ppx/src/common/mel)(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel))
(action
  (run melc -I option -I ior -I array -I js -I extensions -I list -I . -I ../../../.melange.eobjs/node_modules/bisect_ppx -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src:.bs.js -o Relude_Ordering.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Sequence.re.pp.ml)
 (deps (:inputs  Relude_Sequence.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Sequence.ast)
 (deps (:inputs  Relude_Sequence.re.pp.ml)  ../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Sequence.d)
 (deps (:inputs  .././src/Relude_Sequence.ast) )
(action (run meldep  -root-dir ../../.. -p relude -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Sequence.cmj Relude_Sequence.cmi Relude_Sequence.cmt Relude_Sequence.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Sequence.ast)  (include Relude_Sequence.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/mel)(alias ../../bisect_ppx/src/common/mel)(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel))
(action
  (run melc -I option -I ior -I array -I js -I extensions -I list -I . -I ../../../.melange.eobjs/node_modules/bisect_ppx -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src:.bs.js -o Relude_Sequence.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Throttle.re.pp.ml)
 (deps (:inputs  Relude_Throttle.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Throttle.ast)
 (deps (:inputs  Relude_Throttle.re.pp.ml)  ../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Throttle.d)
 (deps (:inputs  .././src/Relude_Throttle.ast) )
(action (run meldep  -root-dir ../../.. -p relude -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Throttle.cmj Relude_Throttle.cmi Relude_Throttle.cmt Relude_Throttle.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Throttle.ast)  (include Relude_Throttle.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/mel)(alias ../../bisect_ppx/src/common/mel)(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel))
(action
  (run melc -I option -I ior -I array -I js -I extensions -I list -I . -I ../../../.melange.eobjs/node_modules/bisect_ppx -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src:.bs.js -o Relude_Throttle.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_AsyncData.re.pp.ml)
 (deps (:inputs  Relude_AsyncData.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_AsyncData.ast)
 (deps (:inputs  Relude_AsyncData.re.pp.ml)  ../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_AsyncData.d)
 (deps (:inputs  .././src/Relude_AsyncData.ast) )
(action (run meldep  -root-dir ../../.. -p relude -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_AsyncData.cmj Relude_AsyncData.cmi Relude_AsyncData.cmt Relude_AsyncData.bs.js)
 (alias mel)
 (deps (:inputs  Relude_AsyncData.ast)  (include Relude_AsyncData.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/mel)(alias ../../bisect_ppx/src/common/mel)(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel))
(action
  (run melc -I option -I ior -I array -I js -I extensions -I list -I . -I ../../../.melange.eobjs/node_modules/bisect_ppx -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src:.bs.js -o Relude_AsyncData.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Interface.re.pp.ml)
 (deps (:inputs  Relude_Interface.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Interface.ast)
 (deps (:inputs  Relude_Interface.re.pp.ml)  ../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Interface.d)
 (deps (:inputs  .././src/Relude_Interface.ast) )
(action (run meldep  -root-dir ../../.. -p relude -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Interface.cmj Relude_Interface.cmi Relude_Interface.cmt Relude_Interface.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Interface.ast)  (include Relude_Interface.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/mel)(alias ../../bisect_ppx/src/common/mel)(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel))
(action
  (run melc -I option -I ior -I array -I js -I extensions -I list -I . -I ../../../.melange.eobjs/node_modules/bisect_ppx -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src:.bs.js -o Relude_Interface.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_StringMap.re.pp.ml)
 (deps (:inputs  Relude_StringMap.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_StringMap.ast)
 (deps (:inputs  Relude_StringMap.re.pp.ml)  ../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_StringMap.d)
 (deps (:inputs  .././src/Relude_StringMap.ast) )
(action (run meldep  -root-dir ../../.. -p relude -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_StringMap.cmj Relude_StringMap.cmi Relude_StringMap.cmt Relude_StringMap.bs.js)
 (alias mel)
 (deps (:inputs  Relude_StringMap.ast)  (include Relude_StringMap.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/mel)(alias ../../bisect_ppx/src/common/mel)(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel))
(action
  (run melc -I option -I ior -I array -I js -I extensions -I list -I . -I ../../../.melange.eobjs/node_modules/bisect_ppx -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src:.bs.js -o Relude_StringMap.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Free_Monad.re.pp.ml)
 (deps (:inputs  Relude_Free_Monad.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Free_Monad.ast)
 (deps (:inputs  Relude_Free_Monad.re.pp.ml)  ../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Free_Monad.d)
 (deps (:inputs  .././src/Relude_Free_Monad.ast) )
(action (run meldep  -root-dir ../../.. -p relude -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Free_Monad.cmj Relude_Free_Monad.cmi Relude_Free_Monad.cmt Relude_Free_Monad.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Free_Monad.ast)  (include Relude_Free_Monad.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/mel)(alias ../../bisect_ppx/src/common/mel)(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel))
(action
  (run melc -I option -I ior -I array -I js -I extensions -I list -I . -I ../../../.melange.eobjs/node_modules/bisect_ppx -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src:.bs.js -o Relude_Free_Monad.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_ListZipper.re.pp.ml)
 (deps (:inputs  Relude_ListZipper.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_ListZipper.ast)
 (deps (:inputs  Relude_ListZipper.re.pp.ml)  ../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_ListZipper.d)
 (deps (:inputs  .././src/Relude_ListZipper.ast) )
(action (run meldep  -root-dir ../../.. -p relude -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_ListZipper.cmj Relude_ListZipper.cmi Relude_ListZipper.cmt Relude_ListZipper.bs.js)
 (alias mel)
 (deps (:inputs  Relude_ListZipper.ast)  (include Relude_ListZipper.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/mel)(alias ../../bisect_ppx/src/common/mel)(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel))
(action
  (run melc -I option -I ior -I array -I js -I extensions -I list -I . -I ../../../.melange.eobjs/node_modules/bisect_ppx -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src:.bs.js -o Relude_ListZipper.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_TreeZipper.re.pp.ml)
 (deps (:inputs  Relude_TreeZipper.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_TreeZipper.ast)
 (deps (:inputs  Relude_TreeZipper.re.pp.ml)  ../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_TreeZipper.d)
 (deps (:inputs  .././src/Relude_TreeZipper.ast) )
(action (run meldep  -root-dir ../../.. -p relude -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_TreeZipper.cmj Relude_TreeZipper.cmi Relude_TreeZipper.cmt Relude_TreeZipper.bs.js)
 (alias mel)
 (deps (:inputs  Relude_TreeZipper.ast)  (include Relude_TreeZipper.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/mel)(alias ../../bisect_ppx/src/common/mel)(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel))
(action
  (run melc -I option -I ior -I array -I js -I extensions -I list -I . -I ../../../.melange.eobjs/node_modules/bisect_ppx -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src:.bs.js -o Relude_TreeZipper.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Validation.re.pp.ml)
 (deps (:inputs  Relude_Validation.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Validation.ast)
 (deps (:inputs  Relude_Validation.re.pp.ml)  ../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Validation.d)
 (deps (:inputs  .././src/Relude_Validation.ast) )
(action (run meldep  -root-dir ../../.. -p relude -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Validation.cmj Relude_Validation.cmi Relude_Validation.cmt Relude_Validation.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Validation.ast)  (include Relude_Validation.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/mel)(alias ../../bisect_ppx/src/common/mel)(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel))
(action
  (run melc -I option -I ior -I array -I js -I extensions -I list -I . -I ../../../.melange.eobjs/node_modules/bisect_ppx -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src:.bs.js -o Relude_Validation.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_ArrayZipper.re.pp.ml)
 (deps (:inputs  Relude_ArrayZipper.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_ArrayZipper.ast)
 (deps (:inputs  Relude_ArrayZipper.re.pp.ml)  ../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_ArrayZipper.d)
 (deps (:inputs  .././src/Relude_ArrayZipper.ast) )
(action (run meldep  -root-dir ../../.. -p relude -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_ArrayZipper.cmj Relude_ArrayZipper.cmi Relude_ArrayZipper.cmt Relude_ArrayZipper.bs.js)
 (alias mel)
 (deps (:inputs  Relude_ArrayZipper.ast)  (include Relude_ArrayZipper.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/mel)(alias ../../bisect_ppx/src/common/mel)(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel))
(action
  (run melc -I option -I ior -I array -I js -I extensions -I list -I . -I ../../../.melange.eobjs/node_modules/bisect_ppx -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src:.bs.js -o Relude_ArrayZipper.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_AsyncResult.re.pp.ml)
 (deps (:inputs  Relude_AsyncResult.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_AsyncResult.ast)
 (deps (:inputs  Relude_AsyncResult.re.pp.ml)  ../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_AsyncResult.d)
 (deps (:inputs  .././src/Relude_AsyncResult.ast) )
(action (run meldep  -root-dir ../../.. -p relude -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_AsyncResult.cmj Relude_AsyncResult.cmi Relude_AsyncResult.cmt Relude_AsyncResult.bs.js)
 (alias mel)
 (deps (:inputs  Relude_AsyncResult.ast)  (include Relude_AsyncResult.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/mel)(alias ../../bisect_ppx/src/common/mel)(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel))
(action
  (run melc -I option -I ior -I array -I js -I extensions -I list -I . -I ../../../.melange.eobjs/node_modules/bisect_ppx -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src:.bs.js -o Relude_AsyncResult.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_SequenceZipper.re.pp.ml)
 (deps (:inputs  Relude_SequenceZipper.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_SequenceZipper.ast)
 (deps (:inputs  Relude_SequenceZipper.re.pp.ml)  ../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_SequenceZipper.d)
 (deps (:inputs  .././src/Relude_SequenceZipper.ast) )
(action (run meldep  -root-dir ../../.. -p relude -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_SequenceZipper.cmj Relude_SequenceZipper.cmi Relude_SequenceZipper.cmt Relude_SequenceZipper.bs.js)
 (alias mel)
 (deps (:inputs  Relude_SequenceZipper.ast)  (include Relude_SequenceZipper.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/mel)(alias ../../bisect_ppx/src/common/mel)(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel))
(action
  (run melc -I option -I ior -I array -I js -I extensions -I list -I . -I ../../../.melange.eobjs/node_modules/bisect_ppx -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src:.bs.js -o Relude_SequenceZipper.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Free_Applicative.re.pp.ml)
 (deps (:inputs  Relude_Free_Applicative.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Free_Applicative.ast)
 (deps (:inputs  Relude_Free_Applicative.re.pp.ml)  ../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Free_Applicative.d)
 (deps (:inputs  .././src/Relude_Free_Applicative.ast) )
(action (run meldep  -root-dir ../../.. -p relude -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Free_Applicative.cmj Relude_Free_Applicative.cmi Relude_Free_Applicative.cmt Relude_Free_Applicative.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Free_Applicative.ast)  (include Relude_Free_Applicative.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/mel)(alias ../../bisect_ppx/src/common/mel)(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel))
(action
  (run melc -I option -I ior -I array -I js -I extensions -I list -I . -I ../../../.melange.eobjs/node_modules/bisect_ppx -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src:.bs.js -o Relude_Free_Applicative.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 )
(subdir node_modules/relude/src/list
(rule
(targets  Relude_List_Base.re.pp.ml)
 (deps (:inputs  Relude_List_Base.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_List_Base.ast)
 (deps (:inputs  Relude_List_Base.re.pp.ml)  ../../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_List_Base.d)
 (deps (:inputs  ../.././src/list/Relude_List_Base.ast) )
(action (run meldep  -root-dir ../../../.. -p relude -proj-dir ../..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_List_Base.cmj Relude_List_Base.cmi Relude_List_Base.cmt Relude_List_Base.bs.js)
 (alias mel)
 (deps (:inputs  Relude_List_Base.ast)  (include Relude_List_Base.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel)(alias ../../../bs-bastet/bastet_js/src/mel)(alias ../../../bs-bastet/bastet/src/mel))
(action
  (run melc -I ../option -I ../ior -I ../array -I ../js -I ../extensions -I . -I .. -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src/list:.bs.js -o Relude_List_Base.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_List_Instances.re.pp.ml)
 (deps (:inputs  Relude_List_Instances.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_List_Instances.ast)
 (deps (:inputs  Relude_List_Instances.re.pp.ml)  ../../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_List_Instances.d)
 (deps (:inputs  ../.././src/list/Relude_List_Instances.ast) )
(action (run meldep  -root-dir ../../../.. -p relude -proj-dir ../..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_List_Instances.cmj Relude_List_Instances.cmi Relude_List_Instances.cmt Relude_List_Instances.bs.js)
 (alias mel)
 (deps (:inputs  Relude_List_Instances.ast)  (include Relude_List_Instances.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel)(alias ../../../bs-bastet/bastet_js/src/mel)(alias ../../../bs-bastet/bastet/src/mel))
(action
  (run melc -I ../option -I ../ior -I ../array -I ../js -I ../extensions -I . -I .. -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src/list:.bs.js -o Relude_List_Instances.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_List_Specializations.re.pp.ml)
 (deps (:inputs  Relude_List_Specializations.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_List_Specializations.ast)
 (deps (:inputs  Relude_List_Specializations.re.pp.ml)  ../../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_List_Specializations.d)
 (deps (:inputs  ../.././src/list/Relude_List_Specializations.ast) )
(action (run meldep  -root-dir ../../../.. -p relude -proj-dir ../..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_List_Specializations.cmj Relude_List_Specializations.cmi Relude_List_Specializations.cmt Relude_List_Specializations.bs.js)
 (alias mel)
 (deps (:inputs  Relude_List_Specializations.ast)  (include Relude_List_Specializations.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel)(alias ../../../bs-bastet/bastet_js/src/mel)(alias ../../../bs-bastet/bastet/src/mel))
(action
  (run melc -I ../option -I ../ior -I ../array -I ../js -I ../extensions -I . -I .. -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src/list:.bs.js -o Relude_List_Specializations.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 )
(subdir node_modules/relude/src/extensions
(rule
(targets  Relude_Extensions.re.pp.ml)
 (deps (:inputs  Relude_Extensions.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions.ast)
 (deps (:inputs  Relude_Extensions.re.pp.ml)  ../../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions.ast) )
(action (run meldep  -root-dir ../../../.. -p relude -proj-dir ../..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions.cmj Relude_Extensions.cmi Relude_Extensions.cmt Relude_Extensions.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Extensions.ast)  (include Relude_Extensions.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel)(alias ../../../bs-bastet/bastet_js/src/mel)(alias ../../../bs-bastet/bastet/src/mel))
(action
  (run melc -I ../option -I ../ior -I ../array -I ../js -I . -I ../list -I .. -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src/extensions:.bs.js -o Relude_Extensions.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Eq.re.pp.ml)
 (deps (:inputs  Relude_Extensions_Eq.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Eq.ast)
 (deps (:inputs  Relude_Extensions_Eq.re.pp.ml)  ../../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Eq.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_Eq.ast) )
(action (run meldep  -root-dir ../../../.. -p relude -proj-dir ../..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Eq.cmj Relude_Extensions_Eq.cmi Relude_Extensions_Eq.cmt Relude_Extensions_Eq.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Extensions_Eq.ast)  (include Relude_Extensions_Eq.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel)(alias ../../../bs-bastet/bastet_js/src/mel)(alias ../../../bs-bastet/bastet/src/mel))
(action
  (run melc -I ../option -I ../ior -I ../array -I ../js -I . -I ../list -I .. -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src/extensions:.bs.js -o Relude_Extensions_Eq.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Alt.re.pp.ml)
 (deps (:inputs  Relude_Extensions_Alt.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Alt.ast)
 (deps (:inputs  Relude_Extensions_Alt.re.pp.ml)  ../../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Alt.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_Alt.ast) )
(action (run meldep  -root-dir ../../../.. -p relude -proj-dir ../..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Alt.cmj Relude_Extensions_Alt.cmi Relude_Extensions_Alt.cmt Relude_Extensions_Alt.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Extensions_Alt.ast)  (include Relude_Extensions_Alt.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel)(alias ../../../bs-bastet/bastet_js/src/mel)(alias ../../../bs-bastet/bastet/src/mel))
(action
  (run melc -I ../option -I ../ior -I ../array -I ../js -I . -I ../list -I .. -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src/extensions:.bs.js -o Relude_Extensions_Alt.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Ord.re.pp.ml)
 (deps (:inputs  Relude_Extensions_Ord.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Ord.ast)
 (deps (:inputs  Relude_Extensions_Ord.re.pp.ml)  ../../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Ord.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_Ord.ast) )
(action (run meldep  -root-dir ../../../.. -p relude -proj-dir ../..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Ord.cmj Relude_Extensions_Ord.cmi Relude_Extensions_Ord.cmt Relude_Extensions_Ord.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Extensions_Ord.ast)  (include Relude_Extensions_Ord.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel)(alias ../../../bs-bastet/bastet_js/src/mel)(alias ../../../bs-bastet/bastet/src/mel))
(action
  (run melc -I ../option -I ../ior -I ../array -I ../js -I . -I ../list -I .. -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src/extensions:.bs.js -o Relude_Extensions_Ord.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Enum.re.pp.ml)
 (deps (:inputs  Relude_Extensions_Enum.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Enum.ast)
 (deps (:inputs  Relude_Extensions_Enum.re.pp.ml)  ../../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Enum.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_Enum.ast) )
(action (run meldep  -root-dir ../../../.. -p relude -proj-dir ../..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Enum.cmj Relude_Extensions_Enum.cmi Relude_Extensions_Enum.cmt Relude_Extensions_Enum.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Extensions_Enum.ast)  (include Relude_Extensions_Enum.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel)(alias ../../../bs-bastet/bastet_js/src/mel)(alias ../../../bs-bastet/bastet/src/mel))
(action
  (run melc -I ../option -I ../ior -I ../array -I ../js -I . -I ../list -I .. -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src/extensions:.bs.js -o Relude_Extensions_Enum.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Plus.re.pp.ml)
 (deps (:inputs  Relude_Extensions_Plus.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Plus.ast)
 (deps (:inputs  Relude_Extensions_Plus.re.pp.ml)  ../../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Plus.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_Plus.ast) )
(action (run meldep  -root-dir ../../../.. -p relude -proj-dir ../..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Plus.cmj Relude_Extensions_Plus.cmi Relude_Extensions_Plus.cmt Relude_Extensions_Plus.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Extensions_Plus.ast)  (include Relude_Extensions_Plus.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel)(alias ../../../bs-bastet/bastet_js/src/mel)(alias ../../../bs-bastet/bastet/src/mel))
(action
  (run melc -I ../option -I ../ior -I ../array -I ../js -I . -I ../list -I .. -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src/extensions:.bs.js -o Relude_Extensions_Plus.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Ring.re.pp.ml)
 (deps (:inputs  Relude_Extensions_Ring.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Ring.ast)
 (deps (:inputs  Relude_Extensions_Ring.re.pp.ml)  ../../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Ring.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_Ring.ast) )
(action (run meldep  -root-dir ../../../.. -p relude -proj-dir ../..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Ring.cmj Relude_Extensions_Ring.cmi Relude_Extensions_Ring.cmt Relude_Extensions_Ring.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Extensions_Ring.ast)  (include Relude_Extensions_Ring.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel)(alias ../../../bs-bastet/bastet_js/src/mel)(alias ../../../bs-bastet/bastet/src/mel))
(action
  (run melc -I ../option -I ../ior -I ../array -I ../js -I . -I ../list -I .. -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src/extensions:.bs.js -o Relude_Extensions_Ring.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Show.re.pp.ml)
 (deps (:inputs  Relude_Extensions_Show.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Show.ast)
 (deps (:inputs  Relude_Extensions_Show.re.pp.ml)  ../../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Show.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_Show.ast) )
(action (run meldep  -root-dir ../../../.. -p relude -proj-dir ../..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Show.cmj Relude_Extensions_Show.cmi Relude_Extensions_Show.cmt Relude_Extensions_Show.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Extensions_Show.ast)  (include Relude_Extensions_Show.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel)(alias ../../../bs-bastet/bastet_js/src/mel)(alias ../../../bs-bastet/bastet/src/mel))
(action
  (run melc -I ../option -I ../ior -I ../array -I ../js -I . -I ../list -I .. -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src/extensions:.bs.js -o Relude_Extensions_Show.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Align.re.pp.ml)
 (deps (:inputs  Relude_Extensions_Align.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Align.ast)
 (deps (:inputs  Relude_Extensions_Align.re.pp.ml)  ../../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Align.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_Align.ast) )
(action (run meldep  -root-dir ../../../.. -p relude -proj-dir ../..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Align.cmj Relude_Extensions_Align.cmi Relude_Extensions_Align.cmt Relude_Extensions_Align.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Extensions_Align.ast)  (include Relude_Extensions_Align.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel)(alias ../../../bs-bastet/bastet_js/src/mel)(alias ../../../bs-bastet/bastet/src/mel))
(action
  (run melc -I ../option -I ../ior -I ../array -I ../js -I . -I ../list -I .. -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src/extensions:.bs.js -o Relude_Extensions_Align.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Apply.re.pp.ml)
 (deps (:inputs  Relude_Extensions_Apply.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Apply.ast)
 (deps (:inputs  Relude_Extensions_Apply.re.pp.ml)  ../../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Apply.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_Apply.ast) )
(action (run meldep  -root-dir ../../../.. -p relude -proj-dir ../..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Apply.cmj Relude_Extensions_Apply.cmi Relude_Extensions_Apply.cmt Relude_Extensions_Apply.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Extensions_Apply.ast)  (include Relude_Extensions_Apply.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel)(alias ../../../bs-bastet/bastet_js/src/mel)(alias ../../../bs-bastet/bastet/src/mel))
(action
  (run melc -I ../option -I ../ior -I ../array -I ../js -I . -I ../list -I .. -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src/extensions:.bs.js -o Relude_Extensions_Apply.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Monad.re.pp.ml)
 (deps (:inputs  Relude_Extensions_Monad.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Monad.ast)
 (deps (:inputs  Relude_Extensions_Monad.re.pp.ml)  ../../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Monad.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_Monad.ast) )
(action (run meldep  -root-dir ../../../.. -p relude -proj-dir ../..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Monad.cmj Relude_Extensions_Monad.cmi Relude_Extensions_Monad.cmt Relude_Extensions_Monad.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Extensions_Monad.ast)  (include Relude_Extensions_Monad.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel)(alias ../../../bs-bastet/bastet_js/src/mel)(alias ../../../bs-bastet/bastet/src/mel))
(action
  (run melc -I ../option -I ../ior -I ../array -I ../js -I . -I ../list -I .. -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src/extensions:.bs.js -o Relude_Extensions_Monad.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Extend.re.pp.ml)
 (deps (:inputs  Relude_Extensions_Extend.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Extend.ast)
 (deps (:inputs  Relude_Extensions_Extend.re.pp.ml)  ../../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Extend.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_Extend.ast) )
(action (run meldep  -root-dir ../../../.. -p relude -proj-dir ../..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Extend.cmj Relude_Extensions_Extend.cmi Relude_Extensions_Extend.cmt Relude_Extensions_Extend.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Extensions_Extend.ast)  (include Relude_Extensions_Extend.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel)(alias ../../../bs-bastet/bastet_js/src/mel)(alias ../../../bs-bastet/bastet/src/mel))
(action
  (run melc -I ../option -I ../ior -I ../array -I ../js -I . -I ../list -I .. -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src/extensions:.bs.js -o Relude_Extensions_Extend.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Monoid.re.pp.ml)
 (deps (:inputs  Relude_Extensions_Monoid.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Monoid.ast)
 (deps (:inputs  Relude_Extensions_Monoid.re.pp.ml)  ../../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Monoid.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_Monoid.ast) )
(action (run meldep  -root-dir ../../../.. -p relude -proj-dir ../..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Monoid.cmj Relude_Extensions_Monoid.cmi Relude_Extensions_Monoid.cmt Relude_Extensions_Monoid.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Extensions_Monoid.ast)  (include Relude_Extensions_Monoid.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel)(alias ../../../bs-bastet/bastet_js/src/mel)(alias ../../../bs-bastet/bastet/src/mel))
(action
  (run melc -I ../option -I ../ior -I ../array -I ../js -I . -I ../list -I .. -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src/extensions:.bs.js -o Relude_Extensions_Monoid.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Bounded.re.pp.ml)
 (deps (:inputs  Relude_Extensions_Bounded.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Bounded.ast)
 (deps (:inputs  Relude_Extensions_Bounded.re.pp.ml)  ../../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Bounded.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_Bounded.ast) )
(action (run meldep  -root-dir ../../../.. -p relude -proj-dir ../..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Bounded.cmj Relude_Extensions_Bounded.cmi Relude_Extensions_Bounded.cmt Relude_Extensions_Bounded.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Extensions_Bounded.ast)  (include Relude_Extensions_Bounded.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel)(alias ../../../bs-bastet/bastet_js/src/mel)(alias ../../../bs-bastet/bastet/src/mel))
(action
  (run melc -I ../option -I ../ior -I ../array -I ../js -I . -I ../list -I .. -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src/extensions:.bs.js -o Relude_Extensions_Bounded.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Comonad.re.pp.ml)
 (deps (:inputs  Relude_Extensions_Comonad.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Comonad.ast)
 (deps (:inputs  Relude_Extensions_Comonad.re.pp.ml)  ../../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Comonad.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_Comonad.ast) )
(action (run meldep  -root-dir ../../../.. -p relude -proj-dir ../..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Comonad.cmj Relude_Extensions_Comonad.cmi Relude_Extensions_Comonad.cmt Relude_Extensions_Comonad.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Extensions_Comonad.ast)  (include Relude_Extensions_Comonad.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel)(alias ../../../bs-bastet/bastet_js/src/mel)(alias ../../../bs-bastet/bastet/src/mel))
(action
  (run melc -I ../option -I ../ior -I ../array -I ../js -I . -I ../list -I .. -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src/extensions:.bs.js -o Relude_Extensions_Comonad.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Functor.re.pp.ml)
 (deps (:inputs  Relude_Extensions_Functor.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Functor.ast)
 (deps (:inputs  Relude_Extensions_Functor.re.pp.ml)  ../../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Functor.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_Functor.ast) )
(action (run meldep  -root-dir ../../../.. -p relude -proj-dir ../..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Functor.cmj Relude_Extensions_Functor.cmi Relude_Extensions_Functor.cmt Relude_Extensions_Functor.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Extensions_Functor.ast)  (include Relude_Extensions_Functor.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel)(alias ../../../bs-bastet/bastet_js/src/mel)(alias ../../../bs-bastet/bastet/src/mel))
(action
  (run melc -I ../option -I ../ior -I ../array -I ../js -I . -I ../list -I .. -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src/extensions:.bs.js -o Relude_Extensions_Functor.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Foldable.re.pp.ml)
 (deps (:inputs  Relude_Extensions_Foldable.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Foldable.ast)
 (deps (:inputs  Relude_Extensions_Foldable.re.pp.ml)  ../../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Foldable.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_Foldable.ast) )
(action (run meldep  -root-dir ../../../.. -p relude -proj-dir ../..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Foldable.cmj Relude_Extensions_Foldable.cmi Relude_Extensions_Foldable.cmt Relude_Extensions_Foldable.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Extensions_Foldable.ast)  (include Relude_Extensions_Foldable.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel)(alias ../../../bs-bastet/bastet_js/src/mel)(alias ../../../bs-bastet/bastet/src/mel))
(action
  (run melc -I ../option -I ../ior -I ../array -I ../js -I . -I ../list -I .. -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src/extensions:.bs.js -o Relude_Extensions_Foldable.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Semiring.re.pp.ml)
 (deps (:inputs  Relude_Extensions_Semiring.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Semiring.ast)
 (deps (:inputs  Relude_Extensions_Semiring.re.pp.ml)  ../../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Semiring.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_Semiring.ast) )
(action (run meldep  -root-dir ../../../.. -p relude -proj-dir ../..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Semiring.cmj Relude_Extensions_Semiring.cmi Relude_Extensions_Semiring.cmt Relude_Extensions_Semiring.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Extensions_Semiring.ast)  (include Relude_Extensions_Semiring.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel)(alias ../../../bs-bastet/bastet_js/src/mel)(alias ../../../bs-bastet/bastet/src/mel))
(action
  (run melc -I ../option -I ../ior -I ../array -I ../js -I . -I ../list -I .. -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src/extensions:.bs.js -o Relude_Extensions_Semiring.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Bifunctor.re.pp.ml)
 (deps (:inputs  Relude_Extensions_Bifunctor.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Bifunctor.ast)
 (deps (:inputs  Relude_Extensions_Bifunctor.re.pp.ml)  ../../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Bifunctor.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_Bifunctor.ast) )
(action (run meldep  -root-dir ../../../.. -p relude -proj-dir ../..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Bifunctor.cmj Relude_Extensions_Bifunctor.cmi Relude_Extensions_Bifunctor.cmt Relude_Extensions_Bifunctor.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Extensions_Bifunctor.ast)  (include Relude_Extensions_Bifunctor.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel)(alias ../../../bs-bastet/bastet_js/src/mel)(alias ../../../bs-bastet/bastet/src/mel))
(action
  (run melc -I ../option -I ../ior -I ../array -I ../js -I . -I ../list -I .. -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src/extensions:.bs.js -o Relude_Extensions_Bifunctor.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_MonoidAny.re.pp.ml)
 (deps (:inputs  Relude_Extensions_MonoidAny.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_MonoidAny.ast)
 (deps (:inputs  Relude_Extensions_MonoidAny.re.pp.ml)  ../../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_MonoidAny.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_MonoidAny.ast) )
(action (run meldep  -root-dir ../../../.. -p relude -proj-dir ../..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_MonoidAny.cmj Relude_Extensions_MonoidAny.cmi Relude_Extensions_MonoidAny.cmt Relude_Extensions_MonoidAny.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Extensions_MonoidAny.ast)  (include Relude_Extensions_MonoidAny.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel)(alias ../../../bs-bastet/bastet_js/src/mel)(alias ../../../bs-bastet/bastet/src/mel))
(action
  (run melc -I ../option -I ../ior -I ../array -I ../js -I . -I ../list -I .. -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src/extensions:.bs.js -o Relude_Extensions_MonoidAny.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Semialign.re.pp.ml)
 (deps (:inputs  Relude_Extensions_Semialign.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Semialign.ast)
 (deps (:inputs  Relude_Extensions_Semialign.re.pp.ml)  ../../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Semialign.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_Semialign.ast) )
(action (run meldep  -root-dir ../../../.. -p relude -proj-dir ../..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Semialign.cmj Relude_Extensions_Semialign.cmi Relude_Extensions_Semialign.cmt Relude_Extensions_Semialign.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Extensions_Semialign.ast)  (include Relude_Extensions_Semialign.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel)(alias ../../../bs-bastet/bastet_js/src/mel)(alias ../../../bs-bastet/bastet/src/mel))
(action
  (run melc -I ../option -I ../ior -I ../array -I ../js -I . -I ../list -I .. -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src/extensions:.bs.js -o Relude_Extensions_Semialign.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Semigroup.re.pp.ml)
 (deps (:inputs  Relude_Extensions_Semigroup.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Semigroup.ast)
 (deps (:inputs  Relude_Extensions_Semigroup.re.pp.ml)  ../../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Semigroup.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_Semigroup.ast) )
(action (run meldep  -root-dir ../../../.. -p relude -proj-dir ../..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Semigroup.cmj Relude_Extensions_Semigroup.cmi Relude_Extensions_Semigroup.cmt Relude_Extensions_Semigroup.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Extensions_Semigroup.ast)  (include Relude_Extensions_Semigroup.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel)(alias ../../../bs-bastet/bastet_js/src/mel)(alias ../../../bs-bastet/bastet/src/mel))
(action
  (run melc -I ../option -I ../ior -I ../array -I ../js -I . -I ../list -I .. -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src/extensions:.bs.js -o Relude_Extensions_Semigroup.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Bifoldable.re.pp.ml)
 (deps (:inputs  Relude_Extensions_Bifoldable.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Bifoldable.ast)
 (deps (:inputs  Relude_Extensions_Bifoldable.re.pp.ml)  ../../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Bifoldable.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_Bifoldable.ast) )
(action (run meldep  -root-dir ../../../.. -p relude -proj-dir ../..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Bifoldable.cmj Relude_Extensions_Bifoldable.cmi Relude_Extensions_Bifoldable.cmt Relude_Extensions_Bifoldable.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Extensions_Bifoldable.ast)  (include Relude_Extensions_Bifoldable.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel)(alias ../../../bs-bastet/bastet_js/src/mel)(alias ../../../bs-bastet/bastet/src/mel))
(action
  (run melc -I ../option -I ../ior -I ../array -I ../js -I . -I ../list -I .. -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src/extensions:.bs.js -o Relude_Extensions_Bifoldable.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_MonadError.re.pp.ml)
 (deps (:inputs  Relude_Extensions_MonadError.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_MonadError.ast)
 (deps (:inputs  Relude_Extensions_MonadError.re.pp.ml)  ../../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_MonadError.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_MonadError.ast) )
(action (run meldep  -root-dir ../../../.. -p relude -proj-dir ../..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_MonadError.cmj Relude_Extensions_MonadError.cmi Relude_Extensions_MonadError.cmt Relude_Extensions_MonadError.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Extensions_MonadError.ast)  (include Relude_Extensions_MonadError.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel)(alias ../../../bs-bastet/bastet_js/src/mel)(alias ../../../bs-bastet/bastet/src/mel))
(action
  (run melc -I ../option -I ../ior -I ../array -I ../js -I . -I ../list -I .. -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src/extensions:.bs.js -o Relude_Extensions_MonadError.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_MonadThrow.re.pp.ml)
 (deps (:inputs  Relude_Extensions_MonadThrow.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_MonadThrow.ast)
 (deps (:inputs  Relude_Extensions_MonadThrow.re.pp.ml)  ../../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_MonadThrow.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_MonadThrow.ast) )
(action (run meldep  -root-dir ../../../.. -p relude -proj-dir ../..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_MonadThrow.cmj Relude_Extensions_MonadThrow.cmi Relude_Extensions_MonadThrow.cmt Relude_Extensions_MonadThrow.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Extensions_MonadThrow.ast)  (include Relude_Extensions_MonadThrow.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel)(alias ../../../bs-bastet/bastet_js/src/mel)(alias ../../../bs-bastet/bastet/src/mel))
(action
  (run melc -I ../option -I ../ior -I ../array -I ../js -I . -I ../list -I .. -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src/extensions:.bs.js -o Relude_Extensions_MonadThrow.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Unfoldable.re.pp.ml)
 (deps (:inputs  Relude_Extensions_Unfoldable.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Unfoldable.ast)
 (deps (:inputs  Relude_Extensions_Unfoldable.re.pp.ml)  ../../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Unfoldable.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_Unfoldable.ast) )
(action (run meldep  -root-dir ../../../.. -p relude -proj-dir ../..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Unfoldable.cmj Relude_Extensions_Unfoldable.cmi Relude_Extensions_Unfoldable.cmt Relude_Extensions_Unfoldable.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Extensions_Unfoldable.ast)  (include Relude_Extensions_Unfoldable.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel)(alias ../../../bs-bastet/bastet_js/src/mel)(alias ../../../bs-bastet/bastet/src/mel))
(action
  (run melc -I ../option -I ../ior -I ../array -I ../js -I . -I ../list -I .. -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src/extensions:.bs.js -o Relude_Extensions_Unfoldable.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Alternative.re.pp.ml)
 (deps (:inputs  Relude_Extensions_Alternative.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Alternative.ast)
 (deps (:inputs  Relude_Extensions_Alternative.re.pp.ml)  ../../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Alternative.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_Alternative.ast) )
(action (run meldep  -root-dir ../../../.. -p relude -proj-dir ../..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Alternative.cmj Relude_Extensions_Alternative.cmi Relude_Extensions_Alternative.cmt Relude_Extensions_Alternative.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Extensions_Alternative.ast)  (include Relude_Extensions_Alternative.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel)(alias ../../../bs-bastet/bastet_js/src/mel)(alias ../../../bs-bastet/bastet/src/mel))
(action
  (run melc -I ../option -I ../ior -I ../array -I ../js -I . -I ../list -I .. -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src/extensions:.bs.js -o Relude_Extensions_Alternative.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Applicative.re.pp.ml)
 (deps (:inputs  Relude_Extensions_Applicative.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Applicative.ast)
 (deps (:inputs  Relude_Extensions_Applicative.re.pp.ml)  ../../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Applicative.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_Applicative.ast) )
(action (run meldep  -root-dir ../../../.. -p relude -proj-dir ../..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Applicative.cmj Relude_Extensions_Applicative.cmi Relude_Extensions_Applicative.cmt Relude_Extensions_Applicative.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Extensions_Applicative.ast)  (include Relude_Extensions_Applicative.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel)(alias ../../../bs-bastet/bastet_js/src/mel)(alias ../../../bs-bastet/bastet/src/mel))
(action
  (run melc -I ../option -I ../ior -I ../array -I ../js -I . -I ../list -I .. -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src/extensions:.bs.js -o Relude_Extensions_Applicative.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_BoundedEnum.re.pp.ml)
 (deps (:inputs  Relude_Extensions_BoundedEnum.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_BoundedEnum.ast)
 (deps (:inputs  Relude_Extensions_BoundedEnum.re.pp.ml)  ../../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_BoundedEnum.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_BoundedEnum.ast) )
(action (run meldep  -root-dir ../../../.. -p relude -proj-dir ../..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_BoundedEnum.cmj Relude_Extensions_BoundedEnum.cmi Relude_Extensions_BoundedEnum.cmt Relude_Extensions_BoundedEnum.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Extensions_BoundedEnum.ast)  (include Relude_Extensions_BoundedEnum.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel)(alias ../../../bs-bastet/bastet_js/src/mel)(alias ../../../bs-bastet/bastet/src/mel))
(action
  (run melc -I ../option -I ../ior -I ../array -I ../js -I . -I ../list -I .. -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src/extensions:.bs.js -o Relude_Extensions_BoundedEnum.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Traversable.re.pp.ml)
 (deps (:inputs  Relude_Extensions_Traversable.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Traversable.ast)
 (deps (:inputs  Relude_Extensions_Traversable.re.pp.ml)  ../../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Traversable.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_Traversable.ast) )
(action (run meldep  -root-dir ../../../.. -p relude -proj-dir ../..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Traversable.cmj Relude_Extensions_Traversable.cmi Relude_Extensions_Traversable.cmt Relude_Extensions_Traversable.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Extensions_Traversable.ast)  (include Relude_Extensions_Traversable.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel)(alias ../../../bs-bastet/bastet_js/src/mel)(alias ../../../bs-bastet/bastet/src/mel))
(action
  (run melc -I ../option -I ../ior -I ../array -I ../js -I . -I ../list -I .. -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src/extensions:.bs.js -o Relude_Extensions_Traversable.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_SemigroupAny.re.pp.ml)
 (deps (:inputs  Relude_Extensions_SemigroupAny.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_SemigroupAny.ast)
 (deps (:inputs  Relude_Extensions_SemigroupAny.re.pp.ml)  ../../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_SemigroupAny.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_SemigroupAny.ast) )
(action (run meldep  -root-dir ../../../.. -p relude -proj-dir ../..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_SemigroupAny.cmj Relude_Extensions_SemigroupAny.cmi Relude_Extensions_SemigroupAny.cmt Relude_Extensions_SemigroupAny.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Extensions_SemigroupAny.ast)  (include Relude_Extensions_SemigroupAny.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel)(alias ../../../bs-bastet/bastet_js/src/mel)(alias ../../../bs-bastet/bastet/src/mel))
(action
  (run melc -I ../option -I ../ior -I ../array -I ../js -I . -I ../list -I .. -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src/extensions:.bs.js -o Relude_Extensions_SemigroupAny.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Semigroupoid.re.pp.ml)
 (deps (:inputs  Relude_Extensions_Semigroupoid.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Semigroupoid.ast)
 (deps (:inputs  Relude_Extensions_Semigroupoid.re.pp.ml)  ../../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Semigroupoid.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_Semigroupoid.ast) )
(action (run meldep  -root-dir ../../../.. -p relude -proj-dir ../..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Semigroupoid.cmj Relude_Extensions_Semigroupoid.cmi Relude_Extensions_Semigroupoid.cmt Relude_Extensions_Semigroupoid.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Extensions_Semigroupoid.ast)  (include Relude_Extensions_Semigroupoid.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel)(alias ../../../bs-bastet/bastet_js/src/mel)(alias ../../../bs-bastet/bastet/src/mel))
(action
  (run melc -I ../option -I ../ior -I ../array -I ../js -I . -I ../list -I .. -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src/extensions:.bs.js -o Relude_Extensions_Semigroupoid.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Bitraversable.re.pp.ml)
 (deps (:inputs  Relude_Extensions_Bitraversable.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Bitraversable.ast)
 (deps (:inputs  Relude_Extensions_Bitraversable.re.pp.ml)  ../../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Bitraversable.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_Bitraversable.ast) )
(action (run meldep  -root-dir ../../../.. -p relude -proj-dir ../..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Bitraversable.cmj Relude_Extensions_Bitraversable.cmi Relude_Extensions_Bitraversable.cmt Relude_Extensions_Bitraversable.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Extensions_Bitraversable.ast)  (include Relude_Extensions_Bitraversable.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel)(alias ../../../bs-bastet/bastet_js/src/mel)(alias ../../../bs-bastet/bastet/src/mel))
(action
  (run melc -I ../option -I ../ior -I ../array -I ../js -I . -I ../list -I .. -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src/extensions:.bs.js -o Relude_Extensions_Bitraversable.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Contravariant.re.pp.ml)
 (deps (:inputs  Relude_Extensions_Contravariant.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Contravariant.ast)
 (deps (:inputs  Relude_Extensions_Contravariant.re.pp.ml)  ../../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Contravariant.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_Contravariant.ast) )
(action (run meldep  -root-dir ../../../.. -p relude -proj-dir ../..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Contravariant.cmj Relude_Extensions_Contravariant.cmi Relude_Extensions_Contravariant.cmt Relude_Extensions_Contravariant.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Extensions_Contravariant.ast)  (include Relude_Extensions_Contravariant.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel)(alias ../../../bs-bastet/bastet_js/src/mel)(alias ../../../bs-bastet/bastet/src/mel))
(action
  (run melc -I ../option -I ../ior -I ../array -I ../js -I . -I ../list -I .. -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src/extensions:.bs.js -o Relude_Extensions_Contravariant.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 )
(subdir node_modules/relude/src/js
(rule
(targets  Relude_Js.re.pp.ml)
 (deps (:inputs  Relude_Js.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Js.ast)
 (deps (:inputs  Relude_Js.re.pp.ml)  ../../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Js.d)
 (deps (:inputs  ../.././src/js/Relude_Js.ast) )
(action (run meldep  -root-dir ../../../.. -p relude -proj-dir ../..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Js.cmj Relude_Js.cmi Relude_Js.cmt Relude_Js.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Js.ast)  (include Relude_Js.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel)(alias ../../../bs-bastet/bastet_js/src/mel)(alias ../../../bs-bastet/bastet/src/mel))
(action
  (run melc -I ../option -I ../ior -I ../array -I . -I ../extensions -I ../list -I .. -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src/js:.bs.js -o Relude_Js.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Js_Exn.re.pp.ml)
 (deps (:inputs  Relude_Js_Exn.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Js_Exn.ast)
 (deps (:inputs  Relude_Js_Exn.re.pp.ml)  ../../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Js_Exn.d)
 (deps (:inputs  ../.././src/js/Relude_Js_Exn.ast) )
(action (run meldep  -root-dir ../../../.. -p relude -proj-dir ../..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Js_Exn.cmj Relude_Js_Exn.cmi Relude_Js_Exn.cmt Relude_Js_Exn.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Js_Exn.ast)  (include Relude_Js_Exn.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel)(alias ../../../bs-bastet/bastet_js/src/mel)(alias ../../../bs-bastet/bastet/src/mel))
(action
  (run melc -I ../option -I ../ior -I ../array -I . -I ../extensions -I ../list -I .. -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src/js:.bs.js -o Relude_Js_Exn.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Js_Json.re.pp.ml)
 (deps (:inputs  Relude_Js_Json.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Js_Json.ast)
 (deps (:inputs  Relude_Js_Json.re.pp.ml)  ../../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Js_Json.d)
 (deps (:inputs  ../.././src/js/Relude_Js_Json.ast) )
(action (run meldep  -root-dir ../../../.. -p relude -proj-dir ../..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Js_Json.cmj Relude_Js_Json.cmi Relude_Js_Json.cmt Relude_Js_Json.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Js_Json.ast)  (include Relude_Js_Json.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel)(alias ../../../bs-bastet/bastet_js/src/mel)(alias ../../../bs-bastet/bastet/src/mel))
(action
  (run melc -I ../option -I ../ior -I ../array -I . -I ../extensions -I ../list -I .. -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src/js:.bs.js -o Relude_Js_Json.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Js_Console.re.pp.ml)
 (deps (:inputs  Relude_Js_Console.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Js_Console.ast)
 (deps (:inputs  Relude_Js_Console.re.pp.ml)  ../../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Js_Console.d)
 (deps (:inputs  ../.././src/js/Relude_Js_Console.ast) )
(action (run meldep  -root-dir ../../../.. -p relude -proj-dir ../..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Js_Console.cmj Relude_Js_Console.cmi Relude_Js_Console.cmt Relude_Js_Console.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Js_Console.ast)  (include Relude_Js_Console.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel)(alias ../../../bs-bastet/bastet_js/src/mel)(alias ../../../bs-bastet/bastet/src/mel))
(action
  (run melc -I ../option -I ../ior -I ../array -I . -I ../extensions -I ../list -I .. -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src/js:.bs.js -o Relude_Js_Console.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Js_Promise.re.pp.ml)
 (deps (:inputs  Relude_Js_Promise.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Js_Promise.ast)
 (deps (:inputs  Relude_Js_Promise.re.pp.ml)  ../../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Js_Promise.d)
 (deps (:inputs  ../.././src/js/Relude_Js_Promise.ast) )
(action (run meldep  -root-dir ../../../.. -p relude -proj-dir ../..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Js_Promise.cmj Relude_Js_Promise.cmi Relude_Js_Promise.cmt Relude_Js_Promise.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Js_Promise.ast)  (include Relude_Js_Promise.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel)(alias ../../../bs-bastet/bastet_js/src/mel)(alias ../../../bs-bastet/bastet/src/mel))
(action
  (run melc -I ../option -I ../ior -I ../array -I . -I ../extensions -I ../list -I .. -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src/js:.bs.js -o Relude_Js_Promise.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Js_Animation.re.pp.ml)
 (deps (:inputs  Relude_Js_Animation.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Js_Animation.ast)
 (deps (:inputs  Relude_Js_Animation.re.pp.ml)  ../../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Js_Animation.d)
 (deps (:inputs  ../.././src/js/Relude_Js_Animation.ast) )
(action (run meldep  -root-dir ../../../.. -p relude -proj-dir ../..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Js_Animation.cmj Relude_Js_Animation.cmi Relude_Js_Animation.cmt Relude_Js_Animation.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Js_Animation.ast)  (include Relude_Js_Animation.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel)(alias ../../../bs-bastet/bastet_js/src/mel)(alias ../../../bs-bastet/bastet/src/mel))
(action
  (run melc -I ../option -I ../ior -I ../array -I . -I ../extensions -I ../list -I .. -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src/js:.bs.js -o Relude_Js_Animation.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 )
(subdir node_modules/relude/src/array
(rule
(targets  Relude_Array_Base.re.pp.ml)
 (deps (:inputs  Relude_Array_Base.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Array_Base.ast)
 (deps (:inputs  Relude_Array_Base.re.pp.ml)  ../../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Array_Base.d)
 (deps (:inputs  ../.././src/array/Relude_Array_Base.ast) )
(action (run meldep  -root-dir ../../../.. -p relude -proj-dir ../..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Array_Base.cmj Relude_Array_Base.cmi Relude_Array_Base.cmt Relude_Array_Base.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Array_Base.ast)  (include Relude_Array_Base.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel)(alias ../../../bs-bastet/bastet_js/src/mel)(alias ../../../bs-bastet/bastet/src/mel))
(action
  (run melc -I ../option -I ../ior -I . -I ../js -I ../extensions -I ../list -I .. -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src/array:.bs.js -o Relude_Array_Base.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Array_Instances.re.pp.ml)
 (deps (:inputs  Relude_Array_Instances.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Array_Instances.ast)
 (deps (:inputs  Relude_Array_Instances.re.pp.ml)  ../../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Array_Instances.d)
 (deps (:inputs  ../.././src/array/Relude_Array_Instances.ast) )
(action (run meldep  -root-dir ../../../.. -p relude -proj-dir ../..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Array_Instances.cmj Relude_Array_Instances.cmi Relude_Array_Instances.cmt Relude_Array_Instances.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Array_Instances.ast)  (include Relude_Array_Instances.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel)(alias ../../../bs-bastet/bastet_js/src/mel)(alias ../../../bs-bastet/bastet/src/mel))
(action
  (run melc -I ../option -I ../ior -I . -I ../js -I ../extensions -I ../list -I .. -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src/array:.bs.js -o Relude_Array_Instances.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Array_Specializations.re.pp.ml)
 (deps (:inputs  Relude_Array_Specializations.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Array_Specializations.ast)
 (deps (:inputs  Relude_Array_Specializations.re.pp.ml)  ../../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Array_Specializations.d)
 (deps (:inputs  ../.././src/array/Relude_Array_Specializations.ast) )
(action (run meldep  -root-dir ../../../.. -p relude -proj-dir ../..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Array_Specializations.cmj Relude_Array_Specializations.cmi Relude_Array_Specializations.cmt Relude_Array_Specializations.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Array_Specializations.ast)  (include Relude_Array_Specializations.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel)(alias ../../../bs-bastet/bastet_js/src/mel)(alias ../../../bs-bastet/bastet/src/mel))
(action
  (run melc -I ../option -I ../ior -I . -I ../js -I ../extensions -I ../list -I .. -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src/array:.bs.js -o Relude_Array_Specializations.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 )
(subdir node_modules/relude/src/ior
(rule
(targets  Relude_Ior_Type.re.pp.ml)
 (deps (:inputs  Relude_Ior_Type.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Ior_Type.ast)
 (deps (:inputs  Relude_Ior_Type.re.pp.ml)  ../../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Ior_Type.d)
 (deps (:inputs  ../.././src/ior/Relude_Ior_Type.ast) )
(action (run meldep  -root-dir ../../../.. -p relude -proj-dir ../..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Ior_Type.cmj Relude_Ior_Type.cmi Relude_Ior_Type.cmt Relude_Ior_Type.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Ior_Type.ast)  (include Relude_Ior_Type.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel)(alias ../../../bs-bastet/bastet_js/src/mel)(alias ../../../bs-bastet/bastet/src/mel))
(action
  (run melc -I ../option -I . -I ../array -I ../js -I ../extensions -I ../list -I .. -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src/ior:.bs.js -o Relude_Ior_Type.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 )
(subdir node_modules/relude/src/option
(rule
(targets  Relude_Option_Base.re.pp.ml)
 (deps (:inputs  Relude_Option_Base.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Option_Base.ast)
 (deps (:inputs  Relude_Option_Base.re.pp.ml)  ../../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Option_Base.d)
 (deps (:inputs  ../.././src/option/Relude_Option_Base.ast) )
(action (run meldep  -root-dir ../../../.. -p relude -proj-dir ../..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Option_Base.cmj Relude_Option_Base.cmi Relude_Option_Base.cmt Relude_Option_Base.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Option_Base.ast)  (include Relude_Option_Base.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel)(alias ../../../bs-bastet/bastet_js/src/mel)(alias ../../../bs-bastet/bastet/src/mel))
(action
  (run melc -I . -I ../ior -I ../array -I ../js -I ../extensions -I ../list -I .. -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src/option:.bs.js -o Relude_Option_Base.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Option_Instances.re.pp.ml)
 (deps (:inputs  Relude_Option_Instances.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Option_Instances.ast)
 (deps (:inputs  Relude_Option_Instances.re.pp.ml)  ../../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Option_Instances.d)
 (deps (:inputs  ../.././src/option/Relude_Option_Instances.ast) )
(action (run meldep  -root-dir ../../../.. -p relude -proj-dir ../..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Option_Instances.cmj Relude_Option_Instances.cmi Relude_Option_Instances.cmt Relude_Option_Instances.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Option_Instances.ast)  (include Relude_Option_Instances.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel)(alias ../../../bs-bastet/bastet_js/src/mel)(alias ../../../bs-bastet/bastet/src/mel))
(action
  (run melc -I . -I ../ior -I ../array -I ../js -I ../extensions -I ../list -I .. -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src/option:.bs.js -o Relude_Option_Instances.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Option_Specializations.re.pp.ml)
 (deps (:inputs  Relude_Option_Specializations.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Option_Specializations.ast)
 (deps (:inputs  Relude_Option_Specializations.re.pp.ml)  ../../../../.melange.eobjs/node_modules/relude/.bsbuild)
(action
 (run melc  -w a -ppx "/home/trite/git/tritesite/node_modules/bisect_ppx/ppx --exclude-files .*_test.re$$ --exclude-files .*/testUtils/.*.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Option_Specializations.d)
 (deps (:inputs  ../.././src/option/Relude_Option_Specializations.ast) )
(action (run meldep  -root-dir ../../../.. -p relude -proj-dir ../..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Option_Specializations.cmj Relude_Option_Specializations.cmi Relude_Option_Specializations.cmt Relude_Option_Specializations.bs.js)
 (alias mel)
 (deps (:inputs  Relude_Option_Specializations.ast)  (include Relude_Option_Specializations.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/mel)(alias ../../../bisect_ppx/src/common/mel)(alias ../../../bs-bastet/bastet_js/src/mel)(alias ../../../bs-bastet/bastet/src/mel))
(action
  (run melc -I . -I ../ior -I ../array -I ../js -I ../extensions -I ../list -I .. -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../../.melange.eobjs/node_modules/bs-bastet -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src -bs-no-version-header -bs-super-errors  -w a -bs-package-name relude -bs-package-output commonjs:./src/option:.bs.js -o Relude_Option_Specializations.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 )

(subdir .melange.eobjs/node_modules/relude
(rule (write-file .bsbuild MTA2ClJlbHVkZQpSZWx1ZGVfRXEKUmVsdWRlX0lPClJlbHVkZV9KcwpSZWx1ZGVfSW50ClJlbHVkZV9Jb3IKUmVsdWRlX01hcApSZWx1ZGVfT3JkClJlbHVkZV9SSU8KUmVsdWRlX1NldApSZWx1ZGVfQm9vbApSZWx1ZGVfRnJlZQpSZWx1ZGVfSE1hcApSZWx1ZGVfTGlzdApSZWx1ZGVfUldTVApSZWx1ZGVfVHJlZQpSZWx1ZGVfVW5pdApSZWx1ZGVfVm9pZApSZWx1ZGVfQXJyYXkKUmVsdWRlX0NvbnRUClJlbHVkZV9GbG9hdApSZWx1ZGVfSExpc3QKUmVsdWRlX1RpbWVyClJlbHVkZV9UdXBsZQpSZWx1ZGVfSnNfRXhuClJlbHVkZV9PcHRpb24KUmVsdWRlX1Jlc3VsdApSZWx1ZGVfU3RhdGVUClJlbHVkZV9TdHJpbmcKUmVsdWRlX1R1cGxlMgpSZWx1ZGVfVHVwbGUzClJlbHVkZV9UdXBsZTQKUmVsdWRlX1R1cGxlNQpSZWx1ZGVfVW5zYWZlClJlbHVkZV9EZWNpbWFsClJlbHVkZV9HbG9iYWxzClJlbHVkZV9Kc19Kc29uClJlbHVkZV9PcHRpb25UClJlbHVkZV9SZWFkZXJUClJlbHVkZV9SZXN1bHRUClJlbHVkZV9Xcml0ZXJUClJlbHVkZV9EZWJvdW5jZQpSZWx1ZGVfRnVuY3Rpb24KUmVsdWRlX0lkZW50aXR5ClJlbHVkZV9Jb3JfVHlwZQpSZWx1ZGVfTm9uRW1wdHkKUmVsdWRlX09yZGVyaW5nClJlbHVkZV9TZXF1ZW5jZQpSZWx1ZGVfVGhyb3R0bGUKUmVsdWRlX0FzeW5jRGF0YQpSZWx1ZGVfSW50ZXJmYWNlClJlbHVkZV9MaXN0X0Jhc2UKUmVsdWRlX1N0cmluZ01hcApSZWx1ZGVfQXJyYXlfQmFzZQpSZWx1ZGVfRXh0ZW5zaW9ucwpSZWx1ZGVfRnJlZV9Nb25hZApSZWx1ZGVfSnNfQ29uc29sZQpSZWx1ZGVfSnNfUHJvbWlzZQpSZWx1ZGVfTGlzdFppcHBlcgpSZWx1ZGVfVHJlZVppcHBlcgpSZWx1ZGVfVmFsaWRhdGlvbgpSZWx1ZGVfQXJyYXlaaXBwZXIKUmVsdWRlX0FzeW5jUmVzdWx0ClJlbHVkZV9PcHRpb25fQmFzZQpSZWx1ZGVfSnNfQW5pbWF0aW9uClJlbHVkZV9FeHRlbnNpb25zX0VxClJlbHVkZV9FeHRlbnNpb25zX0FsdApSZWx1ZGVfRXh0ZW5zaW9uc19PcmQKUmVsdWRlX0xpc3RfSW5zdGFuY2VzClJlbHVkZV9TZXF1ZW5jZVppcHBlcgpSZWx1ZGVfQXJyYXlfSW5zdGFuY2VzClJlbHVkZV9FeHRlbnNpb25zX0VudW0KUmVsdWRlX0V4dGVuc2lvbnNfUGx1cwpSZWx1ZGVfRXh0ZW5zaW9uc19SaW5nClJlbHVkZV9FeHRlbnNpb25zX1Nob3cKUmVsdWRlX0V4dGVuc2lvbnNfQWxpZ24KUmVsdWRlX0V4dGVuc2lvbnNfQXBwbHkKUmVsdWRlX0V4dGVuc2lvbnNfTW9uYWQKUmVsdWRlX0ZyZWVfQXBwbGljYXRpdmUKUmVsdWRlX09wdGlvbl9JbnN0YW5jZXMKUmVsdWRlX0V4dGVuc2lvbnNfRXh0ZW5kClJlbHVkZV9FeHRlbnNpb25zX01vbm9pZApSZWx1ZGVfRXh0ZW5zaW9uc19Cb3VuZGVkClJlbHVkZV9FeHRlbnNpb25zX0NvbW9uYWQKUmVsdWRlX0V4dGVuc2lvbnNfRnVuY3RvcgpSZWx1ZGVfRXh0ZW5zaW9uc19Gb2xkYWJsZQpSZWx1ZGVfRXh0ZW5zaW9uc19TZW1pcmluZwpSZWx1ZGVfRXh0ZW5zaW9uc19CaWZ1bmN0b3IKUmVsdWRlX0V4dGVuc2lvbnNfTW9ub2lkQW55ClJlbHVkZV9FeHRlbnNpb25zX1NlbWlhbGlnbgpSZWx1ZGVfRXh0ZW5zaW9uc19TZW1pZ3JvdXAKUmVsdWRlX0xpc3RfU3BlY2lhbGl6YXRpb25zClJlbHVkZV9BcnJheV9TcGVjaWFsaXphdGlvbnMKUmVsdWRlX0V4dGVuc2lvbnNfQmlmb2xkYWJsZQpSZWx1ZGVfRXh0ZW5zaW9uc19Nb25hZEVycm9yClJlbHVkZV9FeHRlbnNpb25zX01vbmFkVGhyb3cKUmVsdWRlX0V4dGVuc2lvbnNfVW5mb2xkYWJsZQpSZWx1ZGVfRXh0ZW5zaW9uc19BbHRlcm5hdGl2ZQpSZWx1ZGVfRXh0ZW5zaW9uc19BcHBsaWNhdGl2ZQpSZWx1ZGVfRXh0ZW5zaW9uc19Cb3VuZGVkRW51bQpSZWx1ZGVfRXh0ZW5zaW9uc19UcmF2ZXJzYWJsZQpSZWx1ZGVfT3B0aW9uX1NwZWNpYWxpemF0aW9ucwpSZWx1ZGVfRXh0ZW5zaW9uc19TZW1pZ3JvdXBBbnkKUmVsdWRlX0V4dGVuc2lvbnNfU2VtaWdyb3Vwb2lkClJlbHVkZV9FeHRlbnNpb25zX0JpdHJhdmVyc2FibGUKUmVsdWRlX0V4dGVuc2lvbnNfQ29udHJhdmFyaWFudAouL3NyYwkuL3NyYy9qcwkuL3NyYy9pb3IJLi9zcmMvbGlzdAkuL3NyYy9hcnJheQkuL3NyYy9leHRlbnNpb25zCS4vc3JjL29wdGlvbgkKMQEBAQMBAQEBAQEBAQEBAQEBAQEBAQEBAQMBAQEBAQEBAQEBAQMBAQEBAQEBBQEBAQEBAQcBCQsBAwMBAQEBAQ0DCwsLBwEJCwsLCwsLCwENCwsLCwsLCwsLCwsHCQsLCwsLCwsLDQsLCwsKMAo=))
)

(subdir node_modules/bs-decode/src
(rule
(targets  Decode.re.pp.ml)
 (deps (:inputs  Decode.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Decode.ast)
 (deps (:inputs  Decode.re.pp.ml)  ../../../.melange.eobjs/node_modules/bs-decode/.bsbuild)
(action
 (run melc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Decode.d)
 (deps (:inputs  .././src/Decode.ast) )
(action (run meldep  -root-dir ../../.. -p bs-decode -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Decode.cmj Decode.cmi Decode.cmt Decode.bs.js)
 (alias mel)
 (deps (:inputs  Decode.ast)  (include Decode.d) ../bsconfig.json(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel)(alias ../../relude/src/mel)(alias ../../relude/src/list/mel)(alias ../../relude/src/extensions/mel)(alias ../../relude/src/js/mel)(alias ../../relude/src/array/mel)(alias ../../relude/src/ior/mel)(alias ../../relude/src/option/mel))
(action
  (run melc -I . -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -I ../../relude/src -I ../../relude/src/list -I ../../relude/src/extensions -I ../../relude/src/js -I ../../relude/src/array -I ../../relude/src/ior -I ../../relude/src/option   -w a -bs-package-name bs-decode -bs-package-output commonjs:./src:.bs.js -o Decode.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Decode_Base.re.pp.ml)
 (deps (:inputs  Decode_Base.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Decode_Base.ast)
 (deps (:inputs  Decode_Base.re.pp.ml)  ../../../.melange.eobjs/node_modules/bs-decode/.bsbuild)
(action
 (run melc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Decode_Base.d)
 (deps (:inputs  .././src/Decode_Base.ast) )
(action (run meldep  -root-dir ../../.. -p bs-decode -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Decode_Base.cmj Decode_Base.cmi Decode_Base.cmt Decode_Base.bs.js)
 (alias mel)
 (deps (:inputs  Decode_Base.ast)  (include Decode_Base.d) ../bsconfig.json(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel)(alias ../../relude/src/mel)(alias ../../relude/src/list/mel)(alias ../../relude/src/extensions/mel)(alias ../../relude/src/js/mel)(alias ../../relude/src/array/mel)(alias ../../relude/src/ior/mel)(alias ../../relude/src/option/mel))
(action
  (run melc -I . -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -I ../../relude/src -I ../../relude/src/list -I ../../relude/src/extensions -I ../../relude/src/js -I ../../relude/src/array -I ../../relude/src/ior -I ../../relude/src/option   -w a -bs-package-name bs-decode -bs-package-output commonjs:./src:.bs.js -o Decode_Base.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Decode_AsOption.re.pp.ml)
 (deps (:inputs  Decode_AsOption.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Decode_AsOption.ast)
 (deps (:inputs  Decode_AsOption.re.pp.ml)  ../../../.melange.eobjs/node_modules/bs-decode/.bsbuild)
(action
 (run melc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Decode_AsOption.d)
 (deps (:inputs  .././src/Decode_AsOption.ast .././src/Decode_AsOption.iast) )
(action (run meldep  -root-dir ../../.. -p bs-decode -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Decode_AsOption.rei.pp.mli)
 (deps (:inputs  Decode_AsOption.rei) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Decode_AsOption.iast)
 (deps (:inputs  Decode_AsOption.rei.pp.mli) )
(action
 (run melc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Decode_AsOption.cmi Decode_AsOption.cmti)
 (alias mel)
 (deps (:inputs  Decode_AsOption.iast)  (include Decode_AsOption.d) ../bsconfig.json(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel)(alias ../../relude/src/mel)(alias ../../relude/src/list/mel)(alias ../../relude/src/extensions/mel)(alias ../../relude/src/js/mel)(alias ../../relude/src/array/mel)(alias ../../relude/src/ior/mel)(alias ../../relude/src/option/mel))
(action
  (run melc -I . -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -I ../../relude/src -I ../../relude/src/list -I ../../relude/src/extensions -I ../../relude/src/js -I ../../relude/src/array -I ../../relude/src/ior -I ../../relude/src/option   -w a -o Decode_AsOption.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Decode_AsOption.cmj Decode_AsOption.cmt Decode_AsOption.bs.js)
 (alias mel)
 (deps (:inputs  Decode_AsOption.ast)  Decode_AsOption.cmi (include Decode_AsOption.d) ../bsconfig.json(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel)(alias ../../relude/src/mel)(alias ../../relude/src/list/mel)(alias ../../relude/src/extensions/mel)(alias ../../relude/src/js/mel)(alias ../../relude/src/array/mel)(alias ../../relude/src/ior/mel)(alias ../../relude/src/option/mel))
(action
  (run melc -bs-read-cmi -I . -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -I ../../relude/src -I ../../relude/src/list -I ../../relude/src/extensions -I ../../relude/src/js -I ../../relude/src/array -I ../../relude/src/ior -I ../../relude/src/option   -w a -bs-package-name bs-decode -bs-package-output commonjs:./src:.bs.js -o Decode_AsOption.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Decode_ParseError.re.pp.ml)
 (deps (:inputs  Decode_ParseError.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Decode_ParseError.ast)
 (deps (:inputs  Decode_ParseError.re.pp.ml)  ../../../.melange.eobjs/node_modules/bs-decode/.bsbuild)
(action
 (run melc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Decode_ParseError.d)
 (deps (:inputs  .././src/Decode_ParseError.ast .././src/Decode_ParseError.iast) )
(action (run meldep  -root-dir ../../.. -p bs-decode -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Decode_ParseError.rei.pp.mli)
 (deps (:inputs  Decode_ParseError.rei) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Decode_ParseError.iast)
 (deps (:inputs  Decode_ParseError.rei.pp.mli) )
(action
 (run melc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Decode_ParseError.cmi Decode_ParseError.cmti)
 (alias mel)
 (deps (:inputs  Decode_ParseError.iast)  (include Decode_ParseError.d) ../bsconfig.json(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel)(alias ../../relude/src/mel)(alias ../../relude/src/list/mel)(alias ../../relude/src/extensions/mel)(alias ../../relude/src/js/mel)(alias ../../relude/src/array/mel)(alias ../../relude/src/ior/mel)(alias ../../relude/src/option/mel))
(action
  (run melc -I . -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -I ../../relude/src -I ../../relude/src/list -I ../../relude/src/extensions -I ../../relude/src/js -I ../../relude/src/array -I ../../relude/src/ior -I ../../relude/src/option   -w a -o Decode_ParseError.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Decode_ParseError.cmj Decode_ParseError.cmt Decode_ParseError.bs.js)
 (alias mel)
 (deps (:inputs  Decode_ParseError.ast)  Decode_ParseError.cmi (include Decode_ParseError.d) ../bsconfig.json(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel)(alias ../../relude/src/mel)(alias ../../relude/src/list/mel)(alias ../../relude/src/extensions/mel)(alias ../../relude/src/js/mel)(alias ../../relude/src/array/mel)(alias ../../relude/src/ior/mel)(alias ../../relude/src/option/mel))
(action
  (run melc -bs-read-cmi -I . -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -I ../../relude/src -I ../../relude/src/list -I ../../relude/src/extensions -I ../../relude/src/js -I ../../relude/src/array -I ../../relude/src/ior -I ../../relude/src/option   -w a -bs-package-name bs-decode -bs-package-output commonjs:./src:.bs.js -o Decode_ParseError.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Decode_NonEmptyList.re.pp.ml)
 (deps (:inputs  Decode_NonEmptyList.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Decode_NonEmptyList.ast)
 (deps (:inputs  Decode_NonEmptyList.re.pp.ml)  ../../../.melange.eobjs/node_modules/bs-decode/.bsbuild)
(action
 (run melc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Decode_NonEmptyList.d)
 (deps (:inputs  .././src/Decode_NonEmptyList.ast) )
(action (run meldep  -root-dir ../../.. -p bs-decode -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Decode_NonEmptyList.cmj Decode_NonEmptyList.cmi Decode_NonEmptyList.cmt Decode_NonEmptyList.bs.js)
 (alias mel)
 (deps (:inputs  Decode_NonEmptyList.ast)  (include Decode_NonEmptyList.d) ../bsconfig.json(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel)(alias ../../relude/src/mel)(alias ../../relude/src/list/mel)(alias ../../relude/src/extensions/mel)(alias ../../relude/src/js/mel)(alias ../../relude/src/array/mel)(alias ../../relude/src/ior/mel)(alias ../../relude/src/option/mel))
(action
  (run melc -I . -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -I ../../relude/src -I ../../relude/src/list -I ../../relude/src/extensions -I ../../relude/src/js -I ../../relude/src/array -I ../../relude/src/ior -I ../../relude/src/option   -w a -bs-package-name bs-decode -bs-package-output commonjs:./src:.bs.js -o Decode_NonEmptyList.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Decode_AsResult_OfStringNel.re.pp.ml)
 (deps (:inputs  Decode_AsResult_OfStringNel.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Decode_AsResult_OfStringNel.ast)
 (deps (:inputs  Decode_AsResult_OfStringNel.re.pp.ml)  ../../../.melange.eobjs/node_modules/bs-decode/.bsbuild)
(action
 (run melc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Decode_AsResult_OfStringNel.d)
 (deps (:inputs  .././src/Decode_AsResult_OfStringNel.ast .././src/Decode_AsResult_OfStringNel.iast) )
(action (run meldep  -root-dir ../../.. -p bs-decode -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Decode_AsResult_OfStringNel.rei.pp.mli)
 (deps (:inputs  Decode_AsResult_OfStringNel.rei) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Decode_AsResult_OfStringNel.iast)
 (deps (:inputs  Decode_AsResult_OfStringNel.rei.pp.mli) )
(action
 (run melc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Decode_AsResult_OfStringNel.cmi Decode_AsResult_OfStringNel.cmti)
 (alias mel)
 (deps (:inputs  Decode_AsResult_OfStringNel.iast)  (include Decode_AsResult_OfStringNel.d) ../bsconfig.json(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel)(alias ../../relude/src/mel)(alias ../../relude/src/list/mel)(alias ../../relude/src/extensions/mel)(alias ../../relude/src/js/mel)(alias ../../relude/src/array/mel)(alias ../../relude/src/ior/mel)(alias ../../relude/src/option/mel))
(action
  (run melc -I . -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -I ../../relude/src -I ../../relude/src/list -I ../../relude/src/extensions -I ../../relude/src/js -I ../../relude/src/array -I ../../relude/src/ior -I ../../relude/src/option   -w a -o Decode_AsResult_OfStringNel.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Decode_AsResult_OfStringNel.cmj Decode_AsResult_OfStringNel.cmt Decode_AsResult_OfStringNel.bs.js)
 (alias mel)
 (deps (:inputs  Decode_AsResult_OfStringNel.ast)  Decode_AsResult_OfStringNel.cmi (include Decode_AsResult_OfStringNel.d) ../bsconfig.json(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel)(alias ../../relude/src/mel)(alias ../../relude/src/list/mel)(alias ../../relude/src/extensions/mel)(alias ../../relude/src/js/mel)(alias ../../relude/src/array/mel)(alias ../../relude/src/ior/mel)(alias ../../relude/src/option/mel))
(action
  (run melc -bs-read-cmi -I . -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -I ../../relude/src -I ../../relude/src/list -I ../../relude/src/extensions -I ../../relude/src/js -I ../../relude/src/array -I ../../relude/src/ior -I ../../relude/src/option   -w a -bs-package-name bs-decode -bs-package-output commonjs:./src:.bs.js -o Decode_AsResult_OfStringNel.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Decode_AsResult_OfParseError.re.pp.ml)
 (deps (:inputs  Decode_AsResult_OfParseError.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Decode_AsResult_OfParseError.ast)
 (deps (:inputs  Decode_AsResult_OfParseError.re.pp.ml)  ../../../.melange.eobjs/node_modules/bs-decode/.bsbuild)
(action
 (run melc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Decode_AsResult_OfParseError.d)
 (deps (:inputs  .././src/Decode_AsResult_OfParseError.ast .././src/Decode_AsResult_OfParseError.iast) )
(action (run meldep  -root-dir ../../.. -p bs-decode -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Decode_AsResult_OfParseError.rei.pp.mli)
 (deps (:inputs  Decode_AsResult_OfParseError.rei) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Decode_AsResult_OfParseError.iast)
 (deps (:inputs  Decode_AsResult_OfParseError.rei.pp.mli) )
(action
 (run melc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Decode_AsResult_OfParseError.cmi Decode_AsResult_OfParseError.cmti)
 (alias mel)
 (deps (:inputs  Decode_AsResult_OfParseError.iast)  (include Decode_AsResult_OfParseError.d) ../bsconfig.json(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel)(alias ../../relude/src/mel)(alias ../../relude/src/list/mel)(alias ../../relude/src/extensions/mel)(alias ../../relude/src/js/mel)(alias ../../relude/src/array/mel)(alias ../../relude/src/ior/mel)(alias ../../relude/src/option/mel))
(action
  (run melc -I . -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -I ../../relude/src -I ../../relude/src/list -I ../../relude/src/extensions -I ../../relude/src/js -I ../../relude/src/array -I ../../relude/src/ior -I ../../relude/src/option   -w a -o Decode_AsResult_OfParseError.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Decode_AsResult_OfParseError.cmj Decode_AsResult_OfParseError.cmt Decode_AsResult_OfParseError.bs.js)
 (alias mel)
 (deps (:inputs  Decode_AsResult_OfParseError.ast)  Decode_AsResult_OfParseError.cmi (include Decode_AsResult_OfParseError.d) ../bsconfig.json(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel)(alias ../../relude/src/mel)(alias ../../relude/src/list/mel)(alias ../../relude/src/extensions/mel)(alias ../../relude/src/js/mel)(alias ../../relude/src/array/mel)(alias ../../relude/src/ior/mel)(alias ../../relude/src/option/mel))
(action
  (run melc -bs-read-cmi -I . -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -I ../../relude/src -I ../../relude/src/list -I ../../relude/src/extensions -I ../../relude/src/js -I ../../relude/src/array -I ../../relude/src/ior -I ../../relude/src/option   -w a -bs-package-name bs-decode -bs-package-output commonjs:./src:.bs.js -o Decode_AsResult_OfParseError.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 )

(subdir .melange.eobjs/node_modules/bs-decode
(rule (write-file .bsbuild NwpEZWNvZGUKRGVjb2RlX0Jhc2UKRGVjb2RlX0FzT3B0aW9uCkRlY29kZV9QYXJzZUVycm9yCkRlY29kZV9Ob25FbXB0eUxpc3QKRGVjb2RlX0FzUmVzdWx0X09mU3RyaW5nTmVsCkRlY29kZV9Bc1Jlc3VsdF9PZlBhcnNlRXJyb3IKLi9zcmMJCjEBAQEBAQEBCjAK))
)

(subdir node_modules/bs-fetch/src
(rule
(targets  Fetch.ast)
 (deps (:inputs  Fetch.ml)  ../../../.melange.eobjs/node_modules/bs-fetch/.bsbuild)
(action
 (run melc  -w a -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Fetch.d)
 (deps (:inputs  .././src/Fetch.ast .././src/Fetch.iast) )
(action (run meldep  -root-dir ../../.. -p bs-fetch -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Fetch.iast)
 (deps (:inputs  Fetch.mli) )
(action
 (run melc  -w a -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Fetch.cmi Fetch.cmti)
 (alias mel)
 (deps (:inputs  Fetch.iast)  (include Fetch.d) ../bsconfig.json)
(action
  (run melc -I .  -bs-no-version-header -bs-super-errors  -w a -o Fetch.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Fetch.cmj Fetch.cmt Fetch.bs.js)
 (alias mel)
 (deps (:inputs  Fetch.ast)  Fetch.cmi (include Fetch.d) ../bsconfig.json)
(action
  (run melc -bs-read-cmi -I .  -bs-no-version-header -bs-super-errors  -w a -bs-package-name bs-fetch -bs-package-output commonjs:./src:.bs.js -o Fetch.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  bs_fetch.ast)
 (deps (:inputs  bs_fetch.ml)  ../../../.melange.eobjs/node_modules/bs-fetch/.bsbuild)
(action
 (run melc  -w a -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  bs_fetch.d)
 (deps (:inputs  .././src/bs_fetch.ast) )
(action (run meldep  -root-dir ../../.. -p bs-fetch -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  bs_fetch.cmj bs_fetch.cmi bs_fetch.cmt bs_fetch.bs.js)
 (alias mel)
 (deps (:inputs  bs_fetch.ast)  (include bs_fetch.d) ../bsconfig.json)
(action
  (run melc -I .  -bs-no-version-header -bs-super-errors  -w a -bs-package-name bs-fetch -bs-package-output commonjs:./src:.bs.js -o bs_fetch.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Fetch__Iterator.ast)
 (deps (:inputs  Fetch__Iterator.ml)  ../../../.melange.eobjs/node_modules/bs-fetch/.bsbuild)
(action
 (run melc  -w a -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Fetch__Iterator.d)
 (deps (:inputs  .././src/Fetch__Iterator.ast .././src/Fetch__Iterator.iast) )
(action (run meldep  -root-dir ../../.. -p bs-fetch -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Fetch__Iterator.iast)
 (deps (:inputs  Fetch__Iterator.mli) )
(action
 (run melc  -w a -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Fetch__Iterator.cmi Fetch__Iterator.cmti)
 (alias mel)
 (deps (:inputs  Fetch__Iterator.iast)  (include Fetch__Iterator.d) ../bsconfig.json)
(action
  (run melc -I .  -bs-no-version-header -bs-super-errors  -w a -o Fetch__Iterator.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Fetch__Iterator.cmj Fetch__Iterator.cmt Fetch__Iterator.bs.js)
 (alias mel)
 (deps (:inputs  Fetch__Iterator.ast)  Fetch__Iterator.cmi (include Fetch__Iterator.d) ../bsconfig.json)
(action
  (run melc -bs-read-cmi -I .  -bs-no-version-header -bs-super-errors  -w a -bs-package-name bs-fetch -bs-package-output commonjs:./src:.bs.js -o Fetch__Iterator.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 )

(subdir .melange.eobjs/node_modules/bs-fetch
(rule (write-file .bsbuild MwpGZXRjaApCc19mZXRjaApGZXRjaF9fSXRlcmF0b3IKLi9zcmMJCjEBAAEKMAo=))
)

(subdir node_modules/relude-fetch/src
(rule
(targets  ReludeFetch.re.pp.ml)
 (deps (:inputs  ReludeFetch.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReludeFetch.ast)
 (deps (:inputs  ReludeFetch.re.pp.ml)  ../../../.melange.eobjs/node_modules/relude-fetch/.bsbuild)
(action
 (run melc  -w a -bs-jsx 3  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReludeFetch.d)
 (deps (:inputs  .././src/ReludeFetch.ast) )
(action (run meldep  -root-dir ../../.. -p relude-fetch -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReludeFetch.cmj ReludeFetch.cmi ReludeFetch.cmt ReludeFetch.bs.js)
 (alias mel)
 (deps (:inputs  ReludeFetch.ast)  (include ReludeFetch.d) ../bsconfig.json(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel)(alias ../../bs-fetch/src/mel)(alias ../../relude/src/mel)(alias ../../relude/src/list/mel)(alias ../../relude/src/extensions/mel)(alias ../../relude/src/js/mel)(alias ../../relude/src/array/mel)(alias ../../relude/src/ior/mel)(alias ../../relude/src/option/mel))
(action
  (run melc -I . -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -I ../../bs-fetch/src -I ../../relude/src -I ../../relude/src/list -I ../../relude/src/extensions -I ../../relude/src/js -I ../../relude/src/array -I ../../relude/src/ior -I ../../relude/src/option   -w a -bs-package-name relude-fetch -bs-package-output commonjs:./src:.bs.js -o ReludeFetch.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReludeFetch_Body.re.pp.ml)
 (deps (:inputs  ReludeFetch_Body.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReludeFetch_Body.ast)
 (deps (:inputs  ReludeFetch_Body.re.pp.ml)  ../../../.melange.eobjs/node_modules/relude-fetch/.bsbuild)
(action
 (run melc  -w a -bs-jsx 3  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReludeFetch_Body.d)
 (deps (:inputs  .././src/ReludeFetch_Body.ast) )
(action (run meldep  -root-dir ../../.. -p relude-fetch -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReludeFetch_Body.cmj ReludeFetch_Body.cmi ReludeFetch_Body.cmt ReludeFetch_Body.bs.js)
 (alias mel)
 (deps (:inputs  ReludeFetch_Body.ast)  (include ReludeFetch_Body.d) ../bsconfig.json(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel)(alias ../../bs-fetch/src/mel)(alias ../../relude/src/mel)(alias ../../relude/src/list/mel)(alias ../../relude/src/extensions/mel)(alias ../../relude/src/js/mel)(alias ../../relude/src/array/mel)(alias ../../relude/src/ior/mel)(alias ../../relude/src/option/mel))
(action
  (run melc -I . -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -I ../../bs-fetch/src -I ../../relude/src -I ../../relude/src/list -I ../../relude/src/extensions -I ../../relude/src/js -I ../../relude/src/array -I ../../relude/src/ior -I ../../relude/src/option   -w a -bs-package-name relude-fetch -bs-package-output commonjs:./src:.bs.js -o ReludeFetch_Body.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReludeFetch_Error.re.pp.ml)
 (deps (:inputs  ReludeFetch_Error.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReludeFetch_Error.ast)
 (deps (:inputs  ReludeFetch_Error.re.pp.ml)  ../../../.melange.eobjs/node_modules/relude-fetch/.bsbuild)
(action
 (run melc  -w a -bs-jsx 3  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReludeFetch_Error.d)
 (deps (:inputs  .././src/ReludeFetch_Error.ast) )
(action (run meldep  -root-dir ../../.. -p relude-fetch -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReludeFetch_Error.cmj ReludeFetch_Error.cmi ReludeFetch_Error.cmt ReludeFetch_Error.bs.js)
 (alias mel)
 (deps (:inputs  ReludeFetch_Error.ast)  (include ReludeFetch_Error.d) ../bsconfig.json(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel)(alias ../../bs-fetch/src/mel)(alias ../../relude/src/mel)(alias ../../relude/src/list/mel)(alias ../../relude/src/extensions/mel)(alias ../../relude/src/js/mel)(alias ../../relude/src/array/mel)(alias ../../relude/src/ior/mel)(alias ../../relude/src/option/mel))
(action
  (run melc -I . -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -I ../../bs-fetch/src -I ../../relude/src -I ../../relude/src/list -I ../../relude/src/extensions -I ../../relude/src/js -I ../../relude/src/array -I ../../relude/src/ior -I ../../relude/src/option   -w a -bs-package-name relude-fetch -bs-package-output commonjs:./src:.bs.js -o ReludeFetch_Error.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReludeFetch_Headers.re.pp.ml)
 (deps (:inputs  ReludeFetch_Headers.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReludeFetch_Headers.ast)
 (deps (:inputs  ReludeFetch_Headers.re.pp.ml)  ../../../.melange.eobjs/node_modules/relude-fetch/.bsbuild)
(action
 (run melc  -w a -bs-jsx 3  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReludeFetch_Headers.d)
 (deps (:inputs  .././src/ReludeFetch_Headers.ast) )
(action (run meldep  -root-dir ../../.. -p relude-fetch -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReludeFetch_Headers.cmj ReludeFetch_Headers.cmi ReludeFetch_Headers.cmt ReludeFetch_Headers.bs.js)
 (alias mel)
 (deps (:inputs  ReludeFetch_Headers.ast)  (include ReludeFetch_Headers.d) ../bsconfig.json(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel)(alias ../../bs-fetch/src/mel)(alias ../../relude/src/mel)(alias ../../relude/src/list/mel)(alias ../../relude/src/extensions/mel)(alias ../../relude/src/js/mel)(alias ../../relude/src/array/mel)(alias ../../relude/src/ior/mel)(alias ../../relude/src/option/mel))
(action
  (run melc -I . -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -I ../../bs-fetch/src -I ../../relude/src -I ../../relude/src/list -I ../../relude/src/extensions -I ../../relude/src/js -I ../../relude/src/array -I ../../relude/src/ior -I ../../relude/src/option   -w a -bs-package-name relude-fetch -bs-package-output commonjs:./src:.bs.js -o ReludeFetch_Headers.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReludeFetch_Request.re.pp.ml)
 (deps (:inputs  ReludeFetch_Request.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReludeFetch_Request.ast)
 (deps (:inputs  ReludeFetch_Request.re.pp.ml)  ../../../.melange.eobjs/node_modules/relude-fetch/.bsbuild)
(action
 (run melc  -w a -bs-jsx 3  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReludeFetch_Request.d)
 (deps (:inputs  .././src/ReludeFetch_Request.ast) )
(action (run meldep  -root-dir ../../.. -p relude-fetch -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReludeFetch_Request.cmj ReludeFetch_Request.cmi ReludeFetch_Request.cmt ReludeFetch_Request.bs.js)
 (alias mel)
 (deps (:inputs  ReludeFetch_Request.ast)  (include ReludeFetch_Request.d) ../bsconfig.json(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel)(alias ../../bs-fetch/src/mel)(alias ../../relude/src/mel)(alias ../../relude/src/list/mel)(alias ../../relude/src/extensions/mel)(alias ../../relude/src/js/mel)(alias ../../relude/src/array/mel)(alias ../../relude/src/ior/mel)(alias ../../relude/src/option/mel))
(action
  (run melc -I . -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -I ../../bs-fetch/src -I ../../relude/src -I ../../relude/src/list -I ../../relude/src/extensions -I ../../relude/src/js -I ../../relude/src/array -I ../../relude/src/ior -I ../../relude/src/option   -w a -bs-package-name relude-fetch -bs-package-output commonjs:./src:.bs.js -o ReludeFetch_Request.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReludeFetch_FormData.re.pp.ml)
 (deps (:inputs  ReludeFetch_FormData.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReludeFetch_FormData.ast)
 (deps (:inputs  ReludeFetch_FormData.re.pp.ml)  ../../../.melange.eobjs/node_modules/relude-fetch/.bsbuild)
(action
 (run melc  -w a -bs-jsx 3  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReludeFetch_FormData.d)
 (deps (:inputs  .././src/ReludeFetch_FormData.ast) )
(action (run meldep  -root-dir ../../.. -p relude-fetch -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReludeFetch_FormData.cmj ReludeFetch_FormData.cmi ReludeFetch_FormData.cmt ReludeFetch_FormData.bs.js)
 (alias mel)
 (deps (:inputs  ReludeFetch_FormData.ast)  (include ReludeFetch_FormData.d) ../bsconfig.json(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel)(alias ../../bs-fetch/src/mel)(alias ../../relude/src/mel)(alias ../../relude/src/list/mel)(alias ../../relude/src/extensions/mel)(alias ../../relude/src/js/mel)(alias ../../relude/src/array/mel)(alias ../../relude/src/ior/mel)(alias ../../relude/src/option/mel))
(action
  (run melc -I . -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -I ../../bs-fetch/src -I ../../relude/src -I ../../relude/src/list -I ../../relude/src/extensions -I ../../relude/src/js -I ../../relude/src/array -I ../../relude/src/ior -I ../../relude/src/option   -w a -bs-package-name relude-fetch -bs-package-output commonjs:./src:.bs.js -o ReludeFetch_FormData.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReludeFetch_Response.re.pp.ml)
 (deps (:inputs  ReludeFetch_Response.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReludeFetch_Response.ast)
 (deps (:inputs  ReludeFetch_Response.re.pp.ml)  ../../../.melange.eobjs/node_modules/relude-fetch/.bsbuild)
(action
 (run melc  -w a -bs-jsx 3  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReludeFetch_Response.d)
 (deps (:inputs  .././src/ReludeFetch_Response.ast) )
(action (run meldep  -root-dir ../../.. -p relude-fetch -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReludeFetch_Response.cmj ReludeFetch_Response.cmi ReludeFetch_Response.cmt ReludeFetch_Response.bs.js)
 (alias mel)
 (deps (:inputs  ReludeFetch_Response.ast)  (include ReludeFetch_Response.d) ../bsconfig.json(alias ../../bs-bastet/bastet_js/src/mel)(alias ../../bs-bastet/bastet/src/mel)(alias ../../bs-fetch/src/mel)(alias ../../relude/src/mel)(alias ../../relude/src/list/mel)(alias ../../relude/src/extensions/mel)(alias ../../relude/src/js/mel)(alias ../../relude/src/array/mel)(alias ../../relude/src/ior/mel)(alias ../../relude/src/option/mel))
(action
  (run melc -I . -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src -I ../../bs-fetch/src -I ../../relude/src -I ../../relude/src/list -I ../../relude/src/extensions -I ../../relude/src/js -I ../../relude/src/array -I ../../relude/src/ior -I ../../relude/src/option   -w a -bs-package-name relude-fetch -bs-package-output commonjs:./src:.bs.js -o ReludeFetch_Response.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 )

(subdir .melange.eobjs/node_modules/relude-fetch
(rule (write-file .bsbuild NwpSZWx1ZGVGZXRjaApSZWx1ZGVGZXRjaF9Cb2R5ClJlbHVkZUZldGNoX0Vycm9yClJlbHVkZUZldGNoX0hlYWRlcnMKUmVsdWRlRmV0Y2hfUmVxdWVzdApSZWx1ZGVGZXRjaF9Gb3JtRGF0YQpSZWx1ZGVGZXRjaF9SZXNwb25zZQouL3NyYwkKMQEBAQEBAQEKMAo=))
)

(subdir node_modules/reason-react/src
(dirs :standard legacy)
(rule
(targets  React.re.pp.ml)
 (deps (:inputs  React.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  React.ast)
 (deps (:inputs  React.re.pp.ml)  ../../../.melange.eobjs/node_modules/reason-react/.bsbuild)
(action
 (run melc  -w a -bs-jsx 3 -bs-no-version-header -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  React.d)
 (deps (:inputs  .././src/React.ast) )
(action (run meldep  -root-dir ../../.. -p reason-react -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  React.cmj React.cmi React.cmt React.bs.js)
 (alias mel)
 (deps (:inputs  React.ast)  (include React.d) ../bsconfig.json)
(action
  (run melc -I legacy -I .  -bs-no-version-header  -w a -bs-package-name reason-react -bs-package-output commonjs:./src:.bs.js -o React.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReactDOM.re.pp.ml)
 (deps (:inputs  ReactDOM.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReactDOM.ast)
 (deps (:inputs  ReactDOM.re.pp.ml)  ../../../.melange.eobjs/node_modules/reason-react/.bsbuild)
(action
 (run melc  -w a -bs-jsx 3 -bs-no-version-header -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReactDOM.d)
 (deps (:inputs  .././src/ReactDOM.ast) )
(action (run meldep  -root-dir ../../.. -p reason-react -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReactDOM.cmj ReactDOM.cmi ReactDOM.cmt ReactDOM.bs.js)
 (alias mel)
 (deps (:inputs  ReactDOM.ast)  (include ReactDOM.d) ../bsconfig.json)
(action
  (run melc -I legacy -I .  -bs-no-version-header  -w a -bs-package-name reason-react -bs-package-output commonjs:./src:.bs.js -o ReactDOM.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReactEvent.re.pp.ml)
 (deps (:inputs  ReactEvent.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReactEvent.ast)
 (deps (:inputs  ReactEvent.re.pp.ml)  ../../../.melange.eobjs/node_modules/reason-react/.bsbuild)
(action
 (run melc  -w a -bs-jsx 3 -bs-no-version-header -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReactEvent.d)
 (deps (:inputs  .././src/ReactEvent.ast .././src/ReactEvent.iast) )
(action (run meldep  -root-dir ../../.. -p reason-react -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReactEvent.rei.pp.mli)
 (deps (:inputs  ReactEvent.rei) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReactEvent.iast)
 (deps (:inputs  ReactEvent.rei.pp.mli) )
(action
 (run melc  -w a -bs-jsx 3 -bs-no-version-header -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReactEvent.cmi ReactEvent.cmti)
 (alias mel)
 (deps (:inputs  ReactEvent.iast)  (include ReactEvent.d) ../bsconfig.json)
(action
  (run melc -I legacy -I .  -bs-no-version-header  -w a -o ReactEvent.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReactEvent.cmj ReactEvent.cmt ReactEvent.bs.js)
 (alias mel)
 (deps (:inputs  ReactEvent.ast)  ReactEvent.cmi (include ReactEvent.d) ../bsconfig.json)
(action
  (run melc -bs-read-cmi -I legacy -I .  -bs-no-version-header  -w a -bs-package-name reason-react -bs-package-output commonjs:./src:.bs.js -o ReactEvent.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReactDOMStyle.re.pp.ml)
 (deps (:inputs  ReactDOMStyle.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReactDOMStyle.ast)
 (deps (:inputs  ReactDOMStyle.re.pp.ml)  ../../../.melange.eobjs/node_modules/reason-react/.bsbuild)
(action
 (run melc  -w a -bs-jsx 3 -bs-no-version-header -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReactDOMStyle.d)
 (deps (:inputs  .././src/ReactDOMStyle.ast) )
(action (run meldep  -root-dir ../../.. -p reason-react -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReactDOMStyle.cmj ReactDOMStyle.cmi ReactDOMStyle.cmt ReactDOMStyle.bs.js)
 (alias mel)
 (deps (:inputs  ReactDOMStyle.ast)  (include ReactDOMStyle.d) ../bsconfig.json)
(action
  (run melc -I legacy -I .  -bs-no-version-header  -w a -bs-package-name reason-react -bs-package-output commonjs:./src:.bs.js -o ReactDOMStyle.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReactDOMServer.re.pp.ml)
 (deps (:inputs  ReactDOMServer.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReactDOMServer.ast)
 (deps (:inputs  ReactDOMServer.re.pp.ml)  ../../../.melange.eobjs/node_modules/reason-react/.bsbuild)
(action
 (run melc  -w a -bs-jsx 3 -bs-no-version-header -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReactDOMServer.d)
 (deps (:inputs  .././src/ReactDOMServer.ast) )
(action (run meldep  -root-dir ../../.. -p reason-react -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReactDOMServer.cmj ReactDOMServer.cmi ReactDOMServer.cmt ReactDOMServer.bs.js)
 (alias mel)
 (deps (:inputs  ReactDOMServer.ast)  (include ReactDOMServer.d) ../bsconfig.json)
(action
  (run melc -I legacy -I .  -bs-no-version-header  -w a -bs-package-name reason-react -bs-package-output commonjs:./src:.bs.js -o ReactDOMServer.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReactTestUtils.re.pp.ml)
 (deps (:inputs  ReactTestUtils.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReactTestUtils.ast)
 (deps (:inputs  ReactTestUtils.re.pp.ml)  ../../../.melange.eobjs/node_modules/reason-react/.bsbuild)
(action
 (run melc  -w a -bs-jsx 3 -bs-no-version-header -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReactTestUtils.d)
 (deps (:inputs  .././src/ReactTestUtils.ast .././src/ReactTestUtils.iast) )
(action (run meldep  -root-dir ../../.. -p reason-react -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReactTestUtils.rei.pp.mli)
 (deps (:inputs  ReactTestUtils.rei) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReactTestUtils.iast)
 (deps (:inputs  ReactTestUtils.rei.pp.mli) )
(action
 (run melc  -w a -bs-jsx 3 -bs-no-version-header -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReactTestUtils.cmi ReactTestUtils.cmti)
 (alias mel)
 (deps (:inputs  ReactTestUtils.iast)  (include ReactTestUtils.d) ../bsconfig.json)
(action
  (run melc -I legacy -I .  -bs-no-version-header  -w a -o ReactTestUtils.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReactTestUtils.cmj ReactTestUtils.cmt ReactTestUtils.bs.js)
 (alias mel)
 (deps (:inputs  ReactTestUtils.ast)  ReactTestUtils.cmi (include ReactTestUtils.d) ../bsconfig.json)
(action
  (run melc -bs-read-cmi -I legacy -I .  -bs-no-version-header  -w a -bs-package-name reason-react -bs-package-output commonjs:./src:.bs.js -o ReactTestUtils.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReasonReactRouter.re.pp.ml)
 (deps (:inputs  ReasonReactRouter.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReasonReactRouter.ast)
 (deps (:inputs  ReasonReactRouter.re.pp.ml)  ../../../.melange.eobjs/node_modules/reason-react/.bsbuild)
(action
 (run melc  -w a -bs-jsx 3 -bs-no-version-header -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReasonReactRouter.d)
 (deps (:inputs  .././src/ReasonReactRouter.ast .././src/ReasonReactRouter.iast) )
(action (run meldep  -root-dir ../../.. -p reason-react -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReasonReactRouter.rei.pp.mli)
 (deps (:inputs  ReasonReactRouter.rei) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReasonReactRouter.iast)
 (deps (:inputs  ReasonReactRouter.rei.pp.mli) )
(action
 (run melc  -w a -bs-jsx 3 -bs-no-version-header -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReasonReactRouter.cmi ReasonReactRouter.cmti)
 (alias mel)
 (deps (:inputs  ReasonReactRouter.iast)  (include ReasonReactRouter.d) ../bsconfig.json)
(action
  (run melc -I legacy -I .  -bs-no-version-header  -w a -o ReasonReactRouter.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReasonReactRouter.cmj ReasonReactRouter.cmt ReasonReactRouter.bs.js)
 (alias mel)
 (deps (:inputs  ReasonReactRouter.ast)  ReasonReactRouter.cmi (include ReasonReactRouter.d) ../bsconfig.json)
(action
  (run melc -bs-read-cmi -I legacy -I .  -bs-no-version-header  -w a -bs-package-name reason-react -bs-package-output commonjs:./src:.bs.js -o ReasonReactRouter.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReasonReactErrorBoundary.re.pp.ml)
 (deps (:inputs  ReasonReactErrorBoundary.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReasonReactErrorBoundary.ast)
 (deps (:inputs  ReasonReactErrorBoundary.re.pp.ml)  ../../../.melange.eobjs/node_modules/reason-react/.bsbuild)
(action
 (run melc  -w a -bs-jsx 3 -bs-no-version-header -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReasonReactErrorBoundary.d)
 (deps (:inputs  .././src/ReasonReactErrorBoundary.ast .././src/ReasonReactErrorBoundary.iast) )
(action (run meldep  -root-dir ../../.. -p reason-react -proj-dir ..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReasonReactErrorBoundary.rei.pp.mli)
 (deps (:inputs  ReasonReactErrorBoundary.rei) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReasonReactErrorBoundary.iast)
 (deps (:inputs  ReasonReactErrorBoundary.rei.pp.mli) )
(action
 (run melc  -w a -bs-jsx 3 -bs-no-version-header -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReasonReactErrorBoundary.cmi ReasonReactErrorBoundary.cmti)
 (alias mel)
 (deps (:inputs  ReasonReactErrorBoundary.iast)  (include ReasonReactErrorBoundary.d) ../bsconfig.json)
(action
  (run melc -I legacy -I .  -bs-no-version-header  -w a -o ReasonReactErrorBoundary.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReasonReactErrorBoundary.cmj ReasonReactErrorBoundary.cmt ReasonReactErrorBoundary.bs.js)
 (alias mel)
 (deps (:inputs  ReasonReactErrorBoundary.ast)  ReasonReactErrorBoundary.cmi (include ReasonReactErrorBoundary.d) ../bsconfig.json)
(action
  (run melc -bs-read-cmi -I legacy -I .  -bs-no-version-header  -w a -bs-package-name reason-react -bs-package-output commonjs:./src:.bs.js -o ReasonReactErrorBoundary.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 )
(subdir node_modules/reason-react/src/legacy
(rule
(targets  ReactDOMRe.re.pp.ml)
 (deps (:inputs  ReactDOMRe.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReactDOMRe.ast)
 (deps (:inputs  ReactDOMRe.re.pp.ml)  ../../../../.melange.eobjs/node_modules/reason-react/.bsbuild)
(action
 (run melc  -w a -bs-jsx 3 -bs-no-version-header -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReactDOMRe.d)
 (deps (:inputs  ../.././src/legacy/ReactDOMRe.ast) )
(action (run meldep  -root-dir ../../../.. -p reason-react -proj-dir ../..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReactDOMRe.cmj ReactDOMRe.cmi ReactDOMRe.cmt ReactDOMRe.bs.js)
 (alias mel)
 (deps (:inputs  ReactDOMRe.ast)  (include ReactDOMRe.d) ../../bsconfig.json)
(action
  (run melc -I . -I ..  -bs-no-version-header  -w a -bs-package-name reason-react -bs-package-output commonjs:./src/legacy:.bs.js -o ReactDOMRe.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReasonReact.re.pp.ml)
 (deps (:inputs  ReasonReact.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReasonReact.ast)
 (deps (:inputs  ReasonReact.re.pp.ml)  ../../../../.melange.eobjs/node_modules/reason-react/.bsbuild)
(action
 (run melc  -w a -bs-jsx 3 -bs-no-version-header -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReasonReact.d)
 (deps (:inputs  ../.././src/legacy/ReasonReact.ast ../.././src/legacy/ReasonReact.iast) )
(action (run meldep  -root-dir ../../../.. -p reason-react -proj-dir ../..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReasonReact.rei.pp.mli)
 (deps (:inputs  ReasonReact.rei) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReasonReact.iast)
 (deps (:inputs  ReasonReact.rei.pp.mli) )
(action
 (run melc  -w a -bs-jsx 3 -bs-no-version-header -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReasonReact.cmi ReasonReact.cmti)
 (alias mel)
 (deps (:inputs  ReasonReact.iast)  (include ReasonReact.d) ../../bsconfig.json)
(action
  (run melc -I . -I ..  -bs-no-version-header  -w a -o ReasonReact.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReasonReact.cmj ReasonReact.cmt ReasonReact.bs.js)
 (alias mel)
 (deps (:inputs  ReasonReact.ast)  ReasonReact.cmi (include ReasonReact.d) ../../bsconfig.json)
(action
  (run melc -bs-read-cmi -I . -I ..  -bs-no-version-header  -w a -bs-package-name reason-react -bs-package-output commonjs:./src/legacy:.bs.js -o ReasonReact.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReactEventRe.re.pp.ml)
 (deps (:inputs  ReactEventRe.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReactEventRe.ast)
 (deps (:inputs  ReactEventRe.re.pp.ml)  ../../../../.melange.eobjs/node_modules/reason-react/.bsbuild)
(action
 (run melc  -w a -bs-jsx 3 -bs-no-version-header -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReactEventRe.d)
 (deps (:inputs  ../.././src/legacy/ReactEventRe.ast ../.././src/legacy/ReactEventRe.iast) )
(action (run meldep  -root-dir ../../../.. -p reason-react -proj-dir ../..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReactEventRe.rei.pp.mli)
 (deps (:inputs  ReactEventRe.rei) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReactEventRe.iast)
 (deps (:inputs  ReactEventRe.rei.pp.mli) )
(action
 (run melc  -w a -bs-jsx 3 -bs-no-version-header -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReactEventRe.cmi ReactEventRe.cmti)
 (alias mel)
 (deps (:inputs  ReactEventRe.iast)  (include ReactEventRe.d) ../../bsconfig.json)
(action
  (run melc -I . -I ..  -bs-no-version-header  -w a -o ReactEventRe.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReactEventRe.cmj ReactEventRe.cmt ReactEventRe.bs.js)
 (alias mel)
 (deps (:inputs  ReactEventRe.ast)  ReactEventRe.cmi (include ReactEventRe.d) ../../bsconfig.json)
(action
  (run melc -bs-read-cmi -I . -I ..  -bs-no-version-header  -w a -bs-package-name reason-react -bs-package-output commonjs:./src/legacy:.bs.js -o ReactEventRe.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReactDOMServerRe.re.pp.ml)
 (deps (:inputs  ReactDOMServerRe.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReactDOMServerRe.ast)
 (deps (:inputs  ReactDOMServerRe.re.pp.ml)  ../../../../.melange.eobjs/node_modules/reason-react/.bsbuild)
(action
 (run melc  -w a -bs-jsx 3 -bs-no-version-header -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReactDOMServerRe.d)
 (deps (:inputs  ../.././src/legacy/ReactDOMServerRe.ast) )
(action (run meldep  -root-dir ../../../.. -p reason-react -proj-dir ../..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReactDOMServerRe.cmj ReactDOMServerRe.cmi ReactDOMServerRe.cmt ReactDOMServerRe.bs.js)
 (alias mel)
 (deps (:inputs  ReactDOMServerRe.ast)  (include ReactDOMServerRe.d) ../../bsconfig.json)
(action
  (run melc -I . -I ..  -bs-no-version-header  -w a -bs-package-name reason-react -bs-package-output commonjs:./src/legacy:.bs.js -o ReactDOMServerRe.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReasonReactCompat.re.pp.ml)
 (deps (:inputs  ReasonReactCompat.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReasonReactCompat.ast)
 (deps (:inputs  ReasonReactCompat.re.pp.ml)  ../../../../.melange.eobjs/node_modules/reason-react/.bsbuild)
(action
 (run melc  -w a -bs-jsx 3 -bs-no-version-header -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReasonReactCompat.d)
 (deps (:inputs  ../.././src/legacy/ReasonReactCompat.ast ../.././src/legacy/ReasonReactCompat.iast) )
(action (run meldep  -root-dir ../../../.. -p reason-react -proj-dir ../..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReasonReactCompat.rei.pp.mli)
 (deps (:inputs  ReasonReactCompat.rei) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReasonReactCompat.iast)
 (deps (:inputs  ReasonReactCompat.rei.pp.mli) )
(action
 (run melc  -w a -bs-jsx 3 -bs-no-version-header -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReasonReactCompat.cmi ReasonReactCompat.cmti)
 (alias mel)
 (deps (:inputs  ReasonReactCompat.iast)  (include ReasonReactCompat.d) ../../bsconfig.json)
(action
  (run melc -I . -I ..  -bs-no-version-header  -w a -o ReasonReactCompat.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReasonReactCompat.cmj ReasonReactCompat.cmt ReasonReactCompat.bs.js)
 (alias mel)
 (deps (:inputs  ReasonReactCompat.ast)  ReasonReactCompat.cmi (include ReasonReactCompat.d) ../../bsconfig.json)
(action
  (run melc -bs-read-cmi -I . -I ..  -bs-no-version-header  -w a -bs-package-name reason-react -bs-package-output commonjs:./src/legacy:.bs.js -o ReasonReactCompat.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReasonReactOptimizedCreateClass.re.pp.ml)
 (deps (:inputs  ReasonReactOptimizedCreateClass.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReasonReactOptimizedCreateClass.ast)
 (deps (:inputs  ReasonReactOptimizedCreateClass.re.pp.ml)  ../../../../.melange.eobjs/node_modules/reason-react/.bsbuild)
(action
 (run melc  -w a -bs-jsx 3 -bs-no-version-header -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReasonReactOptimizedCreateClass.d)
 (deps (:inputs  ../.././src/legacy/ReasonReactOptimizedCreateClass.ast) )
(action (run meldep  -root-dir ../../../.. -p reason-react -proj-dir ../..  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ReasonReactOptimizedCreateClass.cmj ReasonReactOptimizedCreateClass.cmi ReasonReactOptimizedCreateClass.cmt ReasonReactOptimizedCreateClass.bs.js)
 (alias mel)
 (deps (:inputs  ReasonReactOptimizedCreateClass.ast)  (include ReasonReactOptimizedCreateClass.d) ../../bsconfig.json)
(action
  (run melc -I . -I ..  -bs-no-version-header  -w a -bs-package-name reason-react -bs-package-output commonjs:./src/legacy:.bs.js -o ReasonReactOptimizedCreateClass.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 )

(subdir .melange.eobjs/node_modules/reason-react
(rule (write-file .bsbuild MTQKUmVhY3QKUmVhY3RET00KUmVhY3RET01SZQpSZWFjdEV2ZW50ClJlYXNvblJlYWN0ClJlYWN0RXZlbnRSZQpSZWFjdERPTVN0eWxlClJlYWN0RE9NU2VydmVyClJlYWN0VGVzdFV0aWxzClJlYWN0RE9NU2VydmVyUmUKUmVhc29uUmVhY3RDb21wYXQKUmVhc29uUmVhY3RSb3V0ZXIKUmVhc29uUmVhY3RFcnJvckJvdW5kYXJ5ClJlYXNvblJlYWN0T3B0aW1pemVkQ3JlYXRlQ2xhc3MKLi9zcmMJLi9zcmMvbGVnYWN5CQoxAQEDAQMDAQEBAwMBAQMKMAo=))
)

(subdir src
(dirs :standard sandbox)
(rule
(targets  Home.re.pp.ml)
 (deps (:inputs  Home.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Home.ast)
 (deps (:inputs  Home.re.pp.ml)  ../.melange.eobjs/.bsbuild)
(action
 (run melc  -warn-error +101 -bs-jsx 3 -open Relude.Globals -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Home.d)
 (deps (:inputs  .././src/Home.ast) )
(action (run meldep  -root-dir .. -p tritesite -proj-dir ..  -bs-ns Tritesite %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Home-Tritesite.cmj Home-Tritesite.cmi Home-Tritesite.cmt Home.bs.js)
 (alias mel)
 (deps (:inputs  Home.ast)  (include Home.d) ../bsconfig.json ../.melange.eobjs/Tritesite.cmi(alias ../node_modules/bs-bastet/bastet_js/src/mel)(alias ../node_modules/bs-bastet/bastet/src/mel)(alias ../node_modules/bs-css/src/mel)(alias ../node_modules/bs-css-emotion/src/mel)(alias ../node_modules/bs-decode/src/mel)(alias ../node_modules/bs-fetch/src/mel)(alias ../node_modules/relude/src/mel)(alias ../node_modules/relude/src/list/mel)(alias ../node_modules/relude/src/extensions/mel)(alias ../node_modules/relude/src/js/mel)(alias ../node_modules/relude/src/array/mel)(alias ../node_modules/relude/src/ior/mel)(alias ../node_modules/relude/src/option/mel)(alias ../node_modules/relude-fetch/src/mel)(alias ../node_modules/reason-react/src/mel)(alias ../node_modules/reason-react/src/legacy/mel))
(action
  (run melc -bs-ns Tritesite -I sandbox -I . -I ../.melange.eobjs -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/bs-css/src -I ../node_modules/bs-css-emotion/src -I ../node_modules/bs-decode/src -I ../node_modules/bs-fetch/src -I ../node_modules/relude/src -I ../node_modules/relude/src/list -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/js -I ../node_modules/relude/src/array -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/option -I ../node_modules/relude-fetch/src -I ../node_modules/reason-react/src -I ../node_modules/reason-react/src/legacy -open Relude.Globals -bs-super-errors  -warn-error +101 -bs-package-name tritesite -bs-package-output commonjs:./src:.bs.js -o Home-Tritesite.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Posts.re.pp.ml)
 (deps (:inputs  Posts.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Posts.ast)
 (deps (:inputs  Posts.re.pp.ml)  ../.melange.eobjs/.bsbuild)
(action
 (run melc  -warn-error +101 -bs-jsx 3 -open Relude.Globals -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Posts.d)
 (deps (:inputs  .././src/Posts.ast) )
(action (run meldep  -root-dir .. -p tritesite -proj-dir ..  -bs-ns Tritesite %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Posts-Tritesite.cmj Posts-Tritesite.cmi Posts-Tritesite.cmt Posts.bs.js)
 (alias mel)
 (deps (:inputs  Posts.ast)  (include Posts.d) ../bsconfig.json ../.melange.eobjs/Tritesite.cmi(alias ../node_modules/bs-bastet/bastet_js/src/mel)(alias ../node_modules/bs-bastet/bastet/src/mel)(alias ../node_modules/bs-css/src/mel)(alias ../node_modules/bs-css-emotion/src/mel)(alias ../node_modules/bs-decode/src/mel)(alias ../node_modules/bs-fetch/src/mel)(alias ../node_modules/relude/src/mel)(alias ../node_modules/relude/src/list/mel)(alias ../node_modules/relude/src/extensions/mel)(alias ../node_modules/relude/src/js/mel)(alias ../node_modules/relude/src/array/mel)(alias ../node_modules/relude/src/ior/mel)(alias ../node_modules/relude/src/option/mel)(alias ../node_modules/relude-fetch/src/mel)(alias ../node_modules/reason-react/src/mel)(alias ../node_modules/reason-react/src/legacy/mel))
(action
  (run melc -bs-ns Tritesite -I sandbox -I . -I ../.melange.eobjs -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/bs-css/src -I ../node_modules/bs-css-emotion/src -I ../node_modules/bs-decode/src -I ../node_modules/bs-fetch/src -I ../node_modules/relude/src -I ../node_modules/relude/src/list -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/js -I ../node_modules/relude/src/array -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/option -I ../node_modules/relude-fetch/src -I ../node_modules/reason-react/src -I ../node_modules/reason-react/src/legacy -open Relude.Globals -bs-super-errors  -warn-error +101 -bs-package-name tritesite -bs-package-output commonjs:./src:.bs.js -o Posts-Tritesite.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Base64.re.pp.ml)
 (deps (:inputs  Base64.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Base64.ast)
 (deps (:inputs  Base64.re.pp.ml)  ../.melange.eobjs/.bsbuild)
(action
 (run melc  -warn-error +101 -bs-jsx 3 -open Relude.Globals -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Base64.d)
 (deps (:inputs  .././src/Base64.ast .././src/Base64.iast) )
(action (run meldep  -root-dir .. -p tritesite -proj-dir ..  -bs-ns Tritesite %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Base64.rei.pp.mli)
 (deps (:inputs  Base64.rei) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Base64.iast)
 (deps (:inputs  Base64.rei.pp.mli) )
(action
 (run melc  -warn-error +101 -bs-jsx 3 -open Relude.Globals -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Base64-Tritesite.cmi Base64-Tritesite.cmti)
 (alias mel)
 (deps (:inputs  Base64.iast)  (include Base64.d) ../bsconfig.json ../.melange.eobjs/Tritesite.cmi(alias ../node_modules/bs-bastet/bastet_js/src/mel)(alias ../node_modules/bs-bastet/bastet/src/mel)(alias ../node_modules/bs-css/src/mel)(alias ../node_modules/bs-css-emotion/src/mel)(alias ../node_modules/bs-decode/src/mel)(alias ../node_modules/bs-fetch/src/mel)(alias ../node_modules/relude/src/mel)(alias ../node_modules/relude/src/list/mel)(alias ../node_modules/relude/src/extensions/mel)(alias ../node_modules/relude/src/js/mel)(alias ../node_modules/relude/src/array/mel)(alias ../node_modules/relude/src/ior/mel)(alias ../node_modules/relude/src/option/mel)(alias ../node_modules/relude-fetch/src/mel)(alias ../node_modules/reason-react/src/mel)(alias ../node_modules/reason-react/src/legacy/mel))
(action
  (run melc -bs-ns Tritesite -I sandbox -I . -I ../.melange.eobjs -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/bs-css/src -I ../node_modules/bs-css-emotion/src -I ../node_modules/bs-decode/src -I ../node_modules/bs-fetch/src -I ../node_modules/relude/src -I ../node_modules/relude/src/list -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/js -I ../node_modules/relude/src/array -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/option -I ../node_modules/relude-fetch/src -I ../node_modules/reason-react/src -I ../node_modules/reason-react/src/legacy -open Relude.Globals -bs-super-errors  -warn-error +101 -o Base64-Tritesite.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Base64-Tritesite.cmj Base64-Tritesite.cmt Base64.bs.js)
 (alias mel)
 (deps (:inputs  Base64.ast)  Base64-Tritesite.cmi (include Base64.d) ../bsconfig.json ../.melange.eobjs/Tritesite.cmi(alias ../node_modules/bs-bastet/bastet_js/src/mel)(alias ../node_modules/bs-bastet/bastet/src/mel)(alias ../node_modules/bs-css/src/mel)(alias ../node_modules/bs-css-emotion/src/mel)(alias ../node_modules/bs-decode/src/mel)(alias ../node_modules/bs-fetch/src/mel)(alias ../node_modules/relude/src/mel)(alias ../node_modules/relude/src/list/mel)(alias ../node_modules/relude/src/extensions/mel)(alias ../node_modules/relude/src/js/mel)(alias ../node_modules/relude/src/array/mel)(alias ../node_modules/relude/src/ior/mel)(alias ../node_modules/relude/src/option/mel)(alias ../node_modules/relude-fetch/src/mel)(alias ../node_modules/reason-react/src/mel)(alias ../node_modules/reason-react/src/legacy/mel))
(action
  (run melc -bs-ns Tritesite -bs-read-cmi -I sandbox -I . -I ../.melange.eobjs -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/bs-css/src -I ../node_modules/bs-css-emotion/src -I ../node_modules/bs-decode/src -I ../node_modules/bs-fetch/src -I ../node_modules/relude/src -I ../node_modules/relude/src/list -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/js -I ../node_modules/relude/src/array -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/option -I ../node_modules/relude-fetch/src -I ../node_modules/reason-react/src -I ../node_modules/reason-react/src/legacy -open Relude.Globals -bs-super-errors  -warn-error +101 -bs-package-name tritesite -bs-package-output commonjs:./src:.bs.js -o Base64-Tritesite.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Router.re.pp.ml)
 (deps (:inputs  Router.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Router.ast)
 (deps (:inputs  Router.re.pp.ml)  ../.melange.eobjs/.bsbuild)
(action
 (run melc  -warn-error +101 -bs-jsx 3 -open Relude.Globals -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Router.d)
 (deps (:inputs  .././src/Router.ast) )
(action (run meldep  -root-dir .. -p tritesite -proj-dir ..  -bs-ns Tritesite %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Router-Tritesite.cmj Router-Tritesite.cmi Router-Tritesite.cmt Router.bs.js)
 (alias mel)
 (deps (:inputs  Router.ast)  (include Router.d) ../bsconfig.json ../.melange.eobjs/Tritesite.cmi(alias ../node_modules/bs-bastet/bastet_js/src/mel)(alias ../node_modules/bs-bastet/bastet/src/mel)(alias ../node_modules/bs-css/src/mel)(alias ../node_modules/bs-css-emotion/src/mel)(alias ../node_modules/bs-decode/src/mel)(alias ../node_modules/bs-fetch/src/mel)(alias ../node_modules/relude/src/mel)(alias ../node_modules/relude/src/list/mel)(alias ../node_modules/relude/src/extensions/mel)(alias ../node_modules/relude/src/js/mel)(alias ../node_modules/relude/src/array/mel)(alias ../node_modules/relude/src/ior/mel)(alias ../node_modules/relude/src/option/mel)(alias ../node_modules/relude-fetch/src/mel)(alias ../node_modules/reason-react/src/mel)(alias ../node_modules/reason-react/src/legacy/mel))
(action
  (run melc -bs-ns Tritesite -I sandbox -I . -I ../.melange.eobjs -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/bs-css/src -I ../node_modules/bs-css-emotion/src -I ../node_modules/bs-decode/src -I ../node_modules/bs-fetch/src -I ../node_modules/relude/src -I ../node_modules/relude/src/list -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/js -I ../node_modules/relude/src/array -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/option -I ../node_modules/relude-fetch/src -I ../node_modules/reason-react/src -I ../node_modules/reason-react/src/legacy -open Relude.Globals -bs-super-errors  -warn-error +101 -bs-package-name tritesite -bs-package-output commonjs:./src:.bs.js -o Router-Tritesite.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Parsing.re.pp.ml)
 (deps (:inputs  Parsing.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Parsing.ast)
 (deps (:inputs  Parsing.re.pp.ml)  ../.melange.eobjs/.bsbuild)
(action
 (run melc  -warn-error +101 -bs-jsx 3 -open Relude.Globals -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Parsing.d)
 (deps (:inputs  .././src/Parsing.ast) )
(action (run meldep  -root-dir .. -p tritesite -proj-dir ..  -bs-ns Tritesite %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Parsing-Tritesite.cmj Parsing-Tritesite.cmi Parsing-Tritesite.cmt Parsing.bs.js)
 (alias mel)
 (deps (:inputs  Parsing.ast)  (include Parsing.d) ../bsconfig.json ../.melange.eobjs/Tritesite.cmi(alias ../node_modules/bs-bastet/bastet_js/src/mel)(alias ../node_modules/bs-bastet/bastet/src/mel)(alias ../node_modules/bs-css/src/mel)(alias ../node_modules/bs-css-emotion/src/mel)(alias ../node_modules/bs-decode/src/mel)(alias ../node_modules/bs-fetch/src/mel)(alias ../node_modules/relude/src/mel)(alias ../node_modules/relude/src/list/mel)(alias ../node_modules/relude/src/extensions/mel)(alias ../node_modules/relude/src/js/mel)(alias ../node_modules/relude/src/array/mel)(alias ../node_modules/relude/src/ior/mel)(alias ../node_modules/relude/src/option/mel)(alias ../node_modules/relude-fetch/src/mel)(alias ../node_modules/reason-react/src/mel)(alias ../node_modules/reason-react/src/legacy/mel))
(action
  (run melc -bs-ns Tritesite -I sandbox -I . -I ../.melange.eobjs -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/bs-css/src -I ../node_modules/bs-css-emotion/src -I ../node_modules/bs-decode/src -I ../node_modules/bs-fetch/src -I ../node_modules/relude/src -I ../node_modules/relude/src/list -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/js -I ../node_modules/relude/src/array -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/option -I ../node_modules/relude-fetch/src -I ../node_modules/reason-react/src -I ../node_modules/reason-react/src/legacy -open Relude.Globals -bs-super-errors  -warn-error +101 -bs-package-name tritesite -bs-package-output commonjs:./src:.bs.js -o Parsing-Tritesite.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  GithubApi.re.pp.ml)
 (deps (:inputs  GithubApi.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  GithubApi.ast)
 (deps (:inputs  GithubApi.re.pp.ml)  ../.melange.eobjs/.bsbuild)
(action
 (run melc  -warn-error +101 -bs-jsx 3 -open Relude.Globals -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  GithubApi.d)
 (deps (:inputs  .././src/GithubApi.ast) )
(action (run meldep  -root-dir .. -p tritesite -proj-dir ..  -bs-ns Tritesite %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  GithubApi-Tritesite.cmj GithubApi-Tritesite.cmi GithubApi-Tritesite.cmt GithubApi.bs.js)
 (alias mel)
 (deps (:inputs  GithubApi.ast)  (include GithubApi.d) ../bsconfig.json ../.melange.eobjs/Tritesite.cmi(alias ../node_modules/bs-bastet/bastet_js/src/mel)(alias ../node_modules/bs-bastet/bastet/src/mel)(alias ../node_modules/bs-css/src/mel)(alias ../node_modules/bs-css-emotion/src/mel)(alias ../node_modules/bs-decode/src/mel)(alias ../node_modules/bs-fetch/src/mel)(alias ../node_modules/relude/src/mel)(alias ../node_modules/relude/src/list/mel)(alias ../node_modules/relude/src/extensions/mel)(alias ../node_modules/relude/src/js/mel)(alias ../node_modules/relude/src/array/mel)(alias ../node_modules/relude/src/ior/mel)(alias ../node_modules/relude/src/option/mel)(alias ../node_modules/relude-fetch/src/mel)(alias ../node_modules/reason-react/src/mel)(alias ../node_modules/reason-react/src/legacy/mel))
(action
  (run melc -bs-ns Tritesite -I sandbox -I . -I ../.melange.eobjs -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/bs-css/src -I ../node_modules/bs-css-emotion/src -I ../node_modules/bs-decode/src -I ../node_modules/bs-fetch/src -I ../node_modules/relude/src -I ../node_modules/relude/src/list -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/js -I ../node_modules/relude/src/array -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/option -I ../node_modules/relude-fetch/src -I ../node_modules/reason-react/src -I ../node_modules/reason-react/src/legacy -open Relude.Globals -bs-super-errors  -warn-error +101 -bs-package-name tritesite -bs-package-output commonjs:./src:.bs.js -o GithubApi-Tritesite.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Components.re.pp.ml)
 (deps (:inputs  Components.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Components.ast)
 (deps (:inputs  Components.re.pp.ml)  ../.melange.eobjs/.bsbuild)
(action
 (run melc  -warn-error +101 -bs-jsx 3 -open Relude.Globals -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Components.d)
 (deps (:inputs  .././src/Components.ast) )
(action (run meldep  -root-dir .. -p tritesite -proj-dir ..  -bs-ns Tritesite %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Components-Tritesite.cmj Components-Tritesite.cmi Components-Tritesite.cmt Components.bs.js)
 (alias mel)
 (deps (:inputs  Components.ast)  (include Components.d) ../bsconfig.json ../.melange.eobjs/Tritesite.cmi(alias ../node_modules/bs-bastet/bastet_js/src/mel)(alias ../node_modules/bs-bastet/bastet/src/mel)(alias ../node_modules/bs-css/src/mel)(alias ../node_modules/bs-css-emotion/src/mel)(alias ../node_modules/bs-decode/src/mel)(alias ../node_modules/bs-fetch/src/mel)(alias ../node_modules/relude/src/mel)(alias ../node_modules/relude/src/list/mel)(alias ../node_modules/relude/src/extensions/mel)(alias ../node_modules/relude/src/js/mel)(alias ../node_modules/relude/src/array/mel)(alias ../node_modules/relude/src/ior/mel)(alias ../node_modules/relude/src/option/mel)(alias ../node_modules/relude-fetch/src/mel)(alias ../node_modules/reason-react/src/mel)(alias ../node_modules/reason-react/src/legacy/mel))
(action
  (run melc -bs-ns Tritesite -I sandbox -I . -I ../.melange.eobjs -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/bs-css/src -I ../node_modules/bs-css-emotion/src -I ../node_modules/bs-decode/src -I ../node_modules/bs-fetch/src -I ../node_modules/relude/src -I ../node_modules/relude/src/list -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/js -I ../node_modules/relude/src/array -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/option -I ../node_modules/relude-fetch/src -I ../node_modules/reason-react/src -I ../node_modules/reason-react/src/legacy -open Relude.Globals -bs-super-errors  -warn-error +101 -bs-package-name tritesite -bs-package-output commonjs:./src:.bs.js -o Components-Tritesite.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ContentFetch.re.pp.ml)
 (deps (:inputs  ContentFetch.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ContentFetch.ast)
 (deps (:inputs  ContentFetch.re.pp.ml)  ../.melange.eobjs/.bsbuild)
(action
 (run melc  -warn-error +101 -bs-jsx 3 -open Relude.Globals -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ContentFetch.d)
 (deps (:inputs  .././src/ContentFetch.ast) )
(action (run meldep  -root-dir .. -p tritesite -proj-dir ..  -bs-ns Tritesite %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ContentFetch-Tritesite.cmj ContentFetch-Tritesite.cmi ContentFetch-Tritesite.cmt ContentFetch.bs.js)
 (alias mel)
 (deps (:inputs  ContentFetch.ast)  (include ContentFetch.d) ../bsconfig.json ../.melange.eobjs/Tritesite.cmi(alias ../node_modules/bs-bastet/bastet_js/src/mel)(alias ../node_modules/bs-bastet/bastet/src/mel)(alias ../node_modules/bs-css/src/mel)(alias ../node_modules/bs-css-emotion/src/mel)(alias ../node_modules/bs-decode/src/mel)(alias ../node_modules/bs-fetch/src/mel)(alias ../node_modules/relude/src/mel)(alias ../node_modules/relude/src/list/mel)(alias ../node_modules/relude/src/extensions/mel)(alias ../node_modules/relude/src/js/mel)(alias ../node_modules/relude/src/array/mel)(alias ../node_modules/relude/src/ior/mel)(alias ../node_modules/relude/src/option/mel)(alias ../node_modules/relude-fetch/src/mel)(alias ../node_modules/reason-react/src/mel)(alias ../node_modules/reason-react/src/legacy/mel))
(action
  (run melc -bs-ns Tritesite -I sandbox -I . -I ../.melange.eobjs -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/bs-css/src -I ../node_modules/bs-css-emotion/src -I ../node_modules/bs-decode/src -I ../node_modules/bs-fetch/src -I ../node_modules/relude/src -I ../node_modules/relude/src/list -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/js -I ../node_modules/relude/src/array -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/option -I ../node_modules/relude-fetch/src -I ../node_modules/reason-react/src -I ../node_modules/reason-react/src/legacy -open Relude.Globals -bs-super-errors  -warn-error +101 -bs-package-name tritesite -bs-package-output commonjs:./src:.bs.js -o ContentFetch-Tritesite.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 )
(subdir src/sandbox
(rule
(targets  DoubleHash.re.pp.ml)
 (deps (:inputs  DoubleHash.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  DoubleHash.ast)
 (deps (:inputs  DoubleHash.re.pp.ml)  ../../.melange.eobjs/.bsbuild)
(action
 (run melc  -warn-error +101 -bs-jsx 3 -open Relude.Globals -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  DoubleHash.d)
 (deps (:inputs  ../.././src/sandbox/DoubleHash.ast) )
(action (run meldep  -root-dir ../.. -p tritesite -proj-dir ../..  -bs-ns Tritesite %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  DoubleHash-Tritesite.cmj DoubleHash-Tritesite.cmi DoubleHash-Tritesite.cmt DoubleHash.bs.js)
 (alias mel)
 (deps (:inputs  DoubleHash.ast)  (include DoubleHash.d) ../../bsconfig.json ../../.melange.eobjs/Tritesite.cmi(alias ../../node_modules/bs-bastet/bastet_js/src/mel)(alias ../../node_modules/bs-bastet/bastet/src/mel)(alias ../../node_modules/bs-css/src/mel)(alias ../../node_modules/bs-css-emotion/src/mel)(alias ../../node_modules/bs-decode/src/mel)(alias ../../node_modules/bs-fetch/src/mel)(alias ../../node_modules/relude/src/mel)(alias ../../node_modules/relude/src/list/mel)(alias ../../node_modules/relude/src/extensions/mel)(alias ../../node_modules/relude/src/js/mel)(alias ../../node_modules/relude/src/array/mel)(alias ../../node_modules/relude/src/ior/mel)(alias ../../node_modules/relude/src/option/mel)(alias ../../node_modules/relude-fetch/src/mel)(alias ../../node_modules/reason-react/src/mel)(alias ../../node_modules/reason-react/src/legacy/mel))
(action
  (run melc -bs-ns Tritesite -I . -I .. -I ../../.melange.eobjs -I ../../.melange.eobjs/node_modules/bs-bastet -I ../../node_modules/bs-bastet/bastet_js/src -I ../../node_modules/bs-bastet/bastet/src -I ../../node_modules/bs-css/src -I ../../node_modules/bs-css-emotion/src -I ../../node_modules/bs-decode/src -I ../../node_modules/bs-fetch/src -I ../../node_modules/relude/src -I ../../node_modules/relude/src/list -I ../../node_modules/relude/src/extensions -I ../../node_modules/relude/src/js -I ../../node_modules/relude/src/array -I ../../node_modules/relude/src/ior -I ../../node_modules/relude/src/option -I ../../node_modules/relude-fetch/src -I ../../node_modules/reason-react/src -I ../../node_modules/reason-react/src/legacy -open Relude.Globals -bs-super-errors  -warn-error +101 -bs-package-name tritesite -bs-package-output commonjs:./src/sandbox:.bs.js -o DoubleHash-Tritesite.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  SandboxPage.re.pp.ml)
 (deps (:inputs  SandboxPage.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  SandboxPage.ast)
 (deps (:inputs  SandboxPage.re.pp.ml)  ../../.melange.eobjs/.bsbuild)
(action
 (run melc  -warn-error +101 -bs-jsx 3 -open Relude.Globals -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  SandboxPage.d)
 (deps (:inputs  ../.././src/sandbox/SandboxPage.ast) )
(action (run meldep  -root-dir ../.. -p tritesite -proj-dir ../..  -bs-ns Tritesite %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  SandboxPage-Tritesite.cmj SandboxPage-Tritesite.cmi SandboxPage-Tritesite.cmt SandboxPage.bs.js)
 (alias mel)
 (deps (:inputs  SandboxPage.ast)  (include SandboxPage.d) ../../bsconfig.json ../../.melange.eobjs/Tritesite.cmi(alias ../../node_modules/bs-bastet/bastet_js/src/mel)(alias ../../node_modules/bs-bastet/bastet/src/mel)(alias ../../node_modules/bs-css/src/mel)(alias ../../node_modules/bs-css-emotion/src/mel)(alias ../../node_modules/bs-decode/src/mel)(alias ../../node_modules/bs-fetch/src/mel)(alias ../../node_modules/relude/src/mel)(alias ../../node_modules/relude/src/list/mel)(alias ../../node_modules/relude/src/extensions/mel)(alias ../../node_modules/relude/src/js/mel)(alias ../../node_modules/relude/src/array/mel)(alias ../../node_modules/relude/src/ior/mel)(alias ../../node_modules/relude/src/option/mel)(alias ../../node_modules/relude-fetch/src/mel)(alias ../../node_modules/reason-react/src/mel)(alias ../../node_modules/reason-react/src/legacy/mel))
(action
  (run melc -bs-ns Tritesite -I . -I .. -I ../../.melange.eobjs -I ../../.melange.eobjs/node_modules/bs-bastet -I ../../node_modules/bs-bastet/bastet_js/src -I ../../node_modules/bs-bastet/bastet/src -I ../../node_modules/bs-css/src -I ../../node_modules/bs-css-emotion/src -I ../../node_modules/bs-decode/src -I ../../node_modules/bs-fetch/src -I ../../node_modules/relude/src -I ../../node_modules/relude/src/list -I ../../node_modules/relude/src/extensions -I ../../node_modules/relude/src/js -I ../../node_modules/relude/src/array -I ../../node_modules/relude/src/ior -I ../../node_modules/relude/src/option -I ../../node_modules/relude-fetch/src -I ../../node_modules/reason-react/src -I ../../node_modules/reason-react/src/legacy -open Relude.Globals -bs-super-errors  -warn-error +101 -bs-package-name tritesite -bs-package-output commonjs:./src/sandbox:.bs.js -o SandboxPage-Tritesite.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  FrontMatterRegex.re.pp.ml)
 (deps (:inputs  FrontMatterRegex.re) )
(action
  (with-stdout-to %{targets}
   (run refmt --print=binary %{inputs})))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  FrontMatterRegex.ast)
 (deps (:inputs  FrontMatterRegex.re.pp.ml)  ../../.melange.eobjs/.bsbuild)
(action
 (run melc  -warn-error +101 -bs-jsx 3 -open Relude.Globals -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  FrontMatterRegex.d)
 (deps (:inputs  ../.././src/sandbox/FrontMatterRegex.ast) )
(action (run meldep  -root-dir ../.. -p tritesite -proj-dir ../..  -bs-ns Tritesite %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  FrontMatterRegex-Tritesite.cmj FrontMatterRegex-Tritesite.cmi FrontMatterRegex-Tritesite.cmt FrontMatterRegex.bs.js)
 (alias mel)
 (deps (:inputs  FrontMatterRegex.ast)  (include FrontMatterRegex.d) ../../bsconfig.json ../../.melange.eobjs/Tritesite.cmi(alias ../../node_modules/bs-bastet/bastet_js/src/mel)(alias ../../node_modules/bs-bastet/bastet/src/mel)(alias ../../node_modules/bs-css/src/mel)(alias ../../node_modules/bs-css-emotion/src/mel)(alias ../../node_modules/bs-decode/src/mel)(alias ../../node_modules/bs-fetch/src/mel)(alias ../../node_modules/relude/src/mel)(alias ../../node_modules/relude/src/list/mel)(alias ../../node_modules/relude/src/extensions/mel)(alias ../../node_modules/relude/src/js/mel)(alias ../../node_modules/relude/src/array/mel)(alias ../../node_modules/relude/src/ior/mel)(alias ../../node_modules/relude/src/option/mel)(alias ../../node_modules/relude-fetch/src/mel)(alias ../../node_modules/reason-react/src/mel)(alias ../../node_modules/reason-react/src/legacy/mel))
(action
  (run melc -bs-ns Tritesite -I . -I .. -I ../../.melange.eobjs -I ../../.melange.eobjs/node_modules/bs-bastet -I ../../node_modules/bs-bastet/bastet_js/src -I ../../node_modules/bs-bastet/bastet/src -I ../../node_modules/bs-css/src -I ../../node_modules/bs-css-emotion/src -I ../../node_modules/bs-decode/src -I ../../node_modules/bs-fetch/src -I ../../node_modules/relude/src -I ../../node_modules/relude/src/list -I ../../node_modules/relude/src/extensions -I ../../node_modules/relude/src/js -I ../../node_modules/relude/src/array -I ../../node_modules/relude/src/ior -I ../../node_modules/relude/src/option -I ../../node_modules/relude-fetch/src -I ../../node_modules/reason-react/src -I ../../node_modules/reason-react/src/legacy -open Relude.Globals -bs-super-errors  -warn-error +101 -bs-package-name tritesite -bs-package-output commonjs:./src/sandbox:.bs.js -o FrontMatterRegex-Tritesite.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 )

(subdir .melange.eobjs
(rule (with-stdout-to Tritesite.mlmap (run echo "Home
Posts
Base64
Router
Parsing
GithubApi
Components
DoubleHash
SandboxPage
ContentFetch
FrontMatterRegex
")))(rule
(targets  Tritesite.cmi)
 (deps (:inputs  Tritesite.mlmap) )
(action (run melc -w -49 -color always -no-alias-deps %{inputs}))
(enabled_if %{bin-available:melc}) )
 
(rule (write-file .bsbuild MTEKSG9tZQpQb3N0cwpCYXNlNjQKUm91dGVyClBhcnNpbmcKR2l0aHViQXBpCkNvbXBvbmVudHMKRG91YmxlSGFzaApTYW5kYm94UGFnZQpDb250ZW50RmV0Y2gKRnJvbnRNYXR0ZXJSZWdleAouL3NyYwkuL3NyYy9zYW5kYm94CQoxAQEBAQEBAQMDAQMKMAo=))
(rule (write-file .sourcedirs.json "{ \"dirs\" : [ \"/home/trite/git/tritesite/node_modules/bisect_ppx/./src/runtime/js\" , \"/home/trite/git/tritesite/node_modules/bisect_ppx/./src/common\" , \"/home/trite/git/tritesite/node_modules/bs-bastet/./bastet_js/src\" , \"/home/trite/git/tritesite/node_modules/bs-bastet/./bastet/src\" , \"/home/trite/git/tritesite/node_modules/bs-css/./src\" , \"/home/trite/git/tritesite/node_modules/bs-css-emotion/./src\" , \"/home/trite/git/tritesite/node_modules/relude/./src\" , \"/home/trite/git/tritesite/node_modules/relude/./src/list\" , \"/home/trite/git/tritesite/node_modules/relude/./src/extensions\" , \"/home/trite/git/tritesite/node_modules/relude/./src/js\" , \"/home/trite/git/tritesite/node_modules/relude/./src/array\" , \"/home/trite/git/tritesite/node_modules/relude/./src/ior\" , \"/home/trite/git/tritesite/node_modules/relude/./src/option\" , \"/home/trite/git/tritesite/node_modules/bs-decode/./src\" , \"/home/trite/git/tritesite/node_modules/bs-fetch/./src\" , \"/home/trite/git/tritesite/node_modules/relude-fetch/./src\" , \"/home/trite/git/tritesite/node_modules/reason-react/./src\" , \"/home/trite/git/tritesite/node_modules/reason-react/./src/legacy\" , \"/home/trite/git/tritesite/./src\" , \"/home/trite/git/tritesite/./src/sandbox\" ] , \"pkgs\" : [ [ \"bisect_ppx\" , \"/home/trite/git/tritesite/node_modules/bisect_ppx\" ] , [ \"bs-fetch\" , \"/home/trite/git/tritesite/node_modules/bs-fetch\" ] , [ \"bs-css-emotion\" , \"/home/trite/git/tritesite/node_modules/bs-css-emotion\" ] , [ \"bs-bastet\" , \"/home/trite/git/tritesite/node_modules/bs-bastet\" ] , [ \"relude\" , \"/home/trite/git/tritesite/node_modules/relude\" ] , [ \"bs-css\" , \"/home/trite/git/tritesite/node_modules/bs-css\" ] , [ \"bs-decode\" , \"/home/trite/git/tritesite/node_modules/bs-decode\" ] , [ \"reason-react\" , \"/home/trite/git/tritesite/node_modules/reason-react\" ] , [ \"relude-fetch\" , \"/home/trite/git/tritesite/node_modules/relude-fetch\" ] ] , \"generated\" : [] }")) 
)

(data_only_dirs node_modules  .melange.eobjs)
(alias (name mel) (deps .melange.eobjs/.sourcedirs.json (alias node_modules/bs-bastet/bastet_js/src/mel)(alias node_modules/bs-bastet/bastet/src/mel)(alias node_modules/bs-css/src/mel)(alias node_modules/bs-css-emotion/src/mel)(alias node_modules/bs-decode/src/mel)(alias node_modules/bs-fetch/src/mel)(alias node_modules/relude/src/mel)(alias node_modules/relude/src/list/mel)(alias node_modules/relude/src/extensions/mel)(alias node_modules/relude/src/js/mel)(alias node_modules/relude/src/array/mel)(alias node_modules/relude/src/ior/mel)(alias node_modules/relude/src/option/mel)(alias node_modules/relude-fetch/src/mel)(alias node_modules/reason-react/src/mel)(alias node_modules/reason-react/src/legacy/mel)))

(rule (targets (dir melange.commonjs))
 (alias UNSTABLE_mel)
(action (chdir %{targets} (progn 
(run mkdir -p src)
(run cp %{sources-0} src) (system "rm -f src/*.{ast,cm*,d}")
 (run rm -f src/Home.bs.js)
 (run melc -bs-ns Tritesite -I ../../.melange.eobjs -I ../src/sandbox -I ../src -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/bs-css/src -I ../node_modules/bs-css-emotion/src -I ../node_modules/bs-decode/src -I ../node_modules/bs-fetch/src -I ../node_modules/relude/src -I ../node_modules/relude/src/list -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/js -I ../node_modules/relude/src/array -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/option -I ../node_modules/relude-fetch/src -I ../node_modules/reason-react/src -I ../node_modules/reason-react/src/legacy -bs-package-name tritesite -bs-module-type commonjs ../src/Home-Tritesite.cmj -o src/Home.bs.js)
 (run rm -f src/Posts.bs.js)
 (run melc -bs-ns Tritesite -I ../../.melange.eobjs -I ../src/sandbox -I ../src -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/bs-css/src -I ../node_modules/bs-css-emotion/src -I ../node_modules/bs-decode/src -I ../node_modules/bs-fetch/src -I ../node_modules/relude/src -I ../node_modules/relude/src/list -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/js -I ../node_modules/relude/src/array -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/option -I ../node_modules/relude-fetch/src -I ../node_modules/reason-react/src -I ../node_modules/reason-react/src/legacy -bs-package-name tritesite -bs-module-type commonjs ../src/Posts-Tritesite.cmj -o src/Posts.bs.js)
 (run rm -f src/Base64.bs.js)
 (run melc -bs-ns Tritesite -I ../../.melange.eobjs -I ../src/sandbox -I ../src -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/bs-css/src -I ../node_modules/bs-css-emotion/src -I ../node_modules/bs-decode/src -I ../node_modules/bs-fetch/src -I ../node_modules/relude/src -I ../node_modules/relude/src/list -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/js -I ../node_modules/relude/src/array -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/option -I ../node_modules/relude-fetch/src -I ../node_modules/reason-react/src -I ../node_modules/reason-react/src/legacy -bs-package-name tritesite -bs-module-type commonjs ../src/Base64-Tritesite.cmj -o src/Base64.bs.js)
 (run rm -f src/Router.bs.js)
 (run melc -bs-ns Tritesite -I ../../.melange.eobjs -I ../src/sandbox -I ../src -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/bs-css/src -I ../node_modules/bs-css-emotion/src -I ../node_modules/bs-decode/src -I ../node_modules/bs-fetch/src -I ../node_modules/relude/src -I ../node_modules/relude/src/list -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/js -I ../node_modules/relude/src/array -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/option -I ../node_modules/relude-fetch/src -I ../node_modules/reason-react/src -I ../node_modules/reason-react/src/legacy -bs-package-name tritesite -bs-module-type commonjs ../src/Router-Tritesite.cmj -o src/Router.bs.js)
 (run rm -f src/Parsing.bs.js)
 (run melc -bs-ns Tritesite -I ../../.melange.eobjs -I ../src/sandbox -I ../src -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/bs-css/src -I ../node_modules/bs-css-emotion/src -I ../node_modules/bs-decode/src -I ../node_modules/bs-fetch/src -I ../node_modules/relude/src -I ../node_modules/relude/src/list -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/js -I ../node_modules/relude/src/array -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/option -I ../node_modules/relude-fetch/src -I ../node_modules/reason-react/src -I ../node_modules/reason-react/src/legacy -bs-package-name tritesite -bs-module-type commonjs ../src/Parsing-Tritesite.cmj -o src/Parsing.bs.js)
 (run rm -f src/GithubApi.bs.js)
 (run melc -bs-ns Tritesite -I ../../.melange.eobjs -I ../src/sandbox -I ../src -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/bs-css/src -I ../node_modules/bs-css-emotion/src -I ../node_modules/bs-decode/src -I ../node_modules/bs-fetch/src -I ../node_modules/relude/src -I ../node_modules/relude/src/list -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/js -I ../node_modules/relude/src/array -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/option -I ../node_modules/relude-fetch/src -I ../node_modules/reason-react/src -I ../node_modules/reason-react/src/legacy -bs-package-name tritesite -bs-module-type commonjs ../src/GithubApi-Tritesite.cmj -o src/GithubApi.bs.js)
 (run rm -f src/Components.bs.js)
 (run melc -bs-ns Tritesite -I ../../.melange.eobjs -I ../src/sandbox -I ../src -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/bs-css/src -I ../node_modules/bs-css-emotion/src -I ../node_modules/bs-decode/src -I ../node_modules/bs-fetch/src -I ../node_modules/relude/src -I ../node_modules/relude/src/list -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/js -I ../node_modules/relude/src/array -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/option -I ../node_modules/relude-fetch/src -I ../node_modules/reason-react/src -I ../node_modules/reason-react/src/legacy -bs-package-name tritesite -bs-module-type commonjs ../src/Components-Tritesite.cmj -o src/Components.bs.js)
 (run rm -f src/ContentFetch.bs.js)
 (run melc -bs-ns Tritesite -I ../../.melange.eobjs -I ../src/sandbox -I ../src -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/bs-css/src -I ../node_modules/bs-css-emotion/src -I ../node_modules/bs-decode/src -I ../node_modules/bs-fetch/src -I ../node_modules/relude/src -I ../node_modules/relude/src/list -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/js -I ../node_modules/relude/src/array -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/option -I ../node_modules/relude-fetch/src -I ../node_modules/reason-react/src -I ../node_modules/reason-react/src/legacy -bs-package-name tritesite -bs-module-type commonjs ../src/ContentFetch-Tritesite.cmj -o src/ContentFetch.bs.js)
(run mkdir -p src/sandbox)
(run cp %{sources-1} src/sandbox) (system "rm -f src/sandbox/*.{ast,cm*,d}")
 (run rm -f src/sandbox/DoubleHash.bs.js)
 (run melc -bs-ns Tritesite -I ../../../.melange.eobjs -I ../src/sandbox -I ../src -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/bs-css/src -I ../node_modules/bs-css-emotion/src -I ../node_modules/bs-decode/src -I ../node_modules/bs-fetch/src -I ../node_modules/relude/src -I ../node_modules/relude/src/list -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/js -I ../node_modules/relude/src/array -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/option -I ../node_modules/relude-fetch/src -I ../node_modules/reason-react/src -I ../node_modules/reason-react/src/legacy -bs-package-name tritesite -bs-module-type commonjs ../src/sandbox/DoubleHash-Tritesite.cmj -o src/sandbox/DoubleHash.bs.js)
 (run rm -f src/sandbox/SandboxPage.bs.js)
 (run melc -bs-ns Tritesite -I ../../../.melange.eobjs -I ../src/sandbox -I ../src -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/bs-css/src -I ../node_modules/bs-css-emotion/src -I ../node_modules/bs-decode/src -I ../node_modules/bs-fetch/src -I ../node_modules/relude/src -I ../node_modules/relude/src/list -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/js -I ../node_modules/relude/src/array -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/option -I ../node_modules/relude-fetch/src -I ../node_modules/reason-react/src -I ../node_modules/reason-react/src/legacy -bs-package-name tritesite -bs-module-type commonjs ../src/sandbox/SandboxPage-Tritesite.cmj -o src/sandbox/SandboxPage.bs.js)
 (run rm -f src/sandbox/FrontMatterRegex.bs.js)
 (run melc -bs-ns Tritesite -I ../../../.melange.eobjs -I ../src/sandbox -I ../src -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/bs-css/src -I ../node_modules/bs-css-emotion/src -I ../node_modules/bs-decode/src -I ../node_modules/bs-fetch/src -I ../node_modules/relude/src -I ../node_modules/relude/src/list -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/js -I ../node_modules/relude/src/array -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/option -I ../node_modules/relude-fetch/src -I ../node_modules/reason-react/src -I ../node_modules/reason-react/src/legacy -bs-package-name tritesite -bs-module-type commonjs ../src/sandbox/FrontMatterRegex-Tritesite.cmj -o src/sandbox/FrontMatterRegex.bs.js)
(run mkdir -p node_modules/reason-react/src)
(run cp %{sources-2} node_modules/reason-react/src) (system "rm -f node_modules/reason-react/src/*.{ast,cm*,d}")
 (run rm -f node_modules/reason-react/src/React.bs.js)
 (run melc -I ../node_modules/reason-react/src/legacy -I ../node_modules/reason-react/src  -bs-package-name reason-react -bs-module-type commonjs ../node_modules/reason-react/src/React.cmj -o node_modules/reason-react/src/React.bs.js)
 (run rm -f node_modules/reason-react/src/ReactDOM.bs.js)
 (run melc -I ../node_modules/reason-react/src/legacy -I ../node_modules/reason-react/src  -bs-package-name reason-react -bs-module-type commonjs ../node_modules/reason-react/src/ReactDOM.cmj -o node_modules/reason-react/src/ReactDOM.bs.js)
 (run rm -f node_modules/reason-react/src/ReactEvent.bs.js)
 (run melc -I ../node_modules/reason-react/src/legacy -I ../node_modules/reason-react/src  -bs-package-name reason-react -bs-module-type commonjs ../node_modules/reason-react/src/ReactEvent.cmj -o node_modules/reason-react/src/ReactEvent.bs.js)
 (run rm -f node_modules/reason-react/src/ReactDOMStyle.bs.js)
 (run melc -I ../node_modules/reason-react/src/legacy -I ../node_modules/reason-react/src  -bs-package-name reason-react -bs-module-type commonjs ../node_modules/reason-react/src/ReactDOMStyle.cmj -o node_modules/reason-react/src/ReactDOMStyle.bs.js)
 (run rm -f node_modules/reason-react/src/ReactDOMServer.bs.js)
 (run melc -I ../node_modules/reason-react/src/legacy -I ../node_modules/reason-react/src  -bs-package-name reason-react -bs-module-type commonjs ../node_modules/reason-react/src/ReactDOMServer.cmj -o node_modules/reason-react/src/ReactDOMServer.bs.js)
 (run rm -f node_modules/reason-react/src/ReactTestUtils.bs.js)
 (run melc -I ../node_modules/reason-react/src/legacy -I ../node_modules/reason-react/src  -bs-package-name reason-react -bs-module-type commonjs ../node_modules/reason-react/src/ReactTestUtils.cmj -o node_modules/reason-react/src/ReactTestUtils.bs.js)
 (run rm -f node_modules/reason-react/src/ReasonReactRouter.bs.js)
 (run melc -I ../node_modules/reason-react/src/legacy -I ../node_modules/reason-react/src  -bs-package-name reason-react -bs-module-type commonjs ../node_modules/reason-react/src/ReasonReactRouter.cmj -o node_modules/reason-react/src/ReasonReactRouter.bs.js)
 (run rm -f node_modules/reason-react/src/ReasonReactErrorBoundary.bs.js)
 (run melc -I ../node_modules/reason-react/src/legacy -I ../node_modules/reason-react/src  -bs-package-name reason-react -bs-module-type commonjs ../node_modules/reason-react/src/ReasonReactErrorBoundary.cmj -o node_modules/reason-react/src/ReasonReactErrorBoundary.bs.js)
(run mkdir -p node_modules/reason-react/src/legacy)
(run cp %{sources-3} node_modules/reason-react/src/legacy) (system "rm -f node_modules/reason-react/src/legacy/*.{ast,cm*,d}")
 (run rm -f node_modules/reason-react/src/legacy/ReactDOMRe.bs.js)
 (run melc -I ../node_modules/reason-react/src/legacy -I ../node_modules/reason-react/src  -bs-package-name reason-react -bs-module-type commonjs ../node_modules/reason-react/src/legacy/ReactDOMRe.cmj -o node_modules/reason-react/src/legacy/ReactDOMRe.bs.js)
 (run rm -f node_modules/reason-react/src/legacy/ReasonReact.bs.js)
 (run melc -I ../node_modules/reason-react/src/legacy -I ../node_modules/reason-react/src  -bs-package-name reason-react -bs-module-type commonjs ../node_modules/reason-react/src/legacy/ReasonReact.cmj -o node_modules/reason-react/src/legacy/ReasonReact.bs.js)
 (run rm -f node_modules/reason-react/src/legacy/ReactEventRe.bs.js)
 (run melc -I ../node_modules/reason-react/src/legacy -I ../node_modules/reason-react/src  -bs-package-name reason-react -bs-module-type commonjs ../node_modules/reason-react/src/legacy/ReactEventRe.cmj -o node_modules/reason-react/src/legacy/ReactEventRe.bs.js)
 (run rm -f node_modules/reason-react/src/legacy/ReactDOMServerRe.bs.js)
 (run melc -I ../node_modules/reason-react/src/legacy -I ../node_modules/reason-react/src  -bs-package-name reason-react -bs-module-type commonjs ../node_modules/reason-react/src/legacy/ReactDOMServerRe.cmj -o node_modules/reason-react/src/legacy/ReactDOMServerRe.bs.js)
 (run rm -f node_modules/reason-react/src/legacy/ReasonReactCompat.bs.js)
 (run melc -I ../node_modules/reason-react/src/legacy -I ../node_modules/reason-react/src  -bs-package-name reason-react -bs-module-type commonjs ../node_modules/reason-react/src/legacy/ReasonReactCompat.cmj -o node_modules/reason-react/src/legacy/ReasonReactCompat.bs.js)
 (run rm -f node_modules/reason-react/src/legacy/ReasonReactOptimizedCreateClass.bs.js)
 (run melc -I ../node_modules/reason-react/src/legacy -I ../node_modules/reason-react/src  -bs-package-name reason-react -bs-module-type commonjs ../node_modules/reason-react/src/legacy/ReasonReactOptimizedCreateClass.cmj -o node_modules/reason-react/src/legacy/ReasonReactOptimizedCreateClass.bs.js)
(run mkdir -p node_modules/relude-fetch/src)
(run cp %{sources-4} node_modules/relude-fetch/src) (system "rm -f node_modules/relude-fetch/src/*.{ast,cm*,d}")
 (run rm -f node_modules/relude-fetch/src/ReludeFetch.bs.js)
 (run melc -I ../node_modules/relude-fetch/src -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/bs-fetch/src -I ../node_modules/relude/src -I ../node_modules/relude/src/list -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/js -I ../node_modules/relude/src/array -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/option -bs-package-name relude-fetch -bs-module-type commonjs ../node_modules/relude-fetch/src/ReludeFetch.cmj -o node_modules/relude-fetch/src/ReludeFetch.bs.js)
 (run rm -f node_modules/relude-fetch/src/ReludeFetch_Body.bs.js)
 (run melc -I ../node_modules/relude-fetch/src -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/bs-fetch/src -I ../node_modules/relude/src -I ../node_modules/relude/src/list -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/js -I ../node_modules/relude/src/array -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/option -bs-package-name relude-fetch -bs-module-type commonjs ../node_modules/relude-fetch/src/ReludeFetch_Body.cmj -o node_modules/relude-fetch/src/ReludeFetch_Body.bs.js)
 (run rm -f node_modules/relude-fetch/src/ReludeFetch_Error.bs.js)
 (run melc -I ../node_modules/relude-fetch/src -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/bs-fetch/src -I ../node_modules/relude/src -I ../node_modules/relude/src/list -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/js -I ../node_modules/relude/src/array -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/option -bs-package-name relude-fetch -bs-module-type commonjs ../node_modules/relude-fetch/src/ReludeFetch_Error.cmj -o node_modules/relude-fetch/src/ReludeFetch_Error.bs.js)
 (run rm -f node_modules/relude-fetch/src/ReludeFetch_Headers.bs.js)
 (run melc -I ../node_modules/relude-fetch/src -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/bs-fetch/src -I ../node_modules/relude/src -I ../node_modules/relude/src/list -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/js -I ../node_modules/relude/src/array -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/option -bs-package-name relude-fetch -bs-module-type commonjs ../node_modules/relude-fetch/src/ReludeFetch_Headers.cmj -o node_modules/relude-fetch/src/ReludeFetch_Headers.bs.js)
 (run rm -f node_modules/relude-fetch/src/ReludeFetch_Request.bs.js)
 (run melc -I ../node_modules/relude-fetch/src -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/bs-fetch/src -I ../node_modules/relude/src -I ../node_modules/relude/src/list -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/js -I ../node_modules/relude/src/array -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/option -bs-package-name relude-fetch -bs-module-type commonjs ../node_modules/relude-fetch/src/ReludeFetch_Request.cmj -o node_modules/relude-fetch/src/ReludeFetch_Request.bs.js)
 (run rm -f node_modules/relude-fetch/src/ReludeFetch_FormData.bs.js)
 (run melc -I ../node_modules/relude-fetch/src -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/bs-fetch/src -I ../node_modules/relude/src -I ../node_modules/relude/src/list -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/js -I ../node_modules/relude/src/array -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/option -bs-package-name relude-fetch -bs-module-type commonjs ../node_modules/relude-fetch/src/ReludeFetch_FormData.cmj -o node_modules/relude-fetch/src/ReludeFetch_FormData.bs.js)
 (run rm -f node_modules/relude-fetch/src/ReludeFetch_Response.bs.js)
 (run melc -I ../node_modules/relude-fetch/src -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/bs-fetch/src -I ../node_modules/relude/src -I ../node_modules/relude/src/list -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/js -I ../node_modules/relude/src/array -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/option -bs-package-name relude-fetch -bs-module-type commonjs ../node_modules/relude-fetch/src/ReludeFetch_Response.cmj -o node_modules/relude-fetch/src/ReludeFetch_Response.bs.js)
(run mkdir -p node_modules/bs-fetch/src)
(run cp %{sources-5} node_modules/bs-fetch/src) (system "rm -f node_modules/bs-fetch/src/*.{ast,cm*,d}")
 (run rm -f node_modules/bs-fetch/src/Fetch.bs.js)
 (run melc -I ../node_modules/bs-fetch/src  -bs-package-name bs-fetch -bs-module-type commonjs ../node_modules/bs-fetch/src/Fetch.cmj -o node_modules/bs-fetch/src/Fetch.bs.js)
 (run rm -f node_modules/bs-fetch/src/bs_fetch.bs.js)
 (run melc -I ../node_modules/bs-fetch/src  -bs-package-name bs-fetch -bs-module-type commonjs ../node_modules/bs-fetch/src/bs_fetch.cmj -o node_modules/bs-fetch/src/bs_fetch.bs.js)
 (run rm -f node_modules/bs-fetch/src/Fetch__Iterator.bs.js)
 (run melc -I ../node_modules/bs-fetch/src  -bs-package-name bs-fetch -bs-module-type commonjs ../node_modules/bs-fetch/src/Fetch__Iterator.cmj -o node_modules/bs-fetch/src/Fetch__Iterator.bs.js)
(run mkdir -p node_modules/bs-decode/src)
(run cp %{sources-6} node_modules/bs-decode/src) (system "rm -f node_modules/bs-decode/src/*.{ast,cm*,d}")
 (run rm -f node_modules/bs-decode/src/Decode.bs.js)
 (run melc -I ../node_modules/bs-decode/src -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/relude/src -I ../node_modules/relude/src/list -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/js -I ../node_modules/relude/src/array -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/option -bs-package-name bs-decode -bs-module-type commonjs ../node_modules/bs-decode/src/Decode.cmj -o node_modules/bs-decode/src/Decode.bs.js)
 (run rm -f node_modules/bs-decode/src/Decode_Base.bs.js)
 (run melc -I ../node_modules/bs-decode/src -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/relude/src -I ../node_modules/relude/src/list -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/js -I ../node_modules/relude/src/array -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/option -bs-package-name bs-decode -bs-module-type commonjs ../node_modules/bs-decode/src/Decode_Base.cmj -o node_modules/bs-decode/src/Decode_Base.bs.js)
 (run rm -f node_modules/bs-decode/src/Decode_AsOption.bs.js)
 (run melc -I ../node_modules/bs-decode/src -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/relude/src -I ../node_modules/relude/src/list -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/js -I ../node_modules/relude/src/array -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/option -bs-package-name bs-decode -bs-module-type commonjs ../node_modules/bs-decode/src/Decode_AsOption.cmj -o node_modules/bs-decode/src/Decode_AsOption.bs.js)
 (run rm -f node_modules/bs-decode/src/Decode_ParseError.bs.js)
 (run melc -I ../node_modules/bs-decode/src -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/relude/src -I ../node_modules/relude/src/list -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/js -I ../node_modules/relude/src/array -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/option -bs-package-name bs-decode -bs-module-type commonjs ../node_modules/bs-decode/src/Decode_ParseError.cmj -o node_modules/bs-decode/src/Decode_ParseError.bs.js)
 (run rm -f node_modules/bs-decode/src/Decode_NonEmptyList.bs.js)
 (run melc -I ../node_modules/bs-decode/src -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/relude/src -I ../node_modules/relude/src/list -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/js -I ../node_modules/relude/src/array -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/option -bs-package-name bs-decode -bs-module-type commonjs ../node_modules/bs-decode/src/Decode_NonEmptyList.cmj -o node_modules/bs-decode/src/Decode_NonEmptyList.bs.js)
 (run rm -f node_modules/bs-decode/src/Decode_AsResult_OfStringNel.bs.js)
 (run melc -I ../node_modules/bs-decode/src -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/relude/src -I ../node_modules/relude/src/list -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/js -I ../node_modules/relude/src/array -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/option -bs-package-name bs-decode -bs-module-type commonjs ../node_modules/bs-decode/src/Decode_AsResult_OfStringNel.cmj -o node_modules/bs-decode/src/Decode_AsResult_OfStringNel.bs.js)
 (run rm -f node_modules/bs-decode/src/Decode_AsResult_OfParseError.bs.js)
 (run melc -I ../node_modules/bs-decode/src -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/relude/src -I ../node_modules/relude/src/list -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/js -I ../node_modules/relude/src/array -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/option -bs-package-name bs-decode -bs-module-type commonjs ../node_modules/bs-decode/src/Decode_AsResult_OfParseError.cmj -o node_modules/bs-decode/src/Decode_AsResult_OfParseError.bs.js)
(run mkdir -p node_modules/relude/src)
(run cp %{sources-7} node_modules/relude/src) (system "rm -f node_modules/relude/src/*.{ast,cm*,d}")
 (run rm -f node_modules/relude/src/Relude.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/Relude.cmj -o node_modules/relude/src/Relude.bs.js)
 (run rm -f node_modules/relude/src/Relude_Eq.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/Relude_Eq.cmj -o node_modules/relude/src/Relude_Eq.bs.js)
 (run rm -f node_modules/relude/src/Relude_IO.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/Relude_IO.cmj -o node_modules/relude/src/Relude_IO.bs.js)
 (run rm -f node_modules/relude/src/Relude_Int.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/Relude_Int.cmj -o node_modules/relude/src/Relude_Int.bs.js)
 (run rm -f node_modules/relude/src/Relude_Ior.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/Relude_Ior.cmj -o node_modules/relude/src/Relude_Ior.bs.js)
 (run rm -f node_modules/relude/src/Relude_Map.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/Relude_Map.cmj -o node_modules/relude/src/Relude_Map.bs.js)
 (run rm -f node_modules/relude/src/Relude_Ord.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/Relude_Ord.cmj -o node_modules/relude/src/Relude_Ord.bs.js)
 (run rm -f node_modules/relude/src/Relude_RIO.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/Relude_RIO.cmj -o node_modules/relude/src/Relude_RIO.bs.js)
 (run rm -f node_modules/relude/src/Relude_Set.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/Relude_Set.cmj -o node_modules/relude/src/Relude_Set.bs.js)
 (run rm -f node_modules/relude/src/Relude_Bool.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/Relude_Bool.cmj -o node_modules/relude/src/Relude_Bool.bs.js)
 (run rm -f node_modules/relude/src/Relude_Free.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/Relude_Free.cmj -o node_modules/relude/src/Relude_Free.bs.js)
 (run rm -f node_modules/relude/src/Relude_HMap.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/Relude_HMap.cmj -o node_modules/relude/src/Relude_HMap.bs.js)
 (run rm -f node_modules/relude/src/Relude_List.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/Relude_List.cmj -o node_modules/relude/src/Relude_List.bs.js)
 (run rm -f node_modules/relude/src/Relude_RWST.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/Relude_RWST.cmj -o node_modules/relude/src/Relude_RWST.bs.js)
 (run rm -f node_modules/relude/src/Relude_Tree.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/Relude_Tree.cmj -o node_modules/relude/src/Relude_Tree.bs.js)
 (run rm -f node_modules/relude/src/Relude_Unit.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/Relude_Unit.cmj -o node_modules/relude/src/Relude_Unit.bs.js)
 (run rm -f node_modules/relude/src/Relude_Void.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/Relude_Void.cmj -o node_modules/relude/src/Relude_Void.bs.js)
 (run rm -f node_modules/relude/src/Relude_Array.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/Relude_Array.cmj -o node_modules/relude/src/Relude_Array.bs.js)
 (run rm -f node_modules/relude/src/Relude_ContT.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/Relude_ContT.cmj -o node_modules/relude/src/Relude_ContT.bs.js)
 (run rm -f node_modules/relude/src/Relude_Float.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/Relude_Float.cmj -o node_modules/relude/src/Relude_Float.bs.js)
 (run rm -f node_modules/relude/src/Relude_HList.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/Relude_HList.cmj -o node_modules/relude/src/Relude_HList.bs.js)
 (run rm -f node_modules/relude/src/Relude_Timer.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/Relude_Timer.cmj -o node_modules/relude/src/Relude_Timer.bs.js)
 (run rm -f node_modules/relude/src/Relude_Tuple.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/Relude_Tuple.cmj -o node_modules/relude/src/Relude_Tuple.bs.js)
 (run rm -f node_modules/relude/src/Relude_Option.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/Relude_Option.cmj -o node_modules/relude/src/Relude_Option.bs.js)
 (run rm -f node_modules/relude/src/Relude_Result.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/Relude_Result.cmj -o node_modules/relude/src/Relude_Result.bs.js)
 (run rm -f node_modules/relude/src/Relude_StateT.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/Relude_StateT.cmj -o node_modules/relude/src/Relude_StateT.bs.js)
 (run rm -f node_modules/relude/src/Relude_String.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/Relude_String.cmj -o node_modules/relude/src/Relude_String.bs.js)
 (run rm -f node_modules/relude/src/Relude_Tuple2.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/Relude_Tuple2.cmj -o node_modules/relude/src/Relude_Tuple2.bs.js)
 (run rm -f node_modules/relude/src/Relude_Tuple3.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/Relude_Tuple3.cmj -o node_modules/relude/src/Relude_Tuple3.bs.js)
 (run rm -f node_modules/relude/src/Relude_Tuple4.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/Relude_Tuple4.cmj -o node_modules/relude/src/Relude_Tuple4.bs.js)
 (run rm -f node_modules/relude/src/Relude_Tuple5.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/Relude_Tuple5.cmj -o node_modules/relude/src/Relude_Tuple5.bs.js)
 (run rm -f node_modules/relude/src/Relude_Unsafe.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/Relude_Unsafe.cmj -o node_modules/relude/src/Relude_Unsafe.bs.js)
 (run rm -f node_modules/relude/src/Relude_Decimal.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/Relude_Decimal.cmj -o node_modules/relude/src/Relude_Decimal.bs.js)
 (run rm -f node_modules/relude/src/Relude_Globals.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/Relude_Globals.cmj -o node_modules/relude/src/Relude_Globals.bs.js)
 (run rm -f node_modules/relude/src/Relude_OptionT.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/Relude_OptionT.cmj -o node_modules/relude/src/Relude_OptionT.bs.js)
 (run rm -f node_modules/relude/src/Relude_ReaderT.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/Relude_ReaderT.cmj -o node_modules/relude/src/Relude_ReaderT.bs.js)
 (run rm -f node_modules/relude/src/Relude_ResultT.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/Relude_ResultT.cmj -o node_modules/relude/src/Relude_ResultT.bs.js)
 (run rm -f node_modules/relude/src/Relude_WriterT.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/Relude_WriterT.cmj -o node_modules/relude/src/Relude_WriterT.bs.js)
 (run rm -f node_modules/relude/src/Relude_Debounce.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/Relude_Debounce.cmj -o node_modules/relude/src/Relude_Debounce.bs.js)
 (run rm -f node_modules/relude/src/Relude_Function.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/Relude_Function.cmj -o node_modules/relude/src/Relude_Function.bs.js)
 (run rm -f node_modules/relude/src/Relude_Identity.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/Relude_Identity.cmj -o node_modules/relude/src/Relude_Identity.bs.js)
 (run rm -f node_modules/relude/src/Relude_NonEmpty.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/Relude_NonEmpty.cmj -o node_modules/relude/src/Relude_NonEmpty.bs.js)
 (run rm -f node_modules/relude/src/Relude_Ordering.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/Relude_Ordering.cmj -o node_modules/relude/src/Relude_Ordering.bs.js)
 (run rm -f node_modules/relude/src/Relude_Sequence.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/Relude_Sequence.cmj -o node_modules/relude/src/Relude_Sequence.bs.js)
 (run rm -f node_modules/relude/src/Relude_Throttle.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/Relude_Throttle.cmj -o node_modules/relude/src/Relude_Throttle.bs.js)
 (run rm -f node_modules/relude/src/Relude_AsyncData.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/Relude_AsyncData.cmj -o node_modules/relude/src/Relude_AsyncData.bs.js)
 (run rm -f node_modules/relude/src/Relude_Interface.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/Relude_Interface.cmj -o node_modules/relude/src/Relude_Interface.bs.js)
 (run rm -f node_modules/relude/src/Relude_StringMap.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/Relude_StringMap.cmj -o node_modules/relude/src/Relude_StringMap.bs.js)
 (run rm -f node_modules/relude/src/Relude_Free_Monad.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/Relude_Free_Monad.cmj -o node_modules/relude/src/Relude_Free_Monad.bs.js)
 (run rm -f node_modules/relude/src/Relude_ListZipper.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/Relude_ListZipper.cmj -o node_modules/relude/src/Relude_ListZipper.bs.js)
 (run rm -f node_modules/relude/src/Relude_TreeZipper.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/Relude_TreeZipper.cmj -o node_modules/relude/src/Relude_TreeZipper.bs.js)
 (run rm -f node_modules/relude/src/Relude_Validation.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/Relude_Validation.cmj -o node_modules/relude/src/Relude_Validation.bs.js)
 (run rm -f node_modules/relude/src/Relude_ArrayZipper.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/Relude_ArrayZipper.cmj -o node_modules/relude/src/Relude_ArrayZipper.bs.js)
 (run rm -f node_modules/relude/src/Relude_AsyncResult.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/Relude_AsyncResult.cmj -o node_modules/relude/src/Relude_AsyncResult.bs.js)
 (run rm -f node_modules/relude/src/Relude_SequenceZipper.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/Relude_SequenceZipper.cmj -o node_modules/relude/src/Relude_SequenceZipper.bs.js)
 (run rm -f node_modules/relude/src/Relude_Free_Applicative.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/Relude_Free_Applicative.cmj -o node_modules/relude/src/Relude_Free_Applicative.bs.js)
(run mkdir -p node_modules/relude/src/list)
(run cp %{sources-8} node_modules/relude/src/list) (system "rm -f node_modules/relude/src/list/*.{ast,cm*,d}")
 (run rm -f node_modules/relude/src/list/Relude_List_Base.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/list/Relude_List_Base.cmj -o node_modules/relude/src/list/Relude_List_Base.bs.js)
 (run rm -f node_modules/relude/src/list/Relude_List_Instances.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/list/Relude_List_Instances.cmj -o node_modules/relude/src/list/Relude_List_Instances.bs.js)
 (run rm -f node_modules/relude/src/list/Relude_List_Specializations.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/list/Relude_List_Specializations.cmj -o node_modules/relude/src/list/Relude_List_Specializations.bs.js)
(run mkdir -p node_modules/relude/src/extensions)
(run cp %{sources-9} node_modules/relude/src/extensions) (system "rm -f node_modules/relude/src/extensions/*.{ast,cm*,d}")
 (run rm -f node_modules/relude/src/extensions/Relude_Extensions.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/extensions/Relude_Extensions.cmj -o node_modules/relude/src/extensions/Relude_Extensions.bs.js)
 (run rm -f node_modules/relude/src/extensions/Relude_Extensions_Eq.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/extensions/Relude_Extensions_Eq.cmj -o node_modules/relude/src/extensions/Relude_Extensions_Eq.bs.js)
 (run rm -f node_modules/relude/src/extensions/Relude_Extensions_Alt.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/extensions/Relude_Extensions_Alt.cmj -o node_modules/relude/src/extensions/Relude_Extensions_Alt.bs.js)
 (run rm -f node_modules/relude/src/extensions/Relude_Extensions_Ord.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/extensions/Relude_Extensions_Ord.cmj -o node_modules/relude/src/extensions/Relude_Extensions_Ord.bs.js)
 (run rm -f node_modules/relude/src/extensions/Relude_Extensions_Enum.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/extensions/Relude_Extensions_Enum.cmj -o node_modules/relude/src/extensions/Relude_Extensions_Enum.bs.js)
 (run rm -f node_modules/relude/src/extensions/Relude_Extensions_Plus.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/extensions/Relude_Extensions_Plus.cmj -o node_modules/relude/src/extensions/Relude_Extensions_Plus.bs.js)
 (run rm -f node_modules/relude/src/extensions/Relude_Extensions_Ring.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/extensions/Relude_Extensions_Ring.cmj -o node_modules/relude/src/extensions/Relude_Extensions_Ring.bs.js)
 (run rm -f node_modules/relude/src/extensions/Relude_Extensions_Show.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/extensions/Relude_Extensions_Show.cmj -o node_modules/relude/src/extensions/Relude_Extensions_Show.bs.js)
 (run rm -f node_modules/relude/src/extensions/Relude_Extensions_Align.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/extensions/Relude_Extensions_Align.cmj -o node_modules/relude/src/extensions/Relude_Extensions_Align.bs.js)
 (run rm -f node_modules/relude/src/extensions/Relude_Extensions_Apply.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/extensions/Relude_Extensions_Apply.cmj -o node_modules/relude/src/extensions/Relude_Extensions_Apply.bs.js)
 (run rm -f node_modules/relude/src/extensions/Relude_Extensions_Monad.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/extensions/Relude_Extensions_Monad.cmj -o node_modules/relude/src/extensions/Relude_Extensions_Monad.bs.js)
 (run rm -f node_modules/relude/src/extensions/Relude_Extensions_Extend.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/extensions/Relude_Extensions_Extend.cmj -o node_modules/relude/src/extensions/Relude_Extensions_Extend.bs.js)
 (run rm -f node_modules/relude/src/extensions/Relude_Extensions_Monoid.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/extensions/Relude_Extensions_Monoid.cmj -o node_modules/relude/src/extensions/Relude_Extensions_Monoid.bs.js)
 (run rm -f node_modules/relude/src/extensions/Relude_Extensions_Bounded.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/extensions/Relude_Extensions_Bounded.cmj -o node_modules/relude/src/extensions/Relude_Extensions_Bounded.bs.js)
 (run rm -f node_modules/relude/src/extensions/Relude_Extensions_Comonad.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/extensions/Relude_Extensions_Comonad.cmj -o node_modules/relude/src/extensions/Relude_Extensions_Comonad.bs.js)
 (run rm -f node_modules/relude/src/extensions/Relude_Extensions_Functor.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/extensions/Relude_Extensions_Functor.cmj -o node_modules/relude/src/extensions/Relude_Extensions_Functor.bs.js)
 (run rm -f node_modules/relude/src/extensions/Relude_Extensions_Foldable.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/extensions/Relude_Extensions_Foldable.cmj -o node_modules/relude/src/extensions/Relude_Extensions_Foldable.bs.js)
 (run rm -f node_modules/relude/src/extensions/Relude_Extensions_Semiring.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/extensions/Relude_Extensions_Semiring.cmj -o node_modules/relude/src/extensions/Relude_Extensions_Semiring.bs.js)
 (run rm -f node_modules/relude/src/extensions/Relude_Extensions_Bifunctor.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/extensions/Relude_Extensions_Bifunctor.cmj -o node_modules/relude/src/extensions/Relude_Extensions_Bifunctor.bs.js)
 (run rm -f node_modules/relude/src/extensions/Relude_Extensions_MonoidAny.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/extensions/Relude_Extensions_MonoidAny.cmj -o node_modules/relude/src/extensions/Relude_Extensions_MonoidAny.bs.js)
 (run rm -f node_modules/relude/src/extensions/Relude_Extensions_Semialign.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/extensions/Relude_Extensions_Semialign.cmj -o node_modules/relude/src/extensions/Relude_Extensions_Semialign.bs.js)
 (run rm -f node_modules/relude/src/extensions/Relude_Extensions_Semigroup.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/extensions/Relude_Extensions_Semigroup.cmj -o node_modules/relude/src/extensions/Relude_Extensions_Semigroup.bs.js)
 (run rm -f node_modules/relude/src/extensions/Relude_Extensions_Bifoldable.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/extensions/Relude_Extensions_Bifoldable.cmj -o node_modules/relude/src/extensions/Relude_Extensions_Bifoldable.bs.js)
 (run rm -f node_modules/relude/src/extensions/Relude_Extensions_MonadError.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/extensions/Relude_Extensions_MonadError.cmj -o node_modules/relude/src/extensions/Relude_Extensions_MonadError.bs.js)
 (run rm -f node_modules/relude/src/extensions/Relude_Extensions_MonadThrow.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/extensions/Relude_Extensions_MonadThrow.cmj -o node_modules/relude/src/extensions/Relude_Extensions_MonadThrow.bs.js)
 (run rm -f node_modules/relude/src/extensions/Relude_Extensions_Unfoldable.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/extensions/Relude_Extensions_Unfoldable.cmj -o node_modules/relude/src/extensions/Relude_Extensions_Unfoldable.bs.js)
 (run rm -f node_modules/relude/src/extensions/Relude_Extensions_Alternative.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/extensions/Relude_Extensions_Alternative.cmj -o node_modules/relude/src/extensions/Relude_Extensions_Alternative.bs.js)
 (run rm -f node_modules/relude/src/extensions/Relude_Extensions_Applicative.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/extensions/Relude_Extensions_Applicative.cmj -o node_modules/relude/src/extensions/Relude_Extensions_Applicative.bs.js)
 (run rm -f node_modules/relude/src/extensions/Relude_Extensions_BoundedEnum.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/extensions/Relude_Extensions_BoundedEnum.cmj -o node_modules/relude/src/extensions/Relude_Extensions_BoundedEnum.bs.js)
 (run rm -f node_modules/relude/src/extensions/Relude_Extensions_Traversable.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/extensions/Relude_Extensions_Traversable.cmj -o node_modules/relude/src/extensions/Relude_Extensions_Traversable.bs.js)
 (run rm -f node_modules/relude/src/extensions/Relude_Extensions_SemigroupAny.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/extensions/Relude_Extensions_SemigroupAny.cmj -o node_modules/relude/src/extensions/Relude_Extensions_SemigroupAny.bs.js)
 (run rm -f node_modules/relude/src/extensions/Relude_Extensions_Semigroupoid.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/extensions/Relude_Extensions_Semigroupoid.cmj -o node_modules/relude/src/extensions/Relude_Extensions_Semigroupoid.bs.js)
 (run rm -f node_modules/relude/src/extensions/Relude_Extensions_Bitraversable.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/extensions/Relude_Extensions_Bitraversable.cmj -o node_modules/relude/src/extensions/Relude_Extensions_Bitraversable.bs.js)
 (run rm -f node_modules/relude/src/extensions/Relude_Extensions_Contravariant.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/extensions/Relude_Extensions_Contravariant.cmj -o node_modules/relude/src/extensions/Relude_Extensions_Contravariant.bs.js)
(run mkdir -p node_modules/relude/src/js)
(run cp %{sources-10} node_modules/relude/src/js) (system "rm -f node_modules/relude/src/js/*.{ast,cm*,d}")
 (run rm -f node_modules/relude/src/js/Relude_Js.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/js/Relude_Js.cmj -o node_modules/relude/src/js/Relude_Js.bs.js)
 (run rm -f node_modules/relude/src/js/Relude_Js_Exn.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/js/Relude_Js_Exn.cmj -o node_modules/relude/src/js/Relude_Js_Exn.bs.js)
 (run rm -f node_modules/relude/src/js/Relude_Js_Json.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/js/Relude_Js_Json.cmj -o node_modules/relude/src/js/Relude_Js_Json.bs.js)
 (run rm -f node_modules/relude/src/js/Relude_Js_Console.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/js/Relude_Js_Console.cmj -o node_modules/relude/src/js/Relude_Js_Console.bs.js)
 (run rm -f node_modules/relude/src/js/Relude_Js_Promise.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/js/Relude_Js_Promise.cmj -o node_modules/relude/src/js/Relude_Js_Promise.bs.js)
 (run rm -f node_modules/relude/src/js/Relude_Js_Animation.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/js/Relude_Js_Animation.cmj -o node_modules/relude/src/js/Relude_Js_Animation.bs.js)
(run mkdir -p node_modules/relude/src/array)
(run cp %{sources-11} node_modules/relude/src/array) (system "rm -f node_modules/relude/src/array/*.{ast,cm*,d}")
 (run rm -f node_modules/relude/src/array/Relude_Array_Base.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/array/Relude_Array_Base.cmj -o node_modules/relude/src/array/Relude_Array_Base.bs.js)
 (run rm -f node_modules/relude/src/array/Relude_Array_Instances.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/array/Relude_Array_Instances.cmj -o node_modules/relude/src/array/Relude_Array_Instances.bs.js)
 (run rm -f node_modules/relude/src/array/Relude_Array_Specializations.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/array/Relude_Array_Specializations.cmj -o node_modules/relude/src/array/Relude_Array_Specializations.bs.js)
(run mkdir -p node_modules/relude/src/ior)
(run cp %{sources-12} node_modules/relude/src/ior) (system "rm -f node_modules/relude/src/ior/*.{ast,cm*,d}")
 (run rm -f node_modules/relude/src/ior/Relude_Ior_Type.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/ior/Relude_Ior_Type.cmj -o node_modules/relude/src/ior/Relude_Ior_Type.bs.js)
(run mkdir -p node_modules/relude/src/option)
(run cp %{sources-13} node_modules/relude/src/option) (system "rm -f node_modules/relude/src/option/*.{ast,cm*,d}")
 (run rm -f node_modules/relude/src/option/Relude_Option_Base.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/option/Relude_Option_Base.cmj -o node_modules/relude/src/option/Relude_Option_Base.bs.js)
 (run rm -f node_modules/relude/src/option/Relude_Option_Instances.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/option/Relude_Option_Instances.cmj -o node_modules/relude/src/option/Relude_Option_Instances.bs.js)
 (run rm -f node_modules/relude/src/option/Relude_Option_Specializations.bs.js)
 (run melc -I ../node_modules/relude/src/option -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/array -I ../node_modules/relude/src/js -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/list -I ../node_modules/relude/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -I ../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -bs-package-name relude -bs-module-type commonjs ../node_modules/relude/src/option/Relude_Option_Specializations.cmj -o node_modules/relude/src/option/Relude_Option_Specializations.bs.js)
(run mkdir -p node_modules/bs-css-emotion/src)
(run cp %{sources-14} node_modules/bs-css-emotion/src) (system "rm -f node_modules/bs-css-emotion/src/*.{ast,cm*,d}")
 (run rm -f node_modules/bs-css-emotion/src/Css.bs.js)
 (run melc -I ../node_modules/bs-css-emotion/src -I ../node_modules/bs-css/src -bs-package-name bs-css-emotion -bs-module-type commonjs ../node_modules/bs-css-emotion/src/Css.cmj -o node_modules/bs-css-emotion/src/Css.bs.js)
 (run rm -f node_modules/bs-css-emotion/src/CssJs.bs.js)
 (run melc -I ../node_modules/bs-css-emotion/src -I ../node_modules/bs-css/src -bs-package-name bs-css-emotion -bs-module-type commonjs ../node_modules/bs-css-emotion/src/CssJs.cmj -o node_modules/bs-css-emotion/src/CssJs.bs.js)
(run mkdir -p node_modules/bs-css/src)
(run cp %{sources-15} node_modules/bs-css/src) (system "rm -f node_modules/bs-css/src/*.{ast,cm*,d}")
 (run rm -f node_modules/bs-css/src/Css_Core.bs.js)
 (run melc -I ../node_modules/bs-css/src  -bs-package-name bs-css -bs-module-type commonjs ../node_modules/bs-css/src/Css_Core.cmj -o node_modules/bs-css/src/Css_Core.bs.js)
 (run rm -f node_modules/bs-css/src/Css_Colors.bs.js)
 (run melc -I ../node_modules/bs-css/src  -bs-package-name bs-css -bs-module-type commonjs ../node_modules/bs-css/src/Css_Colors.cmj -o node_modules/bs-css/src/Css_Colors.bs.js)
 (run rm -f node_modules/bs-css/src/Css_Js_Core.bs.js)
 (run melc -I ../node_modules/bs-css/src  -bs-package-name bs-css -bs-module-type commonjs ../node_modules/bs-css/src/Css_Js_Core.cmj -o node_modules/bs-css/src/Css_Js_Core.bs.js)
 (run rm -f node_modules/bs-css/src/Css_AtomicTypes.bs.js)
 (run melc -I ../node_modules/bs-css/src  -bs-package-name bs-css -bs-module-type commonjs ../node_modules/bs-css/src/Css_AtomicTypes.cmj -o node_modules/bs-css/src/Css_AtomicTypes.bs.js)
 (run rm -f node_modules/bs-css/src/Css_Legacy_Core.bs.js)
 (run melc -I ../node_modules/bs-css/src  -bs-package-name bs-css -bs-module-type commonjs ../node_modules/bs-css/src/Css_Legacy_Core.cmj -o node_modules/bs-css/src/Css_Legacy_Core.bs.js)
(run mkdir -p node_modules/bs-bastet/bastet_js/src)
(run cp %{sources-16} node_modules/bs-bastet/bastet_js/src) (system "rm -f node_modules/bs-bastet/bastet_js/src/*.{ast,cm*,d}")
 (run rm -f node_modules/bs-bastet/bastet_js/src/Date.bs.js)
 (run melc -bs-ns BsBastet -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/bs-bastet/bastet_js/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -bs-package-name bs-bastet -bs-module-type commonjs ../node_modules/bs-bastet/bastet_js/src/Date-BsBastet.cmj -o node_modules/bs-bastet/bastet_js/src/Date.bs.js)
 (run rm -f node_modules/bs-bastet/bastet_js/src/Dict.bs.js)
 (run melc -bs-ns BsBastet -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/bs-bastet/bastet_js/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -bs-package-name bs-bastet -bs-module-type commonjs ../node_modules/bs-bastet/bastet_js/src/Dict-BsBastet.cmj -o node_modules/bs-bastet/bastet_js/src/Dict.bs.js)
 (run rm -f node_modules/bs-bastet/bastet_js/src/JsArray.bs.js)
 (run melc -bs-ns BsBastet -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/bs-bastet/bastet_js/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -bs-package-name bs-bastet -bs-module-type commonjs ../node_modules/bs-bastet/bastet_js/src/JsArray-BsBastet.cmj -o node_modules/bs-bastet/bastet_js/src/JsArray.bs.js)
 (run rm -f node_modules/bs-bastet/bastet_js/src/JsFloat.bs.js)
 (run melc -bs-ns BsBastet -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/bs-bastet/bastet_js/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -bs-package-name bs-bastet -bs-module-type commonjs ../node_modules/bs-bastet/bastet_js/src/JsFloat-BsBastet.cmj -o node_modules/bs-bastet/bastet_js/src/JsFloat.bs.js)
 (run rm -f node_modules/bs-bastet/bastet_js/src/Promise.bs.js)
 (run melc -bs-ns BsBastet -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/bs-bastet/bastet_js/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -bs-package-name bs-bastet -bs-module-type commonjs ../node_modules/bs-bastet/bastet_js/src/Promise-BsBastet.cmj -o node_modules/bs-bastet/bastet_js/src/Promise.bs.js)
(run mkdir -p node_modules/bs-bastet/bastet/src)
(run cp %{sources-17} node_modules/bs-bastet/bastet/src) (system "rm -f node_modules/bs-bastet/bastet/src/*.{ast,cm*,d}")
 (run rm -f node_modules/bs-bastet/bastet/src/Int.bs.js)
 (run melc -bs-ns BsBastet -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/bs-bastet/bastet_js/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -bs-package-name bs-bastet -bs-module-type commonjs ../node_modules/bs-bastet/bastet/src/Int-BsBastet.cmj -o node_modules/bs-bastet/bastet/src/Int.bs.js)
 (run rm -f node_modules/bs-bastet/bastet/src/Bool.bs.js)
 (run melc -bs-ns BsBastet -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/bs-bastet/bastet_js/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -bs-package-name bs-bastet -bs-module-type commonjs ../node_modules/bs-bastet/bastet/src/Bool-BsBastet.cmj -o node_modules/bs-bastet/bastet/src/Bool.bs.js)
 (run rm -f node_modules/bs-bastet/bastet/src/Dual.bs.js)
 (run melc -bs-ns BsBastet -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/bs-bastet/bastet_js/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -bs-package-name bs-bastet -bs-module-type commonjs ../node_modules/bs-bastet/bastet/src/Dual-BsBastet.cmj -o node_modules/bs-bastet/bastet/src/Dual.bs.js)
 (run rm -f node_modules/bs-bastet/bastet/src/Endo.bs.js)
 (run melc -bs-ns BsBastet -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/bs-bastet/bastet_js/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -bs-package-name bs-bastet -bs-module-type commonjs ../node_modules/bs-bastet/bastet/src/Endo-BsBastet.cmj -o node_modules/bs-bastet/bastet/src/Endo.bs.js)
 (run rm -f node_modules/bs-bastet/bastet/src/List.bs.js)
 (run melc -bs-ns BsBastet -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/bs-bastet/bastet_js/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -bs-package-name bs-bastet -bs-module-type commonjs ../node_modules/bs-bastet/bastet/src/List-BsBastet.cmj -o node_modules/bs-bastet/bastet/src/List.bs.js)
 (run rm -f node_modules/bs-bastet/bastet/src/Test.bs.js)
 (run melc -bs-ns BsBastet -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/bs-bastet/bastet_js/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -bs-package-name bs-bastet -bs-module-type commonjs ../node_modules/bs-bastet/bastet/src/Test-BsBastet.cmj -o node_modules/bs-bastet/bastet/src/Test.bs.js)
 (run rm -f node_modules/bs-bastet/bastet/src/Array.bs.js)
 (run melc -bs-ns BsBastet -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/bs-bastet/bastet_js/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -bs-package-name bs-bastet -bs-module-type commonjs ../node_modules/bs-bastet/bastet/src/Array-BsBastet.cmj -o node_modules/bs-bastet/bastet/src/Array.bs.js)
 (run rm -f node_modules/bs-bastet/bastet/src/Float.bs.js)
 (run melc -bs-ns BsBastet -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/bs-bastet/bastet_js/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -bs-package-name bs-bastet -bs-module-type commonjs ../node_modules/bs-bastet/bastet/src/Float-BsBastet.cmj -o node_modules/bs-bastet/bastet/src/Float.bs.js)
 (run rm -f node_modules/bs-bastet/bastet/src/Infix.bs.js)
 (run melc -bs-ns BsBastet -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/bs-bastet/bastet_js/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -bs-package-name bs-bastet -bs-module-type commonjs ../node_modules/bs-bastet/bastet/src/Infix-BsBastet.cmj -o node_modules/bs-bastet/bastet/src/Infix.bs.js)
 (run rm -f node_modules/bs-bastet/bastet/src/Tuple.bs.js)
 (run melc -bs-ns BsBastet -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/bs-bastet/bastet_js/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -bs-package-name bs-bastet -bs-module-type commonjs ../node_modules/bs-bastet/bastet/src/Tuple-BsBastet.cmj -o node_modules/bs-bastet/bastet/src/Tuple.bs.js)
 (run rm -f node_modules/bs-bastet/bastet/src/ArrayF.bs.js)
 (run melc -bs-ns BsBastet -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/bs-bastet/bastet_js/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -bs-package-name bs-bastet -bs-module-type commonjs ../node_modules/bs-bastet/bastet/src/ArrayF-BsBastet.cmj -o node_modules/bs-bastet/bastet/src/ArrayF.bs.js)
 (run rm -f node_modules/bs-bastet/bastet/src/Option.bs.js)
 (run melc -bs-ns BsBastet -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/bs-bastet/bastet_js/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -bs-package-name bs-bastet -bs-module-type commonjs ../node_modules/bs-bastet/bastet/src/Option-BsBastet.cmj -o node_modules/bs-bastet/bastet/src/Option.bs.js)
 (run rm -f node_modules/bs-bastet/bastet/src/Result.bs.js)
 (run melc -bs-ns BsBastet -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/bs-bastet/bastet_js/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -bs-package-name bs-bastet -bs-module-type commonjs ../node_modules/bs-bastet/bastet/src/Result-BsBastet.cmj -o node_modules/bs-bastet/bastet/src/Result.bs.js)
 (run rm -f node_modules/bs-bastet/bastet/src/String.bs.js)
 (run melc -bs-ns BsBastet -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/bs-bastet/bastet_js/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -bs-package-name bs-bastet -bs-module-type commonjs ../node_modules/bs-bastet/bastet/src/String-BsBastet.cmj -o node_modules/bs-bastet/bastet/src/String.bs.js)
 (run rm -f node_modules/bs-bastet/bastet/src/Verify.bs.js)
 (run melc -bs-ns BsBastet -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/bs-bastet/bastet_js/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -bs-package-name bs-bastet -bs-module-type commonjs ../node_modules/bs-bastet/bastet/src/Verify-BsBastet.cmj -o node_modules/bs-bastet/bastet/src/Verify.bs.js)
 (run rm -f node_modules/bs-bastet/bastet/src/Default.bs.js)
 (run melc -bs-ns BsBastet -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/bs-bastet/bastet_js/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -bs-package-name bs-bastet -bs-module-type commonjs ../node_modules/bs-bastet/bastet/src/Default-BsBastet.cmj -o node_modules/bs-bastet/bastet/src/Default.bs.js)
 (run rm -f node_modules/bs-bastet/bastet/src/PPX_Let.bs.js)
 (run melc -bs-ns BsBastet -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/bs-bastet/bastet_js/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -bs-package-name bs-bastet -bs-module-type commonjs ../node_modules/bs-bastet/bastet/src/PPX_Let-BsBastet.cmj -o node_modules/bs-bastet/bastet/src/PPX_Let.bs.js)
 (run rm -f node_modules/bs-bastet/bastet/src/Function.bs.js)
 (run melc -bs-ns BsBastet -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/bs-bastet/bastet_js/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -bs-package-name bs-bastet -bs-module-type commonjs ../node_modules/bs-bastet/bastet/src/Function-BsBastet.cmj -o node_modules/bs-bastet/bastet/src/Function.bs.js)
 (run rm -f node_modules/bs-bastet/bastet/src/Functors.bs.js)
 (run melc -bs-ns BsBastet -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/bs-bastet/bastet_js/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -bs-package-name bs-bastet -bs-module-type commonjs ../node_modules/bs-bastet/bastet/src/Functors-BsBastet.cmj -o node_modules/bs-bastet/bastet/src/Functors.bs.js)
 (run rm -f node_modules/bs-bastet/bastet/src/Functions.bs.js)
 (run melc -bs-ns BsBastet -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/bs-bastet/bastet_js/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -bs-package-name bs-bastet -bs-module-type commonjs ../node_modules/bs-bastet/bastet/src/Functions-BsBastet.cmj -o node_modules/bs-bastet/bastet/src/Functions.bs.js)
 (run rm -f node_modules/bs-bastet/bastet/src/Interface.bs.js)
 (run melc -bs-ns BsBastet -I ../../../.melange.eobjs/node_modules/bs-bastet -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/bs-bastet/bastet_js/src -I ../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/runtime/js -I ../node_modules/bisect_ppx/src/common -bs-package-name bs-bastet -bs-module-type commonjs ../node_modules/bs-bastet/bastet/src/Interface-BsBastet.cmj -o node_modules/bs-bastet/bastet/src/Interface.bs.js)
(run mkdir -p node_modules/bisect_ppx/src/runtime/js)
(run cp %{sources-18} node_modules/bisect_ppx/src/runtime/js) (system "rm -f node_modules/bisect_ppx/src/runtime/js/*.{ast,cm*,d}")
 (run rm -f node_modules/bisect_ppx/src/runtime/js/jest.bs.js)
 (run melc -bs-ns Bisect -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/common -I ../node_modules/bisect_ppx/src/runtime/js  -bs-package-name bisect_ppx -bs-module-type commonjs ../node_modules/bisect_ppx/src/runtime/js/jest-Bisect.cmj -o node_modules/bisect_ppx/src/runtime/js/jest.bs.js)
 (run rm -f node_modules/bisect_ppx/src/runtime/js/runtime.bs.js)
 (run melc -bs-ns Bisect -I ../../../../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/common -I ../node_modules/bisect_ppx/src/runtime/js  -bs-package-name bisect_ppx -bs-module-type commonjs ../node_modules/bisect_ppx/src/runtime/js/runtime-Bisect.cmj -o node_modules/bisect_ppx/src/runtime/js/runtime.bs.js)
(run mkdir -p node_modules/bisect_ppx/src/common)
(run cp %{sources-19} node_modules/bisect_ppx/src/common) (system "rm -f node_modules/bisect_ppx/src/common/*.{ast,cm*,d}")
 (run rm -f node_modules/bisect_ppx/src/common/bisect_common.bs.js)
 (run melc -bs-ns Bisect -I ../../../.melange.eobjs/node_modules/bisect_ppx -I ../node_modules/bisect_ppx/src/common -I ../node_modules/bisect_ppx/src/runtime/js  -bs-package-name bisect_ppx -bs-module-type commonjs ../node_modules/bisect_ppx/src/common/bisect_common-Bisect.cmj -o node_modules/bisect_ppx/src/common/bisect_common.bs.js)
(run cp -f ../bsconfig.json .) ))) (deps (:sources-0 (glob_files src/*))
(:sources-1 (glob_files src/sandbox/*))
(:sources-2 (glob_files node_modules/reason-react/src/*))
(:sources-3 (glob_files node_modules/reason-react/src/legacy/*))
(:sources-4 (glob_files node_modules/relude-fetch/src/*))
(:sources-5 (glob_files node_modules/bs-fetch/src/*))
(:sources-6 (glob_files node_modules/bs-decode/src/*))
(:sources-7 (glob_files node_modules/relude/src/*))
(:sources-8 (glob_files node_modules/relude/src/list/*))
(:sources-9 (glob_files node_modules/relude/src/extensions/*))
(:sources-10 (glob_files node_modules/relude/src/js/*))
(:sources-11 (glob_files node_modules/relude/src/array/*))
(:sources-12 (glob_files node_modules/relude/src/ior/*))
(:sources-13 (glob_files node_modules/relude/src/option/*))
(:sources-14 (glob_files node_modules/bs-css-emotion/src/*))
(:sources-15 (glob_files node_modules/bs-css/src/*))
(:sources-16 (glob_files node_modules/bs-bastet/bastet_js/src/*))
(:sources-17 (glob_files node_modules/bs-bastet/bastet/src/*))
(:sources-18 (glob_files node_modules/bisect_ppx/src/runtime/js/*))
(:sources-19 (glob_files node_modules/bisect_ppx/src/common/*))))
